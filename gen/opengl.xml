<?xml version="1.0" encoding="UTF-8"?>

<specification xmlns="http://www.opengl.org/registry/" name="OpenGL" specversion="4.3" fileversion="0.0.1" >
	<typemap >
		<type-def typename="GetHistogramParameterPName" C-lang="GLenum" />
		<type-def typename="BlendEquationModeEXT" C-lang="GLenum" />
		<type-def typename="GetFramebufferParameter" C-lang="GLenum" />
		<type-def typename="ConstUInt32" C-lang="GLuint" />
		<type-def typename="WeightPointerTypeARB" C-lang="GLenum" />
		<type-def typename="ClampColorModeARB" C-lang="GLenum" />
		<type-def typename="PathCoordType" C-lang="GLenum" />
		<type-def typename="BufferTargetARB" C-lang="GLenum" />
		<type-def typename="GLbitfield" C-lang="GLbitfield" />
		<type-def typename="PointParameterNameARB" C-lang="GLenum" />
		<type-def typename="ProgramFormatARB" C-lang="GLenum" />
		<type-def typename="PathGenMode" C-lang="GLenum" />
		<type-def typename="Float32Pointer" C-lang="GLfloat*" />
		<type-def typename="StencilOp" C-lang="GLenum" />
		<type-def typename="HistogramTargetEXT" C-lang="GLenum" />
		<type-def typename="Boolean" C-lang="GLboolean" />
		<type-def typename="CullFaceMode" C-lang="GLenum" />
		<type-def typename="AccumOp" C-lang="GLenum" />
		<type-def typename="ElementPointerTypeATI" C-lang="GLenum" />
		<type-def typename="MatrixMode" C-lang="GLenum" />
		<type-def typename="LogicOp" C-lang="GLenum" />
		<type-def typename="FogPointerTypeIBM" C-lang="GLenum" />
		<type-def typename="TextureEnvParameter" C-lang="GLenum" />
		<type-def typename="ColorMaterialParameter" C-lang="GLenum" />
		<type-def typename="BinormalPointerTypeEXT" C-lang="GLenum" />
		<type-def typename="cl_event" C-lang="struct _cl_event *" />
		<type-def typename="CoordI" C-lang="GLint" />
		<type-def typename="ColorTableTargetSGI" C-lang="GLenum" />
		<type-def typename="RenderbufferParameterName" C-lang="GLenum" />
		<type-def typename="VertexShaderStorageTypeEXT" C-lang="GLenum" />
		<type-def typename="FramebufferStatus" C-lang="GLenum" />
		<type-def typename="PixelTransferParameter" C-lang="GLenum" />
		<type-def typename="FunctionPointer" C-lang="_GLfuncptr" />
		<type-def typename="PreserveModeATI" C-lang="GLenum" />
		<type-def typename="TextureParameterName" C-lang="GLenum" />
		<type-def typename="ReplacementCodeTypeSUN" C-lang="GLenum" />
		<type-def typename="Texture" C-lang="GLuint" />
		<type-def typename="VertexAttribEnum" C-lang="GLenum" />
		<type-def typename="BeginMode" C-lang="GLenum" />
		<type-def typename="Sizeiptr" C-lang="GLsizeiptr" />
		<type-def typename="TextureCoordName" C-lang="GLenum" />
		<type-def typename="Void" C-lang="GLvoid" />
		<type-def typename="Float32" C-lang="GLfloat" />
		<type-def typename="cl_context" C-lang="struct _cl_context *" />
		<type-def typename="NormalPointerType" C-lang="GLenum" />
		<type-def typename="DepthFunction" C-lang="GLenum" />
		<type-def typename="PathFontTarget" C-lang="GLenum" />
		<type-def typename="ConstCharPointer" C-lang="GLchar* const" />
		<type-def typename="ProgramStringProperty" C-lang="GLenum" />
		<type-def typename="ColorUB" C-lang="GLubyte" />
		<type-def typename="PathListMode" C-lang="GLenum" />
		<type-def typename="ProgramProperty" C-lang="GLenum" />
		<type-def typename="InterleavedArrayFormat" C-lang="GLenum" />
		<type-def typename="void" C-lang="*" />
		<type-def typename="PixelTexGenModeSGIX" C-lang="GLenum" />
		<type-def typename="ColorI" C-lang="GLint" />
		<type-def typename="OcclusionQueryParameterNameNV" C-lang="GLenum" />
		<type-def typename="Path" C-lang="GLuint" />
		<type-def typename="Int16" C-lang="GLshort" />
		<type-def typename="PixelTransformPNameEXT" C-lang="GLenum" />
		<type-def typename="SwizzleOpATI" C-lang="GLenum" />
		<type-def typename="QuadricDrawStyle" C-lang="GLenum" />
		<type-def typename="GetVariantValueEXT" C-lang="GLenum" />
		<type-def typename="TypeEnum" C-lang="GLenum" />
		<type-def typename="PixelDataRangeTargetNV" C-lang="GLenum" />
		<type-def typename="ProgramNV" C-lang="GLuint" />
		<type-def typename="CullParameterEXT" C-lang="GLenum" />
		<type-def typename="VertexAttribEnumNV" C-lang="GLenum" />
		<type-def typename="ClampColorTargetARB" C-lang="GLenum" />
		<type-def typename="VertexPointerType" C-lang="GLenum" />
		<type-def typename="ListParameterName" C-lang="GLenum" />
		<type-def typename="FramebufferAttachment" C-lang="GLenum" />
		<type-def typename="QuadricObj" C-lang="GLUquadric*" />
		<type-def typename="BufferUsageARB" C-lang="GLenum" />
		<type-def typename="SeparableTarget" C-lang="GLenum" />
		<type-def typename="Int32" C-lang="GLint" />
		<type-def typename="String" C-lang="const GLubyte *" />
		<type-def typename="PixelFormat" C-lang="GLenum" />
		<type-def typename="ReplacementCodeSUN" C-lang="GLuint" />
		<type-def typename="MapTargetNV" C-lang="GLenum" />
		<type-def typename="ColorIndexValueF" C-lang="GLfloat" />
		<type-def typename="GLDEBUGPROC" C-lang="GLDEBUGPROC" />
		<type-def typename="GetMultisamplePNameNV" C-lang="GLenum" />
		<type-def typename="FeedbackElement" C-lang="GLfloat" />
		<type-def typename="ClampedStencilValue" C-lang="GLint" />
		<type-def typename="ImageTransformTargetHP" C-lang="GLenum" />
		<type-def typename="Char" C-lang="GLchar" />
		<type-def typename="charARB" C-lang="GLcharARB" />
		<type-def typename="ControlPointNV" C-lang="GLvoid" />
		<type-def typename="ClampedFloat32" C-lang="GLclampf" />
		<type-def typename="BufferAccessARB" C-lang="GLenum" />
		<type-def typename="PathColorFormat" C-lang="GLenum" />
		<type-def typename="WinCoord" C-lang="GLint" />
		<type-def typename="TextureNormalModeEXT" C-lang="GLenum" />
		<type-def typename="ClientAttribMask" C-lang="GLbitfield" />
		<type-def typename="LightEnvParameterSGIX" C-lang="GLenum" />
		<type-def typename="BlendFuncSeparateParameterEXT" C-lang="GLenum" />
		<type-def typename="FogParameter" C-lang="GLenum" />
		<type-def typename="SeparableTargetEXT" C-lang="GLenum" />
		<type-def typename="MapTarget" C-lang="GLenum" />
		<type-def typename="CheckedFloat32" C-lang="GLfloat" />
		<type-def typename="CompressedTextureARB" C-lang="GLvoid" />
		<type-def typename="Int8" C-lang="GLbyte" />
		<type-def typename="MaskedColorIndexValueF" C-lang="GLfloat" />
		<type-def typename="EnableCap" C-lang="GLenum" />
		<type-def typename="QuadricNormal" C-lang="GLenum" />
		<type-def typename="LineStipple" C-lang="GLushort" />
		<type-def typename="HistogramTarget" C-lang="GLenum" />
		<type-def typename="DrawBufferMode" C-lang="GLenum" />
		<type-def typename="GetColorTableParameterPNameSGI" C-lang="GLenum" />
		<type-def typename="CombinerScaleNV" C-lang="GLenum" />
		<type-def typename="PathFillMode" C-lang="GLenum" />
		<type-def typename="ColorD" C-lang="GLdouble" />
		<type-def typename="ColorTableParameterPName" C-lang="GLenum" />
		<type-def typename="ParameterRangeEXT" C-lang="GLenum" />
		<type-def typename="FenceNV" C-lang="GLuint" />
		<type-def typename="PathMetricMask" C-lang="GLbitfield" />
		<type-def typename="RenderingMode" C-lang="GLenum" />
		<type-def typename="vdpauSurfaceNV" C-lang="GLvdpauSurfaceNV" />
		<type-def typename="StencilValue" C-lang="GLint" />
		<type-def typename="FfdTargetSGIX" C-lang="GLenum" />
		<type-def typename="IglooParameterSGIX" C-lang="GLvoid" />
		<type-def typename="FenceParameterNameNV" C-lang="GLenum" />
		<type-def typename="CoordS" C-lang="GLshort" />
		<type-def typename="BufferOffset" C-lang="GLintptr" />
		<type-def typename="HintTarget" C-lang="GLenum" />
		<type-def typename="ConstInt32" C-lang="GLint" />
		<type-def typename="MeshMode2" C-lang="GLenum" />
		<type-def typename="TangentPointerTypeEXT" C-lang="GLenum" />
		<type-def typename="GetPointervPName" C-lang="GLenum" />
		<type-def typename="ColorUS" C-lang="GLushort" />
		<type-def typename="GetHistogramParameterPNameEXT" C-lang="GLenum" />
		<type-def typename="ColorIndexValueS" C-lang="GLshort" />
		<type-def typename="VertexBufferObjectAccess" C-lang="GLenum" />
		<type-def typename="TessCallback" C-lang="GLenum" />
		<type-def typename="CombinerParameterNV" C-lang="GLenum" />
		<type-def typename="PathTransformType" C-lang="GLenum" />
		<type-def typename="VariantCapEXT" C-lang="GLenum" />
		<type-def typename="PathCommand" C-lang="GLubyte" />
		<type-def typename="GetTextureParameter" C-lang="GLenum" />
		<type-def typename="TextureInternalFormat" C-lang="GLenum" />
		<type-def typename="BufferSizeARB" C-lang="GLsizeiptrARB" />
		<type-def typename="ReadBufferMode" C-lang="GLenum" />
		<type-def typename="Intptr" C-lang="GLintptr" />
		<type-def typename="SizeI" C-lang="GLsizei" />
		<type-def typename="HintTargetPGI" C-lang="GLenum" />
		<type-def typename="ProgramStringPropertyARB" C-lang="GLenum" />
		<type-def typename="ListMode" C-lang="GLenum" />
		<type-def typename="Int64EXT" C-lang="GLint64EXT" />
		<type-def typename="RenderbufferTarget" C-lang="GLenum" />
		<type-def typename="UInt64EXT" C-lang="GLuint64EXT" />
		<type-def typename="ConvolutionParameterEXT" C-lang="GLenum" />
		<type-def typename="ImageTransformPNameHP" C-lang="GLenum" />
		<type-def typename="ListNameType" C-lang="GLenum" />
		<type-def typename="ConstFloat32" C-lang="GLfloat" />
		<type-def typename="ProgramTarget" C-lang="GLenum" />
		<type-def typename="ColorS" C-lang="GLshort" />
		<type-def typename="charPointerARB" C-lang="GLcharARB*" />
		<type-def typename="CombinerStageNV" C-lang="GLenum" />
		<type-def typename="Half16NV" C-lang="GLhalfNV" />
		<type-def typename="ProgramParameterPName" C-lang="GLenum" />
		<type-def typename="List" C-lang="GLuint" />
		<type-def typename="CoordF" C-lang="GLfloat" />
		<type-def typename="StencilFunction" C-lang="GLenum" />
		<type-def typename="MapAttribParameterNV" C-lang="GLenum" />
		<type-def typename="ScalarType" C-lang="GLenum" />
		<type-def typename="MapParameterNV" C-lang="GLenum" />
		<type-def typename="CheckedInt32" C-lang="GLint" />
		<type-def typename="PathElementType" C-lang="GLenum" />
		<type-def typename="GetMinmaxParameterPName" C-lang="GLenum" />
		<type-def typename="MeshMode1" C-lang="GLenum" />
		<type-def typename="MatrixIndexPointerTypeARB" C-lang="GLenum" />
		<type-def typename="PathColor" C-lang="GLenum" />
		<type-def typename="PixelTexGenParameterNameSGIS" C-lang="GLenum" />
		<type-def typename="GetPName" C-lang="GLenum" />
		<type-def typename="BufferOffsetARB" C-lang="GLintptrARB" />
		<type-def typename="SampleMaskNV" C-lang="GLbitfield" />
		<type-def typename="FfdMaskSGIX" C-lang="GLbitfield" />
		<type-def typename="LightModelParameter" C-lang="GLenum" />
		<type-def typename="GetTexBumpParameterATI" C-lang="GLenum" />
		<type-def typename="ColorPointerType" C-lang="GLenum" />
		<type-def typename="ColorB" C-lang="GLbyte" />
		<type-def typename="HintMode" C-lang="GLenum" />
		<type-def typename="ClampedFloat64" C-lang="GLclampd" />
		<type-def typename="PixelInternalFormat" C-lang="GLenum" />
		<type-def typename="ConvolutionParameter" C-lang="GLenum" />
		<type-def typename="FogPointerTypeEXT" C-lang="GLenum" />
		<type-def typename="EvalTargetNV" C-lang="GLenum" />
		<type-def typename="MaterialParameter" C-lang="GLenum" />
		<type-def typename="CombinerRegisterNV" C-lang="GLenum" />
		<type-def typename="NurbsTrim" C-lang="GLenum" />
		<type-def typename="GetColorTableParameterPName" C-lang="GLenum" />
		<type-def typename="SamplePatternEXT" C-lang="GLenum" />
		<type-def typename="FragmentLightNameSGIX" C-lang="GLenum" />
		<type-def typename="Float64" C-lang="GLdouble" />
		<type-def typename="PolygonMode" C-lang="GLenum" />
		<type-def typename="ProgramParameterNV" C-lang="GLenum" />
		<type-def typename="DrawBufferName" C-lang="GLint" />
		<type-def typename="PathHandleMissingGlyphs" C-lang="GLenum" />
		<type-def typename="ProgramFormat" C-lang="GLenum" />
		<type-def typename="GetMapQuery" C-lang="GLenum" />
		<type-def typename="CoordD" C-lang="GLdouble" />
		<type-def typename="sync" C-lang="GLsync" />
		<type-def typename="PixelTransformTargetEXT" C-lang="GLenum" />
		<type-def typename="VertexShaderCoordOutEXT" C-lang="GLenum" />
		<type-def typename="IndexFunctionEXT" C-lang="GLenum" />
		<type-def typename="ColorTableTarget" C-lang="GLenum" />
		<type-def typename="NurbsCallback" C-lang="GLenum" />
		<type-def typename="SamplePassARB" C-lang="GLenum" />
		<type-def typename="BooleanPointer" C-lang="GLboolean*" />
		<type-def typename="BlendingFactorDest" C-lang="GLenum" />
		<type-def typename="MinmaxTarget" C-lang="GLenum" />
		<type-def typename="ProgramCharacterNV" C-lang="GLubyte" />
		<type-def typename="ClearBufferMask" C-lang="GLbitfield" />
		<type-def typename="FenceConditionNV" C-lang="GLenum" />
		<type-def typename="AttribMask" C-lang="GLbitfield" />
		<type-def typename="MaskedColorIndexValueI" C-lang="GLuint" />
		<type-def typename="QuadricCallback" C-lang="GLenum" />
		<type-def typename="FragmentOpATI" C-lang="GLenum" />
		<type-def typename="EvalMapsModeNV" C-lang="GLenum" />
		<type-def typename="VertexAttribPointerTypeARB" C-lang="GLenum" />
		<type-def typename="QuadricOrientation" C-lang="GLenum" />
		<type-def typename="TextureTarget" C-lang="GLenum" />
		<type-def typename="SelectName" C-lang="GLuint" />
		<type-def typename="Int64" C-lang="GLint64" />
		<type-def typename="VertexShaderWriteMaskEXT" C-lang="GLenum" />
		<type-def typename="FeedbackType" C-lang="GLenum" />
		<type-def typename="NurbsProperty" C-lang="GLenum" />
		<type-def typename="UInt64" C-lang="GLuint64" />
		<type-def typename="PathElement" C-lang="GLvoid" />
		<type-def typename="ColorTableParameterPNameSGI" C-lang="GLenum" />
		<type-def typename="ColorIndexValueI" C-lang="GLint" />
		<type-def typename="CombinerVariableNV" C-lang="GLenum" />
		<type-def typename="VertexAttribPointerPropertyARB" C-lang="GLenum" />
		<type-def typename="TextureComponentCount" C-lang="GLint" />
		<type-def typename="Float64Pointer" C-lang="GLdouble*" />
		<type-def typename="VoidPointer" C-lang="GLvoid*" />
		<type-def typename="FragmentLightModelParameterSGIX" C-lang="GLenum" />
		<type-def typename="GLDEBUGPROCARB" C-lang="GLDEBUGPROCARB" />
		<type-def typename="LightTextureModeEXT" C-lang="GLenum" />
		<type-def typename="CombinerBiasNV" C-lang="GLenum" />
		<type-def typename="ErrorCode" C-lang="GLenum" />
		<type-def typename="CombinerPortionNV" C-lang="GLenum" />
		<type-def typename="CharPointer" C-lang="GLchar*" />
		<type-def typename="DrawElementsType" C-lang="GLenum" />
		<type-def typename="IndexPointerType" C-lang="GLenum" />
		<type-def typename="VertexShaderOpEXT" C-lang="GLenum" />
		<type-def typename="GetMinmaxParameterPNameEXT" C-lang="GLenum" />
		<type-def typename="PixelStoreParameter" C-lang="GLenum" />
		<type-def typename="MaskedStencilValue" C-lang="GLuint" />
		<type-def typename="VertexAttribPointerTypeNV" C-lang="GLenum" />
		<type-def typename="VertexShaderParameterEXT" C-lang="GLenum" />
		<type-def typename="CombinerMappingNV" C-lang="GLenum" />
		<type-def typename="TessContour" C-lang="GLenum" />
		<type-def typename="TesselatorObj" C-lang="GLUtesselator*" />
		<type-def typename="TexCoordPointerType" C-lang="GLenum" />
		<type-def typename="BlendEquationMode" C-lang="GLenum" />
		<type-def typename="ConstVoid" C-lang="GLvoid" />
		<type-def typename="ArrayObjectUsageATI" C-lang="GLenum" />
		<type-def typename="TextureFilterSGIS" C-lang="GLenum" />
		<type-def typename="TextureGenParameter" C-lang="GLenum" />
		<type-def typename="ColorF" C-lang="GLfloat" />
		<type-def typename="PixelType" C-lang="GLenum" />
		<type-def typename="PNTrianglesPNameATI" C-lang="GLenum" />
		<type-def typename="TextureUnit" C-lang="GLenum" />
		<type-def typename="ProgramTargetARB" C-lang="GLenum" />
		<type-def typename="ProgramPropertyARB" C-lang="GLenum" />
		<type-def typename="ShadingModel" C-lang="GLenum" />
		<type-def typename="ControlPointTypeNV" C-lang="GLenum" />
		<type-def typename="FrontFaceDirection" C-lang="GLenum" />
		<type-def typename="UInt16" C-lang="GLushort" />
		<type-def typename="IndexMaterialParameterEXT" C-lang="GLenum" />
		<type-def typename="AlphaFunction" C-lang="GLenum" />
		<type-def typename="ColorIndexValueD" C-lang="GLdouble" />
		<type-def typename="PixelMap" C-lang="GLenum" />
		<type-def typename="StencilFaceDirection" C-lang="GLenum" />
		<type-def typename="FragmentLightParameterSGIX" C-lang="GLenum" />
		<type-def typename="TextureEnvTarget" C-lang="GLenum" />
		<type-def typename="VertexWeightPointerTypeEXT" C-lang="GLenum" />
		<type-def typename="DrawBufferModeATI" C-lang="GLenum" />
		<type-def typename="ConstVoidPointer" C-lang="GLvoid* const" />
		<type-def typename="TexBumpParameterATI" C-lang="GLenum" />
		<type-def typename="UInt8" C-lang="GLubyte" />
		<type-def typename="FramebufferTarget" C-lang="GLenum" />
		<type-def typename="LightName" C-lang="GLenum" />
		<type-def typename="ColorUI" C-lang="GLuint" />
		<type-def typename="NurbsObj" C-lang="GLUnurbs*" />
		<type-def typename="CombinerComponentUsageNV" C-lang="GLenum" />
		<type-def typename="DataTypeEXT" C-lang="GLenum" />
		<type-def typename="IglooFunctionSelectSGIX" C-lang="GLenum" />
		<type-def typename="SecondaryColorPointerTypeIBM" C-lang="GLenum" />
		<type-def typename="ClampedColorF" C-lang="GLclampf" />
		<type-def typename="PixelCopyType" C-lang="GLenum" />
		<type-def typename="GetConvolutionParameterPName" C-lang="GLenum" />
		<type-def typename="BlendingFactorSrc" C-lang="GLenum" />
		<type-def typename="TessProperty" C-lang="GLenum" />
		<type-def typename="VertexShaderTextureUnitParameter" C-lang="GLenum" />
		<type-def typename="MapTypeNV" C-lang="GLenum" />
		<type-def typename="ConvolutionTargetEXT" C-lang="GLenum" />
		<type-def typename="SpriteParameterNameSGIX" C-lang="GLenum" />
		<type-def typename="LightTexturePNameEXT" C-lang="GLenum" />
		<type-def typename="MatrixTransformNV" C-lang="GLenum" />
		<type-def typename="VertexStreamATI" C-lang="GLenum" />
		<type-def typename="MinmaxTargetEXT" C-lang="GLenum" />
		<type-def typename="SamplePatternSGIS" C-lang="GLenum" />
		<type-def typename="BufferSize" C-lang="GLsizeiptr" />
		<type-def typename="VertexArrayPNameAPPLE" C-lang="GLenum" />
		<type-def typename="BufferPNameARB" C-lang="GLenum" />
		<type-def typename="BufferPointerNameARB" C-lang="GLenum" />
		<type-def typename="ObjectTypeAPPLE" C-lang="GLenum" />
		<type-def typename="UInt32" C-lang="GLuint" />
		<type-def typename="GLenum" C-lang="GLenum" />
		<type-def typename="ClipPlaneName" C-lang="GLenum" />
		<type-def typename="handleARB" C-lang="GLhandleARB" />
		<type-def typename="ConvolutionTarget" C-lang="GLenum" />
		<type-def typename="FramebufferAttachmentParameterName" C-lang="GLenum" />
		<type-def typename="Framebuffer" C-lang="GLuint" />
		<type-def typename="ArrayObjectPNameATI" C-lang="GLenum" />
		<type-def typename="VertexBufferObjectParameter" C-lang="GLenum" />
		<type-def typename="VertexBufferObjectUsage" C-lang="GLenum" />
		<type-def typename="BufferAccessMask" C-lang="GLbitfield" />
		<type-def typename="MaterialFace" C-lang="GLenum" />
		<type-def typename="LightParameter" C-lang="GLenum" />
		<type-def typename="GLDEBUGPROCAMD" C-lang="GLDEBUGPROCAMD" />
		<type-def typename="ColorIndexValueUB" C-lang="GLubyte" />
		<type-def typename="PathCoverMode" C-lang="GLenum" />
		<type-def typename="VertexAttribPropertyARB" C-lang="GLenum" />
		<type-def typename="StringName" C-lang="GLenum" />
		<type-def typename="PathFontStyle" C-lang="GLbitfield" />
		<type-def typename="PathParameter" C-lang="GLenum" />
		<type-def typename="PathStringFormat" C-lang="GLenum" />
		<type-def typename="Renderbuffer" C-lang="GLuint" />
	</typemap>
	<extensions >
		<ext name="ARB_imaging" />
		<ext name="ARB_multitexture" />
		<ext name="ARB_transpose_matrix" />
		<ext name="ARB_multisample" />
		<ext name="ARB_texture_env_add" />
		<ext name="ARB_texture_cube_map" />
		<ext name="ARB_texture_compression" />
		<ext name="ARB_texture_border_clamp" />
		<ext name="ARB_point_parameters" />
		<ext name="ARB_vertex_blend" />
		<ext name="ARB_matrix_palette" />
		<ext name="ARB_texture_env_combine" />
		<ext name="ARB_texture_env_crossbar" />
		<ext name="ARB_texture_env_dot3" />
		<ext name="ARB_texture_mirrored_repeat" />
		<ext name="ARB_depth_texture" />
		<ext name="ARB_shadow" />
		<ext name="ARB_shadow_ambient" />
		<ext name="ARB_window_pos" />
		<ext name="ARB_vertex_program" />
		<ext name="ARB_fragment_program" />
		<ext name="ARB_vertex_buffer_object" />
		<ext name="ARB_occlusion_query" />
		<ext name="ARB_shader_objects" />
		<ext name="ARB_vertex_shader" />
		<ext name="ARB_fragment_shader" />
		<ext name="ARB_shading_language_100" />
		<ext name="ARB_texture_non_power_of_two" />
		<ext name="ARB_point_sprite" />
		<ext name="ARB_fragment_program_shadow" />
		<ext name="ARB_draw_buffers" />
		<ext name="ARB_texture_rectangle" />
		<ext name="ARB_color_buffer_float" />
		<ext name="ARB_half_float_pixel" />
		<ext name="ARB_texture_float" />
		<ext name="ARB_pixel_buffer_object" />
		<ext name="ARB_depth_buffer_float" />
		<ext name="ARB_draw_instanced" />
		<ext name="ARB_framebuffer_object" />
		<ext name="ARB_framebuffer_sRGB" />
		<ext name="ARB_geometry_shader4" />
		<ext name="ARB_half_float_vertex" />
		<ext name="ARB_instanced_arrays" />
		<ext name="ARB_map_buffer_range" />
		<ext name="ARB_texture_buffer_object" />
		<ext name="ARB_texture_compression_rgtc" />
		<ext name="ARB_texture_rg" />
		<ext name="ARB_vertex_array_object" />
		<ext name="ARB_uniform_buffer_object" />
		<ext name="ARB_compatibility" />
		<ext name="ARB_copy_buffer" />
		<ext name="ARB_shader_texture_lod" />
		<ext name="ARB_depth_clamp" />
		<ext name="ARB_draw_elements_base_vertex" />
		<ext name="ARB_fragment_coord_conventions" />
		<ext name="ARB_provoking_vertex" />
		<ext name="ARB_seamless_cube_map" />
		<ext name="ARB_sync" />
		<ext name="ARB_texture_multisample" />
		<ext name="ARB_vertex_array_bgra" />
		<ext name="ARB_draw_buffers_blend" />
		<ext name="ARB_sample_shading" />
		<ext name="ARB_texture_cube_map_array" />
		<ext name="ARB_texture_gather" />
		<ext name="ARB_texture_query_lod" />
		<ext name="ARB_shading_language_include" />
		<ext name="ARB_texture_compression_bptc" />
		<ext name="ARB_blend_func_extended" />
		<ext name="ARB_explicit_attrib_location" />
		<ext name="ARB_occlusion_query2" />
		<ext name="ARB_sampler_objects" />
		<ext name="ARB_shader_bit_encoding" />
		<ext name="ARB_texture_rgb10_a2ui" />
		<ext name="ARB_texture_swizzle" />
		<ext name="ARB_timer_query" />
		<ext name="ARB_vertex_type_2_10_10_10_rev" />
		<ext name="ARB_draw_indirect" />
		<ext name="ARB_gpu_shader5" />
		<ext name="ARB_gpu_shader_fp64" />
		<ext name="ARB_shader_subroutine" />
		<ext name="ARB_tessellation_shader" />
		<ext name="ARB_texture_buffer_object_rgb32" />
		<ext name="ARB_transform_feedback2" />
		<ext name="ARB_transform_feedback3" />
		<ext name="ARB_ES2_compatibility" />
		<ext name="ARB_get_program_binary" />
		<ext name="ARB_separate_shader_objects" />
		<ext name="ARB_shader_precision" />
		<ext name="ARB_vertex_attrib_64bit" />
		<ext name="ARB_viewport_array" />
		<ext name="ARB_cl_event" />
		<ext name="ARB_debug_output" />
		<ext name="ARB_robustness" />
		<ext name="ARB_shader_stencil_export" />
		<ext name="ARB_base_instance" />
		<ext name="ARB_shading_language_420pack" />
		<ext name="ARB_transform_feedback_instanced" />
		<ext name="ARB_compressed_texture_pixel_storage" />
		<ext name="ARB_conservative_depth" />
		<ext name="ARB_internalformat_query" />
		<ext name="ARB_map_buffer_alignment" />
		<ext name="ARB_shader_atomic_counters" />
		<ext name="ARB_shader_image_load_store" />
		<ext name="ARB_shading_language_packing" />
		<ext name="ARB_texture_storage" />
		<ext name="KHR_texture_compression_astc_ldr" />
		<ext name="KHR_debug" />
		<ext name="ARB_arrays_of_arrays" />
		<ext name="ARB_clear_buffer_object" />
		<ext name="ARB_compute_shader" />
		<ext name="ARB_copy_image" />
		<ext name="ARB_texture_view" />
		<ext name="ARB_vertex_attrib_binding" />
		<ext name="ARB_robustness_isolation" />
		<ext name="ARB_ES3_compatibility" />
		<ext name="ARB_explicit_uniform_location" />
		<ext name="ARB_fragment_layer_viewport" />
		<ext name="ARB_framebuffer_no_attachments" />
		<ext name="ARB_internalformat_query2" />
		<ext name="ARB_invalidate_subdata" />
		<ext name="ARB_multi_draw_indirect" />
		<ext name="ARB_program_interface_query" />
		<ext name="ARB_robust_buffer_access_behavior" />
		<ext name="ARB_shader_image_size" />
		<ext name="ARB_shader_storage_buffer_object" />
		<ext name="ARB_stencil_texturing" />
		<ext name="ARB_texture_buffer_range" />
		<ext name="ARB_texture_query_levels" />
		<ext name="ARB_texture_storage_multisample" />
		<ext name="EXT_abgr" />
		<ext name="EXT_blend_color" />
		<ext name="EXT_polygon_offset" />
		<ext name="EXT_texture" />
		<ext name="EXT_texture3D" />
		<ext name="SGIS_texture_filter4" />
		<ext name="EXT_subtexture" />
		<ext name="EXT_copy_texture" />
		<ext name="EXT_histogram" />
		<ext name="EXT_convolution" />
		<ext name="SGI_color_matrix" />
		<ext name="SGI_color_table" />
		<ext name="SGIS_pixel_texture" />
		<ext name="SGIX_pixel_texture" />
		<ext name="SGIS_texture4D" />
		<ext name="SGI_texture_color_table" />
		<ext name="EXT_cmyka" />
		<ext name="EXT_texture_object" />
		<ext name="SGIS_detail_texture" />
		<ext name="SGIS_sharpen_texture" />
		<ext name="EXT_packed_pixels" />
		<ext name="SGIS_texture_lod" />
		<ext name="SGIS_multisample" />
		<ext name="EXT_rescale_normal" />
		<ext name="EXT_vertex_array" />
		<ext name="EXT_misc_attribute" />
		<ext name="SGIS_generate_mipmap" />
		<ext name="SGIX_clipmap" />
		<ext name="SGIX_shadow" />
		<ext name="SGIS_texture_edge_clamp" />
		<ext name="SGIS_texture_border_clamp" />
		<ext name="EXT_blend_minmax" />
		<ext name="EXT_blend_subtract" />
		<ext name="EXT_blend_logic_op" />
		<ext name="SGIX_interlace" />
		<ext name="SGIX_pixel_tiles" />
		<ext name="SGIS_texture_select" />
		<ext name="SGIX_sprite" />
		<ext name="SGIX_texture_multi_buffer" />
		<ext name="EXT_point_parameters" />
		<ext name="SGIS_point_parameters" />
		<ext name="SGIX_instruments" />
		<ext name="SGIX_texture_scale_bias" />
		<ext name="SGIX_framezoom" />
		<ext name="SGIX_tag_sample_buffer" />
		<ext name="FfdMaskSGIX" />
		<ext name="SGIX_polynomial_ffd" />
		<ext name="SGIX_reference_plane" />
		<ext name="SGIX_flush_raster" />
		<ext name="SGIX_depth_texture" />
		<ext name="SGIS_fog_function" />
		<ext name="SGIX_fog_offset" />
		<ext name="HP_image_transform" />
		<ext name="HP_convolution_border_modes" />
		<ext name="INGR_palette_buffer" />
		<ext name="SGIX_texture_add_env" />
		<ext name="EXT_color_subtable" />
		<ext name="PGI_vertex_hints" />
		<ext name="PGI_misc_hints" />
		<ext name="EXT_paletted_texture" />
		<ext name="EXT_clip_volume_hint" />
		<ext name="SGIX_list_priority" />
		<ext name="SGIX_ir_instrument1" />
		<ext name="SGIX_calligraphic_fragment" />
		<ext name="SGIX_texture_lod_bias" />
		<ext name="SGIX_shadow_ambient" />
		<ext name="EXT_index_texture" />
		<ext name="EXT_index_material" />
		<ext name="EXT_index_func" />
		<ext name="EXT_index_array_formats" />
		<ext name="EXT_compiled_vertex_array" />
		<ext name="EXT_cull_vertex" />
		<ext name="SGIX_ycrcb" />
		<ext name="SGIX_fragment_lighting" />
		<ext name="IBM_rasterpos_clip" />
		<ext name="HP_texture_lighting" />
		<ext name="EXT_draw_range_elements" />
		<ext name="WIN_phong_shading" />
		<ext name="WIN_specular_fog" />
		<ext name="EXT_light_texture" />
		<ext name="SGIX_blend_alpha_minmax" />
		<ext name="SGIX_impact_pixel_texture" />
		<ext name="EXT_bgra" />
		<ext name="SGIX_async" />
		<ext name="SGIX_async_pixel" />
		<ext name="SGIX_async_histogram" />
		<ext name="INTEL_texture_scissor" />
		<ext name="INTEL_parallel_arrays" />
		<ext name="HP_occlusion_test" />
		<ext name="EXT_pixel_transform" />
		<ext name="EXT_pixel_transform_color_table" />
		<ext name="EXT_shared_texture_palette" />
		<ext name="EXT_separate_specular_color" />
		<ext name="EXT_secondary_color" />
		<ext name="EXT_texture_perturb_normal" />
		<ext name="EXT_multi_draw_arrays" />
		<ext name="EXT_fog_coord" />
		<ext name="REND_screen_coordinates" />
		<ext name="EXT_coordinate_frame" />
		<ext name="EXT_texture_env_combine" />
		<ext name="APPLE_specular_vector" />
		<ext name="APPLE_transform_hint" />
		<ext name="SGIX_fog_scale" />
		<ext name="SUNX_constant_data" />
		<ext name="SUN_global_alpha" />
		<ext name="SUN_triangle_list" />
		<ext name="SUN_vertex" />
		<ext name="EXT_blend_func_separate" />
		<ext name="INGR_color_clamp" />
		<ext name="INGR_interlace_read" />
		<ext name="EXT_stencil_wrap" />
		<ext name="EXT_422_pixels" />
		<ext name="NV_texgen_reflection" />
		<ext name="EXT_texture_cube_map" />
		<ext name="SUN_convolution_border_modes" />
		<ext name="EXT_texture_env_add" />
		<ext name="EXT_texture_lod_bias" />
		<ext name="EXT_texture_filter_anisotropic" />
		<ext name="EXT_vertex_weighting" />
		<ext name="NV_light_max_exponent" />
		<ext name="NV_vertex_array_range" />
		<ext name="NV_register_combiners" />
		<ext name="NV_fog_distance" />
		<ext name="NV_texgen_emboss" />
		<ext name="NV_blend_square" />
		<ext name="NV_texture_env_combine4" />
		<ext name="MESA_resize_buffers" />
		<ext name="MESA_window_pos" />
		<ext name="EXT_texture_compression_s3tc" />
		<ext name="IBM_cull_vertex" />
		<ext name="IBM_multimode_draw_arrays" />
		<ext name="IBM_vertex_array_lists" />
		<ext name="SGIX_subsample" />
		<ext name="SGIX_ycrcb_subsample" />
		<ext name="SGIX_ycrcba" />
		<ext name="SGI_depth_pass_instrument" />
		<ext name="3DFX_texture_compression_FXT1" />
		<ext name="3DFX_multisample" />
		<ext name="3DFX_tbuffer" />
		<ext name="EXT_multisample" />
		<ext name="SGIX_vertex_preclip" />
		<ext name="SGIX_convolution_accuracy" />
		<ext name="SGIX_resample" />
		<ext name="SGIS_point_line_texgen" />
		<ext name="SGIS_texture_color_mask" />
		<ext name="EXT_texture_env_dot3" />
		<ext name="ATI_texture_mirror_once" />
		<ext name="NV_fence" />
		<ext name="IBM_texture_mirrored_repeat" />
		<ext name="NV_evaluators" />
		<ext name="NV_packed_depth_stencil" />
		<ext name="NV_register_combiners2" />
		<ext name="NV_texture_compression_vtc" />
		<ext name="NV_texture_rectangle" />
		<ext name="NV_texture_shader" />
		<ext name="NV_texture_shader2" />
		<ext name="NV_vertex_array_range2" />
		<ext name="NV_vertex_program" />
		<ext name="SGIX_texture_coordinate_clamp" />
		<ext name="SGIX_scalebias_hint" />
		<ext name="OML_interlace" />
		<ext name="OML_subsample" />
		<ext name="OML_resample" />
		<ext name="NV_copy_depth_to_color" />
		<ext name="ATI_envmap_bumpmap" />
		<ext name="ATI_fragment_shader" />
		<ext name="ATI_pn_triangles" />
		<ext name="ATI_vertex_array_object" />
		<ext name="EXT_vertex_shader" />
		<ext name="ATI_vertex_streams" />
		<ext name="ATI_element_array" />
		<ext name="SUN_mesh_array" />
		<ext name="SUN_slice_accum" />
		<ext name="NV_multisample_filter_hint" />
		<ext name="NV_depth_clamp" />
		<ext name="NV_occlusion_query" />
		<ext name="NV_point_sprite" />
		<ext name="NV_texture_shader3" />
		<ext name="NV_vertex_program1_1" />
		<ext name="EXT_shadow_funcs" />
		<ext name="EXT_stencil_two_side" />
		<ext name="ATI_text_fragment_shader" />
		<ext name="APPLE_client_storage" />
		<ext name="APPLE_element_array" />
		<ext name="APPLE_fence" />
		<ext name="APPLE_vertex_array_object" />
		<ext name="APPLE_vertex_array_range" />
		<ext name="APPLE_ycbcr_422" />
		<ext name="S3_s3tc" />
		<ext name="ATI_draw_buffers" />
		<ext name="ATI_pixel_format_float" />
		<ext name="ATI_texture_env_combine3" />
		<ext name="ATI_texture_float" />
		<ext name="NV_float_buffer" />
		<ext name="NV_fragment_program" />
		<ext name="NV_half_float" />
		<ext name="NV_pixel_data_range" />
		<ext name="NV_primitive_restart" />
		<ext name="NV_texture_expand_normal" />
		<ext name="NV_vertex_program2" />
		<ext name="ATI_map_object_buffer" />
		<ext name="ATI_separate_stencil" />
		<ext name="ATI_vertex_attrib_array_object" />
		<ext name="OES_read_format" />
		<ext name="EXT_depth_bounds_test" />
		<ext name="EXT_texture_mirror_clamp" />
		<ext name="EXT_blend_equation_separate" />
		<ext name="MESA_pack_invert" />
		<ext name="MESA_ycbcr_texture" />
		<ext name="EXT_pixel_buffer_object" />
		<ext name="NV_fragment_program_option" />
		<ext name="NV_fragment_program2" />
		<ext name="NV_vertex_program2_option" />
		<ext name="NV_vertex_program3" />
		<ext name="EXT_framebuffer_object" />
		<ext name="GREMEDY_string_marker" />
		<ext name="EXT_packed_depth_stencil" />
		<ext name="EXT_stencil_clear_tag" />
		<ext name="EXT_texture_sRGB" />
		<ext name="EXT_framebuffer_blit" />
		<ext name="EXT_framebuffer_multisample" />
		<ext name="MESAX_texture_stack" />
		<ext name="EXT_timer_query" />
		<ext name="EXT_gpu_program_parameters" />
		<ext name="APPLE_flush_buffer_range" />
		<ext name="NV_gpu_program4" />
		<ext name="NV_geometry_program4" />
		<ext name="EXT_geometry_shader4" />
		<ext name="NV_vertex_program4" />
		<ext name="EXT_gpu_shader4" />
		<ext name="EXT_draw_instanced" />
		<ext name="EXT_packed_float" />
		<ext name="EXT_texture_array" />
		<ext name="EXT_texture_buffer_object" />
		<ext name="EXT_texture_compression_latc" />
		<ext name="EXT_texture_compression_rgtc" />
		<ext name="EXT_texture_shared_exponent" />
		<ext name="NV_depth_buffer_float" />
		<ext name="NV_fragment_program4" />
		<ext name="NV_framebuffer_multisample_coverage" />
		<ext name="EXT_framebuffer_sRGB" />
		<ext name="NV_geometry_shader4" />
		<ext name="NV_parameter_buffer_object" />
		<ext name="EXT_draw_buffers2" />
		<ext name="NV_transform_feedback" />
		<ext name="EXT_bindable_uniform" />
		<ext name="EXT_texture_integer" />
		<ext name="GREMEDY_frame_terminator" />
		<ext name="NV_conditional_render" />
		<ext name="NV_present_video" />
		<ext name="EXT_transform_feedback" />
		<ext name="EXT_direct_state_access" />
		<ext name="EXT_vertex_array_bgra" />
		<ext name="EXT_texture_swizzle" />
		<ext name="NV_explicit_multisample" />
		<ext name="NV_transform_feedback2" />
		<ext name="ATI_meminfo" />
		<ext name="AMD_performance_monitor" />
		<ext name="AMD_texture_texture4" />
		<ext name="AMD_vertex_shader_tessellator" />
		<ext name="EXT_provoking_vertex" />
		<ext name="EXT_texture_snorm" />
		<ext name="AMD_draw_buffers_blend" />
		<ext name="APPLE_texture_range" />
		<ext name="APPLE_float_pixels" />
		<ext name="APPLE_vertex_program_evaluators" />
		<ext name="APPLE_aux_depth_stencil" />
		<ext name="APPLE_object_purgeable" />
		<ext name="APPLE_row_bytes" />
		<ext name="APPLE_rgb_422" />
		<ext name="NV_video_capture" />
		<ext name="NV_copy_image" />
		<ext name="EXT_separate_shader_objects" />
		<ext name="NV_parameter_buffer_object2" />
		<ext name="NV_shader_buffer_load" />
		<ext name="NV_vertex_buffer_unified_memory" />
		<ext name="NV_texture_barrier" />
		<ext name="AMD_shader_stencil_export" />
		<ext name="AMD_seamless_cubemap_per_texture" />
		<ext name="AMD_conservative_depth" />
		<ext name="EXT_shader_image_load_store" />
		<ext name="EXT_vertex_attrib_64bit" />
		<ext name="NV_gpu_program5" />
		<ext name="NV_gpu_shader5" />
		<ext name="NV_shader_buffer_store" />
		<ext name="NV_tessellation_program5" />
		<ext name="NV_vertex_attrib_integer_64bit" />
		<ext name="NV_multisample_coverage" />
		<ext name="AMD_name_gen_delete" />
		<ext name="AMD_debug_output" />
		<ext name="NV_vdpau_interop" />
		<ext name="AMD_transform_feedback3_lines_triangles" />
		<ext name="AMD_depth_clamp_separate" />
		<ext name="EXT_texture_sRGB_decode" />
		<ext name="NV_texture_multisample" />
		<ext name="AMD_blend_minmax_factor" />
		<ext name="AMD_sample_positions" />
		<ext name="EXT_x11_sync_object" />
		<ext name="AMD_multi_draw_indirect" />
		<ext name="EXT_framebuffer_multisample_blit_scaled" />
		<ext name="NV_path_rendering" />
		<ext name="AMD_pinned_memory" />
		<ext name="AMD_stencil_operation_extended" />
		<ext name="AMD_vertex_shader_viewport_index" />
		<ext name="AMD_vertex_shader_layer" />
		<ext name="NV_bindless_texture" />
		<ext name="NV_shader_atomic_float" />
		<ext name="AMD_query_buffer_object" />
		<ext name="AMD_sparse_texture" />
	</extensions>
	<enumerations >
		<enum name="DEPTH_BUFFER_BIT" value="0x00000100" version="1.1" />
		<enum name="STENCIL_BUFFER_BIT" value="0x00000400" version="1.1" />
		<enum name="COLOR_BUFFER_BIT" value="0x00004000" version="1.1" />
		<enum name="FALSE" value="0" version="1.1" />
		<enum name="TRUE" value="1" version="1.1" />
		<enum name="POINTS" value="0x0000" version="1.1" />
		<enum name="LINES" value="0x0001" version="1.1" />
		<enum name="LINE_LOOP" value="0x0002" version="1.1" />
		<enum name="LINE_STRIP" value="0x0003" version="1.1" />
		<enum name="TRIANGLES" value="0x0004" version="1.1" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TRIANGLE_STRIP" value="0x0005" version="1.1" />
		<enum name="TRIANGLE_FAN" value="0x0006" version="1.1" />
		<enum name="QUADS" value="0x0007" version="1.1" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="NEVER" value="0x0200" version="1.1" />
		<enum name="LESS" value="0x0201" version="1.1" />
		<enum name="EQUAL" value="0x0202" version="1.1" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="LEQUAL" value="0x0203" version="1.1" />
		<enum name="GREATER" value="0x0204" version="1.1" />
		<enum name="NOTEQUAL" value="0x0205" version="1.1" />
		<enum name="GEQUAL" value="0x0206" version="1.1" />
		<enum name="ALWAYS" value="0x0207" version="1.1" />
		<enum name="ZERO" value="0" version="1.1" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="ONE" value="1" version="1.1" />
		<enum name="SRC_COLOR" value="0x0300" version="1.1" />
		<enum name="ONE_MINUS_SRC_COLOR" value="0x0301" version="1.1" />
		<enum name="SRC_ALPHA" value="0x0302" version="1.1" />
		<enum name="ONE_MINUS_SRC_ALPHA" value="0x0303" version="1.1" />
		<enum name="DST_ALPHA" value="0x0304" version="1.1" />
		<enum name="ONE_MINUS_DST_ALPHA" value="0x0305" version="1.1" />
		<enum name="DST_COLOR" value="0x0306" version="1.1" />
		<enum name="ONE_MINUS_DST_COLOR" value="0x0307" version="1.1" />
		<enum name="SRC_ALPHA_SATURATE" value="0x0308" version="1.1" />
		<enum name="NONE" value="0" version="1.1" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="FRONT_LEFT" value="0x0400" version="1.1" />
		<enum name="FRONT_RIGHT" value="0x0401" version="1.1" />
		<enum name="BACK_LEFT" value="0x0402" version="1.1" />
		<enum name="BACK_RIGHT" value="0x0403" version="1.1" />
		<enum name="FRONT" value="0x0404" version="1.1" />
		<enum name="BACK" value="0x0405" version="1.1" />
		<enum name="LEFT" value="0x0406" version="1.1" />
		<enum name="RIGHT" value="0x0407" version="1.1" />
		<enum name="FRONT_AND_BACK" value="0x0408" version="1.1" />
		<enum name="NO_ERROR" value="0" version="1.1" >
			<ext name="ARB_robustness" />
		</enum>
		<enum name="INVALID_ENUM" value="0x0500" version="1.1" />
		<enum name="INVALID_VALUE" value="0x0501" version="1.1" />
		<enum name="INVALID_OPERATION" value="0x0502" version="1.1" />
		<enum name="OUT_OF_MEMORY" value="0x0505" version="1.1" />
		<enum name="CW" value="0x0900" version="1.1" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="CCW" value="0x0901" version="1.1" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="POINT_SIZE" value="0x0B11" version="1.1" />
		<enum name="POINT_SIZE_RANGE" value="0x0B12" version="1.1" />
		<enum name="POINT_SIZE_GRANULARITY" value="0x0B13" version="1.1" />
		<enum name="LINE_SMOOTH" value="0x0B20" version="1.1" />
		<enum name="LINE_WIDTH" value="0x0B21" version="1.1" />
		<enum name="LINE_WIDTH_RANGE" value="0x0B22" version="1.1" />
		<enum name="LINE_WIDTH_GRANULARITY" value="0x0B23" version="1.1" />
		<enum name="POLYGON_MODE" value="0x0B40" version="1.1" />
		<enum name="POLYGON_SMOOTH" value="0x0B41" version="1.1" />
		<enum name="CULL_FACE" value="0x0B44" version="1.1" />
		<enum name="CULL_FACE_MODE" value="0x0B45" version="1.1" />
		<enum name="FRONT_FACE" value="0x0B46" version="1.1" />
		<enum name="DEPTH_RANGE" value="0x0B70" version="1.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="DEPTH_TEST" value="0x0B71" version="1.1" />
		<enum name="DEPTH_WRITEMASK" value="0x0B72" version="1.1" />
		<enum name="DEPTH_CLEAR_VALUE" value="0x0B73" version="1.1" />
		<enum name="DEPTH_FUNC" value="0x0B74" version="1.1" />
		<enum name="STENCIL_TEST" value="0x0B90" version="1.1" />
		<enum name="STENCIL_CLEAR_VALUE" value="0x0B91" version="1.1" />
		<enum name="STENCIL_FUNC" value="0x0B92" version="1.1" />
		<enum name="STENCIL_VALUE_MASK" value="0x0B93" version="1.1" />
		<enum name="STENCIL_FAIL" value="0x0B94" version="1.1" />
		<enum name="STENCIL_PASS_DEPTH_FAIL" value="0x0B95" version="1.1" />
		<enum name="STENCIL_PASS_DEPTH_PASS" value="0x0B96" version="1.1" />
		<enum name="STENCIL_REF" value="0x0B97" version="1.1" />
		<enum name="STENCIL_WRITEMASK" value="0x0B98" version="1.1" />
		<enum name="VIEWPORT" value="0x0BA2" version="1.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="DITHER" value="0x0BD0" version="1.1" />
		<enum name="BLEND_DST" value="0x0BE0" version="1.1" />
		<enum name="BLEND_SRC" value="0x0BE1" version="1.1" />
		<enum name="BLEND" value="0x0BE2" version="1.1" />
		<enum name="LOGIC_OP_MODE" value="0x0BF0" version="1.1" />
		<enum name="COLOR_LOGIC_OP" value="0x0BF2" version="1.1" />
		<enum name="DRAW_BUFFER" value="0x0C01" version="1.1" />
		<enum name="READ_BUFFER" value="0x0C02" version="1.1" />
		<enum name="SCISSOR_BOX" value="0x0C10" version="1.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="SCISSOR_TEST" value="0x0C11" version="1.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="COLOR_CLEAR_VALUE" value="0x0C22" version="1.1" />
		<enum name="COLOR_WRITEMASK" value="0x0C23" version="1.1" />
		<enum name="DOUBLEBUFFER" value="0x0C32" version="1.1" />
		<enum name="STEREO" value="0x0C33" version="1.1" />
		<enum name="LINE_SMOOTH_HINT" value="0x0C52" version="1.1" />
		<enum name="POLYGON_SMOOTH_HINT" value="0x0C53" version="1.1" />
		<enum name="UNPACK_SWAP_BYTES" value="0x0CF0" version="1.1" />
		<enum name="UNPACK_LSB_FIRST" value="0x0CF1" version="1.1" />
		<enum name="UNPACK_ROW_LENGTH" value="0x0CF2" version="1.1" />
		<enum name="UNPACK_SKIP_ROWS" value="0x0CF3" version="1.1" />
		<enum name="UNPACK_SKIP_PIXELS" value="0x0CF4" version="1.1" />
		<enum name="UNPACK_ALIGNMENT" value="0x0CF5" version="1.1" />
		<enum name="PACK_SWAP_BYTES" value="0x0D00" version="1.1" />
		<enum name="PACK_LSB_FIRST" value="0x0D01" version="1.1" />
		<enum name="PACK_ROW_LENGTH" value="0x0D02" version="1.1" />
		<enum name="PACK_SKIP_ROWS" value="0x0D03" version="1.1" />
		<enum name="PACK_SKIP_PIXELS" value="0x0D04" version="1.1" />
		<enum name="PACK_ALIGNMENT" value="0x0D05" version="1.1" />
		<enum name="MAX_TEXTURE_SIZE" value="0x0D33" version="1.1" />
		<enum name="MAX_VIEWPORT_DIMS" value="0x0D3A" version="1.1" />
		<enum name="SUBPIXEL_BITS" value="0x0D50" version="1.1" />
		<enum name="TEXTURE_1D" value="0x0DE0" version="1.1" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_2D" value="0x0DE1" version="1.1" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="POLYGON_OFFSET_UNITS" value="0x2A00" version="1.1" />
		<enum name="POLYGON_OFFSET_POINT" value="0x2A01" version="1.1" />
		<enum name="POLYGON_OFFSET_LINE" value="0x2A02" version="1.1" />
		<enum name="POLYGON_OFFSET_FILL" value="0x8037" version="1.1" />
		<enum name="POLYGON_OFFSET_FACTOR" value="0x8038" version="1.1" />
		<enum name="TEXTURE_BINDING_1D" value="0x8068" version="1.1" />
		<enum name="TEXTURE_BINDING_2D" value="0x8069" version="1.1" />
		<enum name="TEXTURE_WIDTH" value="0x1000" version="1.1" />
		<enum name="TEXTURE_HEIGHT" value="0x1001" version="1.1" />
		<enum name="TEXTURE_INTERNAL_FORMAT" value="0x1003" version="1.1" />
		<enum name="TEXTURE_BORDER_COLOR" value="0x1004" version="1.1" />
		<enum name="TEXTURE_RED_SIZE" value="0x805C" version="1.1" />
		<enum name="TEXTURE_GREEN_SIZE" value="0x805D" version="1.1" />
		<enum name="TEXTURE_BLUE_SIZE" value="0x805E" version="1.1" />
		<enum name="TEXTURE_ALPHA_SIZE" value="0x805F" version="1.1" />
		<enum name="DONT_CARE" value="0x1100" version="1.1" />
		<enum name="FASTEST" value="0x1101" version="1.1" />
		<enum name="NICEST" value="0x1102" version="1.1" />
		<enum name="BYTE" value="0x1400" version="1.1" />
		<enum name="UNSIGNED_BYTE" value="0x1401" version="1.1" />
		<enum name="SHORT" value="0x1402" version="1.1" />
		<enum name="UNSIGNED_SHORT" value="0x1403" version="1.1" />
		<enum name="INT" value="0x1404" version="1.1" />
		<enum name="UNSIGNED_INT" value="0x1405" version="1.1" />
		<enum name="FLOAT" value="0x1406" version="1.1" />
		<enum name="DOUBLE" value="0x140A" version="1.1" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="STACK_OVERFLOW" value="0x0503" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="STACK_UNDERFLOW" value="0x0504" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="CLEAR" value="0x1500" version="1.1" />
		<enum name="AND" value="0x1501" version="1.1" />
		<enum name="AND_REVERSE" value="0x1502" version="1.1" />
		<enum name="COPY" value="0x1503" version="1.1" />
		<enum name="AND_INVERTED" value="0x1504" version="1.1" />
		<enum name="NOOP" value="0x1505" version="1.1" />
		<enum name="XOR" value="0x1506" version="1.1" />
		<enum name="OR" value="0x1507" version="1.1" />
		<enum name="NOR" value="0x1508" version="1.1" />
		<enum name="EQUIV" value="0x1509" version="1.1" />
		<enum name="INVERT" value="0x150A" version="1.1" />
		<enum name="OR_REVERSE" value="0x150B" version="1.1" />
		<enum name="COPY_INVERTED" value="0x150C" version="1.1" />
		<enum name="OR_INVERTED" value="0x150D" version="1.1" />
		<enum name="NAND" value="0x150E" version="1.1" />
		<enum name="SET" value="0x150F" version="1.1" />
		<enum name="TEXTURE" value="0x1702" version="1.1" />
		<enum name="COLOR" value="0x1800" version="1.1" />
		<enum name="DEPTH" value="0x1801" version="1.1" />
		<enum name="STENCIL" value="0x1802" version="1.1" />
		<enum name="STENCIL_INDEX" value="0x1901" version="1.1" />
		<enum name="DEPTH_COMPONENT" value="0x1902" version="1.1" />
		<enum name="RED" value="0x1903" version="1.1" />
		<enum name="GREEN" value="0x1904" version="1.1" />
		<enum name="BLUE" value="0x1905" version="1.1" />
		<enum name="ALPHA" value="0x1906" version="1.1" />
		<enum name="RGB" value="0x1907" version="1.1" />
		<enum name="RGBA" value="0x1908" version="1.1" />
		<enum name="POINT" value="0x1B00" version="1.1" />
		<enum name="LINE" value="0x1B01" version="1.1" />
		<enum name="FILL" value="0x1B02" version="1.1" />
		<enum name="KEEP" value="0x1E00" version="1.1" />
		<enum name="REPLACE" value="0x1E01" version="1.1" />
		<enum name="INCR" value="0x1E02" version="1.1" />
		<enum name="DECR" value="0x1E03" version="1.1" />
		<enum name="VENDOR" value="0x1F00" version="1.1" />
		<enum name="RENDERER" value="0x1F01" version="1.1" />
		<enum name="VERSION" value="0x1F02" version="1.1" />
		<enum name="EXTENSIONS" value="0x1F03" version="1.1" />
		<enum name="NEAREST" value="0x2600" version="1.1" />
		<enum name="LINEAR" value="0x2601" version="1.1" />
		<enum name="NEAREST_MIPMAP_NEAREST" value="0x2700" version="1.1" />
		<enum name="LINEAR_MIPMAP_NEAREST" value="0x2701" version="1.1" />
		<enum name="NEAREST_MIPMAP_LINEAR" value="0x2702" version="1.1" />
		<enum name="LINEAR_MIPMAP_LINEAR" value="0x2703" version="1.1" />
		<enum name="TEXTURE_MAG_FILTER" value="0x2800" version="1.1" />
		<enum name="TEXTURE_MIN_FILTER" value="0x2801" version="1.1" />
		<enum name="TEXTURE_WRAP_S" value="0x2802" version="1.1" />
		<enum name="TEXTURE_WRAP_T" value="0x2803" version="1.1" />
		<enum name="PROXY_TEXTURE_1D" value="0x8063" version="1.1" />
		<enum name="PROXY_TEXTURE_2D" value="0x8064" version="1.1" />
		<enum name="REPEAT" value="0x2901" version="1.1" />
		<enum name="R3_G3_B2" value="0x2A10" version="1.1" />
		<enum name="RGB4" value="0x804F" version="1.1" />
		<enum name="RGB5" value="0x8050" version="1.1" />
		<enum name="RGB8" value="0x8051" version="1.1" />
		<enum name="RGB10" value="0x8052" version="1.1" />
		<enum name="RGB12" value="0x8053" version="1.1" />
		<enum name="RGB16" value="0x8054" version="1.1" />
		<enum name="RGBA2" value="0x8055" version="1.1" />
		<enum name="RGBA4" value="0x8056" version="1.1" />
		<enum name="RGB5_A1" value="0x8057" version="1.1" />
		<enum name="RGBA8" value="0x8058" version="1.1" />
		<enum name="RGB10_A2" value="0x8059" version="1.1" />
		<enum name="RGBA12" value="0x805A" version="1.1" />
		<enum name="RGBA16" value="0x805B" version="1.1" />
		<enum name="CURRENT_BIT" value="0x00000001" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POINT_BIT" value="0x00000002" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LINE_BIT" value="0x00000004" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POLYGON_BIT" value="0x00000008" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POLYGON_STIPPLE_BIT" value="0x00000010" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MODE_BIT" value="0x00000020" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHTING_BIT" value="0x00000040" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FOG_BIT" value="0x00000080" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ACCUM_BUFFER_BIT" value="0x00000200" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="VIEWPORT_BIT" value="0x00000800" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TRANSFORM_BIT" value="0x00001000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ENABLE_BIT" value="0x00002000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="HINT_BIT" value="0x00008000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EVAL_BIT" value="0x00010000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIST_BIT" value="0x00020000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_BIT" value="0x00040000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SCISSOR_BIT" value="0x00080000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALL_ATTRIB_BITS" value="0xFFFFFFFF" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIENT_PIXEL_STORE_BIT" value="0x00000001" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIENT_VERTEX_ARRAY_BIT" value="0x00000002" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIENT_ALL_ATTRIB_BITS" value="0xFFFFFFFF" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="QUAD_STRIP" value="0x0008" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POLYGON" value="0x0009" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ACCUM" value="0x0100" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LOAD" value="0x0101" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="RETURN" value="0x0102" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MULT" value="0x0103" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ADD" value="0x0104" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="AUX0" value="0x0409" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="AUX1" value="0x040A" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="AUX2" value="0x040B" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="AUX3" value="0x040C" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="2D" value="0x0600" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="3D" value="0x0601" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="3D_COLOR" value="0x0602" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="3D_COLOR_TEXTURE" value="0x0603" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="4D_COLOR_TEXTURE" value="0x0604" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PASS_THROUGH_TOKEN" value="0x0700" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POINT_TOKEN" value="0x0701" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LINE_TOKEN" value="0x0702" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POLYGON_TOKEN" value="0x0703" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="BITMAP_TOKEN" value="0x0704" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="DRAW_PIXEL_TOKEN" value="0x0705" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COPY_PIXEL_TOKEN" value="0x0706" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LINE_RESET_TOKEN" value="0x0707" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EXP" value="0x0800" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EXP2" value="0x0801" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COEFF" value="0x0A00" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ORDER" value="0x0A01" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="DOMAIN" value="0x0A02" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_I" value="0x0C70" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_S_TO_S" value="0x0C71" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_R" value="0x0C72" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_G" value="0x0C73" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_B" value="0x0C74" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_A" value="0x0C75" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_R_TO_R" value="0x0C76" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_G_TO_G" value="0x0C77" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_B_TO_B" value="0x0C78" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_A_TO_A" value="0x0C79" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="VERTEX_ARRAY_POINTER" value="0x808E" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="NORMAL_ARRAY_POINTER" value="0x808F" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_ARRAY_POINTER" value="0x8090" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_ARRAY_POINTER" value="0x8091" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_COORD_ARRAY_POINTER" value="0x8092" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EDGE_FLAG_ARRAY_POINTER" value="0x8093" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FEEDBACK_BUFFER_POINTER" value="0x0DF0" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SELECTION_BUFFER_POINTER" value="0x0DF3" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_COLOR" value="0x0B00" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_INDEX" value="0x0B01" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_NORMAL" value="0x0B02" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_TEXTURE_COORDS" value="0x0B03" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_RASTER_COLOR" value="0x0B04" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_RASTER_INDEX" value="0x0B05" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_RASTER_TEXTURE_COORDS" value="0x0B06" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_RASTER_POSITION" value="0x0B07" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_RASTER_POSITION_VALID" value="0x0B08" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_RASTER_DISTANCE" value="0x0B09" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POINT_SMOOTH" value="0x0B10" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LINE_STIPPLE" value="0x0B24" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LINE_STIPPLE_PATTERN" value="0x0B25" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LINE_STIPPLE_REPEAT" value="0x0B26" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIST_MODE" value="0x0B30" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_LIST_NESTING" value="0x0B31" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIST_BASE" value="0x0B32" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIST_INDEX" value="0x0B33" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POLYGON_STIPPLE" value="0x0B42" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EDGE_FLAG" value="0x0B43" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHTING" value="0x0B50" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT_MODEL_LOCAL_VIEWER" value="0x0B51" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT_MODEL_TWO_SIDE" value="0x0B52" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT_MODEL_AMBIENT" value="0x0B53" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SHADE_MODEL" value="0x0B54" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_MATERIAL_FACE" value="0x0B55" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_MATERIAL_PARAMETER" value="0x0B56" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_MATERIAL" value="0x0B57" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FOG" value="0x0B60" version="1.1" deprecated="3.0" removed="3.1" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="FOG_INDEX" value="0x0B61" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FOG_DENSITY" value="0x0B62" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FOG_START" value="0x0B63" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FOG_END" value="0x0B64" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FOG_MODE" value="0x0B65" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COLOR" value="0x0B66" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ACCUM_CLEAR_VALUE" value="0x0B80" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MATRIX_MODE" value="0x0BA0" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="NORMALIZE" value="0x0BA1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MODELVIEW_STACK_DEPTH" value="0x0BA3" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PROJECTION_STACK_DEPTH" value="0x0BA4" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_STACK_DEPTH" value="0x0BA5" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MODELVIEW_MATRIX" value="0x0BA6" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PROJECTION_MATRIX" value="0x0BA7" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_MATRIX" value="0x0BA8" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ATTRIB_STACK_DEPTH" value="0x0BB0" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIENT_ATTRIB_STACK_DEPTH" value="0x0BB1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA_TEST" value="0x0BC0" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA_TEST_FUNC" value="0x0BC1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA_TEST_REF" value="0x0BC2" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_LOGIC_OP" value="0x0BF1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LOGIC_OP" value="0x0BF1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="AUX_BUFFERS" value="0x0C00" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_CLEAR_VALUE" value="0x0C20" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_WRITEMASK" value="0x0C21" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_MODE" value="0x0C30" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="RGBA_MODE" value="0x0C31" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="RENDER_MODE" value="0x0C40" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PERSPECTIVE_CORRECTION_HINT" value="0x0C50" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POINT_SMOOTH_HINT" value="0x0C51" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FOG_HINT" value="0x0C54" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_GEN_S" value="0x0C60" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_GEN_T" value="0x0C61" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_GEN_R" value="0x0C62" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_GEN_Q" value="0x0C63" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_I_SIZE" value="0x0CB0" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_S_TO_S_SIZE" value="0x0CB1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_R_SIZE" value="0x0CB2" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_G_SIZE" value="0x0CB3" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_B_SIZE" value="0x0CB4" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_I_TO_A_SIZE" value="0x0CB5" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_R_TO_R_SIZE" value="0x0CB6" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_G_TO_G_SIZE" value="0x0CB7" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_B_TO_B_SIZE" value="0x0CB8" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_MAP_A_TO_A_SIZE" value="0x0CB9" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP_COLOR" value="0x0D10" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP_STENCIL" value="0x0D11" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_SHIFT" value="0x0D12" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_OFFSET" value="0x0D13" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="RED_SCALE" value="0x0D14" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="RED_BIAS" value="0x0D15" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ZOOM_X" value="0x0D16" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ZOOM_Y" value="0x0D17" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="GREEN_SCALE" value="0x0D18" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="GREEN_BIAS" value="0x0D19" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="BLUE_SCALE" value="0x0D1A" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="BLUE_BIAS" value="0x0D1B" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA_SCALE" value="0x0D1C" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA_BIAS" value="0x0D1D" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="DEPTH_SCALE" value="0x0D1E" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="DEPTH_BIAS" value="0x0D1F" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_EVAL_ORDER" value="0x0D30" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_LIGHTS" value="0x0D31" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_CLIP_PLANES" value="0x0D32" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_PIXEL_MAP_TABLE" value="0x0D34" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_ATTRIB_STACK_DEPTH" value="0x0D35" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_MODELVIEW_STACK_DEPTH" value="0x0D36" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_NAME_STACK_DEPTH" value="0x0D37" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_PROJECTION_STACK_DEPTH" value="0x0D38" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_TEXTURE_STACK_DEPTH" value="0x0D39" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAX_CLIENT_ATTRIB_STACK_DEPTH" value="0x0D3B" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_BITS" value="0x0D51" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="RED_BITS" value="0x0D52" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="GREEN_BITS" value="0x0D53" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="BLUE_BITS" value="0x0D54" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA_BITS" value="0x0D55" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="DEPTH_BITS" value="0x0D56" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="STENCIL_BITS" value="0x0D57" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ACCUM_RED_BITS" value="0x0D58" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ACCUM_GREEN_BITS" value="0x0D59" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ACCUM_BLUE_BITS" value="0x0D5A" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ACCUM_ALPHA_BITS" value="0x0D5B" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="NAME_STACK_DEPTH" value="0x0D70" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="AUTO_NORMAL" value="0x0D80" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_COLOR_4" value="0x0D90" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_INDEX" value="0x0D91" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_NORMAL" value="0x0D92" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_TEXTURE_COORD_1" value="0x0D93" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_TEXTURE_COORD_2" value="0x0D94" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_TEXTURE_COORD_3" value="0x0D95" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_TEXTURE_COORD_4" value="0x0D96" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_VERTEX_3" value="0x0D97" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_VERTEX_4" value="0x0D98" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_COLOR_4" value="0x0DB0" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_INDEX" value="0x0DB1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_NORMAL" value="0x0DB2" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_TEXTURE_COORD_1" value="0x0DB3" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_TEXTURE_COORD_2" value="0x0DB4" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_TEXTURE_COORD_3" value="0x0DB5" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_TEXTURE_COORD_4" value="0x0DB6" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_VERTEX_3" value="0x0DB7" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_VERTEX_4" value="0x0DB8" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_GRID_DOMAIN" value="0x0DD0" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP1_GRID_SEGMENTS" value="0x0DD1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_GRID_DOMAIN" value="0x0DD2" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MAP2_GRID_SEGMENTS" value="0x0DD3" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FEEDBACK_BUFFER_SIZE" value="0x0DF1" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FEEDBACK_BUFFER_TYPE" value="0x0DF2" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SELECTION_BUFFER_SIZE" value="0x0DF4" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="VERTEX_ARRAY" value="0x8074" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="NORMAL_ARRAY" value="0x8075" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_ARRAY" value="0x8076" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_ARRAY" value="0x8077" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_COORD_ARRAY" value="0x8078" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EDGE_FLAG_ARRAY" value="0x8079" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="VERTEX_ARRAY_SIZE" value="0x807A" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="VERTEX_ARRAY_TYPE" value="0x807B" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="VERTEX_ARRAY_STRIDE" value="0x807C" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="NORMAL_ARRAY_TYPE" value="0x807E" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="NORMAL_ARRAY_STRIDE" value="0x807F" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_ARRAY_SIZE" value="0x8081" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_ARRAY_TYPE" value="0x8082" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_ARRAY_STRIDE" value="0x8083" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_ARRAY_TYPE" value="0x8085" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_ARRAY_STRIDE" value="0x8086" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_COORD_ARRAY_SIZE" value="0x8088" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_COORD_ARRAY_TYPE" value="0x8089" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_COORD_ARRAY_STRIDE" value="0x808A" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EDGE_FLAG_ARRAY_STRIDE" value="0x808C" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_COMPONENTS" value="0x1003" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_BORDER" value="0x1005" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_LUMINANCE_SIZE" value="0x8060" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_INTENSITY_SIZE" value="0x8061" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_PRIORITY" value="0x8066" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_RESIDENT" value="0x8067" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="AMBIENT" value="0x1200" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="DIFFUSE" value="0x1201" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SPECULAR" value="0x1202" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="POSITION" value="0x1203" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SPOT_DIRECTION" value="0x1204" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SPOT_EXPONENT" value="0x1205" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SPOT_CUTOFF" value="0x1206" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CONSTANT_ATTENUATION" value="0x1207" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LINEAR_ATTENUATION" value="0x1208" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="QUADRATIC_ATTENUATION" value="0x1209" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COMPILE" value="0x1300" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COMPILE_AND_EXECUTE" value="0x1301" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="2_BYTES" value="0x1407" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="3_BYTES" value="0x1408" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="4_BYTES" value="0x1409" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EMISSION" value="0x1600" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SHININESS" value="0x1601" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="AMBIENT_AND_DIFFUSE" value="0x1602" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_INDEXES" value="0x1603" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MODELVIEW" value="0x1700" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="PROJECTION" value="0x1701" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_INDEX" value="0x1900" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE" value="0x1909" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE_ALPHA" value="0x190A" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="BITMAP" value="0x1A00" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="RENDER" value="0x1C00" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FEEDBACK" value="0x1C01" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SELECT" value="0x1C02" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="FLAT" value="0x1D00" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SMOOTH" value="0x1D01" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="S" value="0x2000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="T" value="0x2001" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="R" value="0x2002" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="Q" value="0x2003" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="MODULATE" value="0x2100" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="DECAL" value="0x2101" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_ENV_MODE" value="0x2200" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_ENV_COLOR" value="0x2201" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_ENV" value="0x2300" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EYE_LINEAR" value="0x2400" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="OBJECT_LINEAR" value="0x2401" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="SPHERE_MAP" value="0x2402" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_GEN_MODE" value="0x2500" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="OBJECT_PLANE" value="0x2501" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="EYE_PLANE" value="0x2502" version="1.1" deprecated="3.0" removed="3.1" >
			<ext name="NV_fog_distance" />
		</enum>
		<enum name="CLAMP" value="0x2900" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA4" value="0x803B" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA8" value="0x803C" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA12" value="0x803D" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA16" value="0x803E" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE4" value="0x803F" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE8" value="0x8040" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE12" value="0x8041" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE16" value="0x8042" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE4_ALPHA4" value="0x8043" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE6_ALPHA2" value="0x8044" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE8_ALPHA8" value="0x8045" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE12_ALPHA4" value="0x8046" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE12_ALPHA12" value="0x8047" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LUMINANCE16_ALPHA16" value="0x8048" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INTENSITY" value="0x8049" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INTENSITY4" value="0x804A" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INTENSITY8" value="0x804B" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INTENSITY12" value="0x804C" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="INTENSITY16" value="0x804D" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="V2F" value="0x2A20" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="V3F" value="0x2A21" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="C4UB_V2F" value="0x2A22" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="C4UB_V3F" value="0x2A23" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="C3F_V3F" value="0x2A24" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="N3F_V3F" value="0x2A25" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="C4F_N3F_V3F" value="0x2A26" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="T2F_V3F" value="0x2A27" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="T4F_V4F" value="0x2A28" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="T2F_C4UB_V3F" value="0x2A29" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="T2F_C3F_V3F" value="0x2A2A" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="T2F_N3F_V3F" value="0x2A2B" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="T2F_C4F_N3F_V3F" value="0x2A2C" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="T4F_C4F_N3F_V4F" value="0x2A2D" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIP_PLANE0" value="0x3000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIP_PLANE1" value="0x3001" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIP_PLANE2" value="0x3002" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIP_PLANE3" value="0x3003" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIP_PLANE4" value="0x3004" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="CLIP_PLANE5" value="0x3005" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT0" value="0x4000" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT1" value="0x4001" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT2" value="0x4002" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT3" value="0x4003" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT4" value="0x4004" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT5" value="0x4005" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT6" value="0x4006" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT7" value="0x4007" version="1.1" deprecated="3.0" removed="3.1" />
		<enum name="UNSIGNED_BYTE_3_3_2" value="0x8032" version="1.2" />
		<enum name="UNSIGNED_SHORT_4_4_4_4" value="0x8033" version="1.2" />
		<enum name="UNSIGNED_SHORT_5_5_5_1" value="0x8034" version="1.2" />
		<enum name="UNSIGNED_INT_8_8_8_8" value="0x8035" version="1.2" />
		<enum name="UNSIGNED_INT_10_10_10_2" value="0x8036" version="1.2" />
		<enum name="TEXTURE_BINDING_3D" value="0x806A" version="1.2" />
		<enum name="PACK_SKIP_IMAGES" value="0x806B" version="1.2" />
		<enum name="PACK_IMAGE_HEIGHT" value="0x806C" version="1.2" />
		<enum name="UNPACK_SKIP_IMAGES" value="0x806D" version="1.2" />
		<enum name="UNPACK_IMAGE_HEIGHT" value="0x806E" version="1.2" />
		<enum name="TEXTURE_3D" value="0x806F" version="1.2" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="PROXY_TEXTURE_3D" value="0x8070" version="1.2" />
		<enum name="TEXTURE_DEPTH" value="0x8071" version="1.2" />
		<enum name="TEXTURE_WRAP_R" value="0x8072" version="1.2" />
		<enum name="MAX_3D_TEXTURE_SIZE" value="0x8073" version="1.2" />
		<enum name="UNSIGNED_BYTE_2_3_3_REV" value="0x8362" version="1.2" />
		<enum name="UNSIGNED_SHORT_5_6_5" value="0x8363" version="1.2" />
		<enum name="UNSIGNED_SHORT_5_6_5_REV" value="0x8364" version="1.2" />
		<enum name="UNSIGNED_SHORT_4_4_4_4_REV" value="0x8365" version="1.2" />
		<enum name="UNSIGNED_SHORT_1_5_5_5_REV" value="0x8366" version="1.2" />
		<enum name="UNSIGNED_INT_8_8_8_8_REV" value="0x8367" version="1.2" />
		<enum name="UNSIGNED_INT_2_10_10_10_REV" value="0x8368" version="1.2" >
			<ext name="ARB_vertex_type_2_10_10_10_rev" />
		</enum>
		<enum name="BGR" value="0x80E0" version="1.2" />
		<enum name="BGRA" value="0x80E1" version="1.2" >
			<ext name="ARB_vertex_array_bgra" />
			<ext name="EXT_vertex_array_bgra" />
		</enum>
		<enum name="MAX_ELEMENTS_VERTICES" value="0x80E8" version="1.2" />
		<enum name="MAX_ELEMENTS_INDICES" value="0x80E9" version="1.2" />
		<enum name="CLAMP_TO_EDGE" value="0x812F" version="1.2" />
		<enum name="TEXTURE_MIN_LOD" value="0x813A" version="1.2" />
		<enum name="TEXTURE_MAX_LOD" value="0x813B" version="1.2" />
		<enum name="TEXTURE_BASE_LEVEL" value="0x813C" version="1.2" />
		<enum name="TEXTURE_MAX_LEVEL" value="0x813D" version="1.2" />
		<enum name="SMOOTH_POINT_SIZE_RANGE" value="0x0B12" version="1.2" />
		<enum name="SMOOTH_POINT_SIZE_GRANULARITY" value="0x0B13" version="1.2" />
		<enum name="SMOOTH_LINE_WIDTH_RANGE" value="0x0B22" version="1.2" />
		<enum name="SMOOTH_LINE_WIDTH_GRANULARITY" value="0x0B23" version="1.2" />
		<enum name="ALIASED_LINE_WIDTH_RANGE" value="0x846E" version="1.2" />
		<enum name="RESCALE_NORMAL" value="0x803A" version="1.2" deprecated="3.0" removed="3.1" />
		<enum name="LIGHT_MODEL_COLOR_CONTROL" value="0x81F8" version="1.2" deprecated="3.0" removed="3.1" />
		<enum name="SINGLE_COLOR" value="0x81F9" version="1.2" deprecated="3.0" removed="3.1" />
		<enum name="SEPARATE_SPECULAR_COLOR" value="0x81FA" version="1.2" deprecated="3.0" removed="3.1" />
		<enum name="ALIASED_POINT_SIZE_RANGE" value="0x846D" version="1.2" deprecated="3.0" removed="3.1" />
		<enum name="CONSTANT_COLOR" value="0x8001" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="ONE_MINUS_CONSTANT_COLOR" value="0x8002" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONSTANT_ALPHA" value="0x8003" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="ONE_MINUS_CONSTANT_ALPHA" value="0x8004" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="BLEND_COLOR" value="0x8005" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="FUNC_ADD" value="0x8006" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="MIN" value="0x8007" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="MAX" value="0x8008" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="BLEND_EQUATION" value="0x8009" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="FUNC_SUBTRACT" value="0x800A" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="FUNC_REVERSE_SUBTRACT" value="0x800B" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_1D" value="0x8010" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_2D" value="0x8011" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="SEPARABLE_2D" value="0x8012" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_BORDER_MODE" value="0x8013" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_FILTER_SCALE" value="0x8014" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_FILTER_BIAS" value="0x8015" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="REDUCE" value="0x8016" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_FORMAT" value="0x8017" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_WIDTH" value="0x8018" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_HEIGHT" value="0x8019" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="MAX_CONVOLUTION_WIDTH" value="0x801A" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="MAX_CONVOLUTION_HEIGHT" value="0x801B" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_RED_SCALE" value="0x801C" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_GREEN_SCALE" value="0x801D" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_BLUE_SCALE" value="0x801E" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_ALPHA_SCALE" value="0x801F" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_RED_BIAS" value="0x8020" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_GREEN_BIAS" value="0x8021" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_BLUE_BIAS" value="0x8022" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_ALPHA_BIAS" value="0x8023" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM" value="0x8024" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="PROXY_HISTOGRAM" value="0x8025" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM_WIDTH" value="0x8026" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM_FORMAT" value="0x8027" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM_RED_SIZE" value="0x8028" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM_GREEN_SIZE" value="0x8029" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM_BLUE_SIZE" value="0x802A" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM_ALPHA_SIZE" value="0x802B" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM_LUMINANCE_SIZE" value="0x802C" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="HISTOGRAM_SINK" value="0x802D" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="MINMAX" value="0x802E" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="MINMAX_FORMAT" value="0x802F" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="MINMAX_SINK" value="0x8030" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="TABLE_TOO_LARGE" value="0x8031" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_MATRIX" value="0x80B1" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_MATRIX_STACK_DEPTH" value="0x80B2" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="MAX_COLOR_MATRIX_STACK_DEPTH" value="0x80B3" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_RED_SCALE" value="0x80B4" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_GREEN_SCALE" value="0x80B5" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_BLUE_SCALE" value="0x80B6" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_ALPHA_SCALE" value="0x80B7" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_RED_BIAS" value="0x80B8" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_GREEN_BIAS" value="0x80B9" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_BLUE_BIAS" value="0x80BA" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_ALPHA_BIAS" value="0x80BB" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE" value="0x80D0" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_CONVOLUTION_COLOR_TABLE" value="0x80D1" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="POST_COLOR_MATRIX_COLOR_TABLE" value="0x80D2" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="PROXY_COLOR_TABLE" value="0x80D3" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="PROXY_POST_CONVOLUTION_COLOR_TABLE" value="0x80D4" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="PROXY_POST_COLOR_MATRIX_COLOR_TABLE" value="0x80D5" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_SCALE" value="0x80D6" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_BIAS" value="0x80D7" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_FORMAT" value="0x80D8" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_WIDTH" value="0x80D9" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_RED_SIZE" value="0x80DA" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_GREEN_SIZE" value="0x80DB" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_BLUE_SIZE" value="0x80DC" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_ALPHA_SIZE" value="0x80DD" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_LUMINANCE_SIZE" value="0x80DE" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="COLOR_TABLE_INTENSITY_SIZE" value="0x80DF" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONSTANT_BORDER" value="0x8151" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="REPLICATE_BORDER" value="0x8153" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="CONVOLUTION_BORDER_COLOR" value="0x8154" deprecated="3.0" removed="3.1" >
			<ext name="ARB_imaging" />
		</enum>
		<enum name="TEXTURE0" value="0x84C0" version="1.3" />
		<enum name="TEXTURE1" value="0x84C1" version="1.3" />
		<enum name="TEXTURE2" value="0x84C2" version="1.3" />
		<enum name="TEXTURE3" value="0x84C3" version="1.3" />
		<enum name="TEXTURE4" value="0x84C4" version="1.3" />
		<enum name="TEXTURE5" value="0x84C5" version="1.3" />
		<enum name="TEXTURE6" value="0x84C6" version="1.3" />
		<enum name="TEXTURE7" value="0x84C7" version="1.3" />
		<enum name="TEXTURE8" value="0x84C8" version="1.3" />
		<enum name="TEXTURE9" value="0x84C9" version="1.3" />
		<enum name="TEXTURE10" value="0x84CA" version="1.3" />
		<enum name="TEXTURE11" value="0x84CB" version="1.3" />
		<enum name="TEXTURE12" value="0x84CC" version="1.3" />
		<enum name="TEXTURE13" value="0x84CD" version="1.3" />
		<enum name="TEXTURE14" value="0x84CE" version="1.3" />
		<enum name="TEXTURE15" value="0x84CF" version="1.3" />
		<enum name="TEXTURE16" value="0x84D0" version="1.3" />
		<enum name="TEXTURE17" value="0x84D1" version="1.3" />
		<enum name="TEXTURE18" value="0x84D2" version="1.3" />
		<enum name="TEXTURE19" value="0x84D3" version="1.3" />
		<enum name="TEXTURE20" value="0x84D4" version="1.3" />
		<enum name="TEXTURE21" value="0x84D5" version="1.3" />
		<enum name="TEXTURE22" value="0x84D6" version="1.3" />
		<enum name="TEXTURE23" value="0x84D7" version="1.3" />
		<enum name="TEXTURE24" value="0x84D8" version="1.3" />
		<enum name="TEXTURE25" value="0x84D9" version="1.3" />
		<enum name="TEXTURE26" value="0x84DA" version="1.3" />
		<enum name="TEXTURE27" value="0x84DB" version="1.3" />
		<enum name="TEXTURE28" value="0x84DC" version="1.3" />
		<enum name="TEXTURE29" value="0x84DD" version="1.3" />
		<enum name="TEXTURE30" value="0x84DE" version="1.3" />
		<enum name="TEXTURE31" value="0x84DF" version="1.3" />
		<enum name="ACTIVE_TEXTURE" value="0x84E0" version="1.3" />
		<enum name="MULTISAMPLE" value="0x809D" version="1.3" />
		<enum name="SAMPLE_ALPHA_TO_COVERAGE" value="0x809E" version="1.3" />
		<enum name="SAMPLE_ALPHA_TO_ONE" value="0x809F" version="1.3" />
		<enum name="SAMPLE_COVERAGE" value="0x80A0" version="1.3" />
		<enum name="SAMPLE_BUFFERS" value="0x80A8" version="1.3" />
		<enum name="SAMPLES" value="0x80A9" version="1.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SAMPLE_COVERAGE_VALUE" value="0x80AA" version="1.3" />
		<enum name="SAMPLE_COVERAGE_INVERT" value="0x80AB" version="1.3" />
		<enum name="TEXTURE_CUBE_MAP" value="0x8513" version="1.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_BINDING_CUBE_MAP" value="0x8514" version="1.3" />
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_X" value="0x8515" version="1.3" />
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_X" value="0x8516" version="1.3" />
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_Y" value="0x8517" version="1.3" />
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_Y" value="0x8518" version="1.3" />
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_Z" value="0x8519" version="1.3" />
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_Z" value="0x851A" version="1.3" />
		<enum name="PROXY_TEXTURE_CUBE_MAP" value="0x851B" version="1.3" />
		<enum name="MAX_CUBE_MAP_TEXTURE_SIZE" value="0x851C" version="1.3" />
		<enum name="COMPRESSED_RGB" value="0x84ED" version="1.3" />
		<enum name="COMPRESSED_RGBA" value="0x84EE" version="1.3" />
		<enum name="TEXTURE_COMPRESSION_HINT" value="0x84EF" version="1.3" />
		<enum name="TEXTURE_COMPRESSED_IMAGE_SIZE" value="0x86A0" version="1.3" />
		<enum name="TEXTURE_COMPRESSED" value="0x86A1" version="1.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="NUM_COMPRESSED_TEXTURE_FORMATS" value="0x86A2" version="1.3" />
		<enum name="COMPRESSED_TEXTURE_FORMATS" value="0x86A3" version="1.3" />
		<enum name="CLAMP_TO_BORDER" value="0x812D" version="1.3" />
		<enum name="CLIENT_ACTIVE_TEXTURE" value="0x84E1" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="MAX_TEXTURE_UNITS" value="0x84E2" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="TRANSPOSE_MODELVIEW_MATRIX" value="0x84E3" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="TRANSPOSE_PROJECTION_MATRIX" value="0x84E4" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="TRANSPOSE_TEXTURE_MATRIX" value="0x84E5" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="TRANSPOSE_COLOR_MATRIX" value="0x84E6" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="MULTISAMPLE_BIT" value="0x20000000" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="NORMAL_MAP" value="0x8511" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="REFLECTION_MAP" value="0x8512" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="COMPRESSED_ALPHA" value="0x84E9" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="COMPRESSED_LUMINANCE" value="0x84EA" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="COMPRESSED_LUMINANCE_ALPHA" value="0x84EB" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="COMPRESSED_INTENSITY" value="0x84EC" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="COMBINE" value="0x8570" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="COMBINE_RGB" value="0x8571" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="COMBINE_ALPHA" value="0x8572" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="SOURCE0_RGB" value="0x8580" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="SOURCE1_RGB" value="0x8581" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="SOURCE2_RGB" value="0x8582" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="SOURCE0_ALPHA" value="0x8588" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="SOURCE1_ALPHA" value="0x8589" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="SOURCE2_ALPHA" value="0x858A" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="OPERAND0_RGB" value="0x8590" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="OPERAND1_RGB" value="0x8591" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="OPERAND2_RGB" value="0x8592" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="OPERAND0_ALPHA" value="0x8598" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="OPERAND1_ALPHA" value="0x8599" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="OPERAND2_ALPHA" value="0x859A" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="RGB_SCALE" value="0x8573" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="ADD_SIGNED" value="0x8574" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="INTERPOLATE" value="0x8575" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="SUBTRACT" value="0x84E7" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="CONSTANT" value="0x8576" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="PRIMARY_COLOR" value="0x8577" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="PREVIOUS" value="0x8578" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="DOT3_RGB" value="0x86AE" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="DOT3_RGBA" value="0x86AF" version="1.3" deprecated="3.0" removed="3.1" />
		<enum name="BLEND_DST_RGB" value="0x80C8" version="1.4" />
		<enum name="BLEND_SRC_RGB" value="0x80C9" version="1.4" />
		<enum name="BLEND_DST_ALPHA" value="0x80CA" version="1.4" />
		<enum name="BLEND_SRC_ALPHA" value="0x80CB" version="1.4" />
		<enum name="POINT_FADE_THRESHOLD_SIZE" value="0x8128" version="1.4" />
		<enum name="DEPTH_COMPONENT16" value="0x81A5" version="1.4" />
		<enum name="DEPTH_COMPONENT24" value="0x81A6" version="1.4" />
		<enum name="DEPTH_COMPONENT32" value="0x81A7" version="1.4" />
		<enum name="MIRRORED_REPEAT" value="0x8370" version="1.4" />
		<enum name="MAX_TEXTURE_LOD_BIAS" value="0x84FD" version="1.4" />
		<enum name="TEXTURE_LOD_BIAS" value="0x8501" version="1.4" />
		<enum name="INCR_WRAP" value="0x8507" version="1.4" />
		<enum name="DECR_WRAP" value="0x8508" version="1.4" />
		<enum name="TEXTURE_DEPTH_SIZE" value="0x884A" version="1.4" />
		<enum name="TEXTURE_COMPARE_MODE" value="0x884C" version="1.4" />
		<enum name="TEXTURE_COMPARE_FUNC" value="0x884D" version="1.4" />
		<enum name="POINT_SIZE_MIN" value="0x8126" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="POINT_SIZE_MAX" value="0x8127" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="POINT_DISTANCE_ATTENUATION" value="0x8129" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="GENERATE_MIPMAP" value="0x8191" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="GENERATE_MIPMAP_HINT" value="0x8192" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORDINATE_SOURCE" value="0x8450" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORDINATE" value="0x8451" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="FRAGMENT_DEPTH" value="0x8452" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_FOG_COORDINATE" value="0x8453" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORDINATE_ARRAY_TYPE" value="0x8454" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORDINATE_ARRAY_STRIDE" value="0x8455" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORDINATE_ARRAY_POINTER" value="0x8456" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORDINATE_ARRAY" value="0x8457" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_SUM" value="0x8458" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_SECONDARY_COLOR" value="0x8459" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="SECONDARY_COLOR_ARRAY_SIZE" value="0x845A" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="SECONDARY_COLOR_ARRAY_TYPE" value="0x845B" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="SECONDARY_COLOR_ARRAY_STRIDE" value="0x845C" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="SECONDARY_COLOR_ARRAY_POINTER" value="0x845D" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="SECONDARY_COLOR_ARRAY" value="0x845E" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_FILTER_CONTROL" value="0x8500" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="DEPTH_TEXTURE_MODE" value="0x884B" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="COMPARE_R_TO_TEXTURE" value="0x884E" version="1.4" deprecated="3.0" removed="3.1" />
		<enum name="BUFFER_SIZE" value="0x8764" version="1.5" />
		<enum name="BUFFER_USAGE" value="0x8765" version="1.5" />
		<enum name="QUERY_COUNTER_BITS" value="0x8864" version="1.5" />
		<enum name="CURRENT_QUERY" value="0x8865" version="1.5" />
		<enum name="QUERY_RESULT" value="0x8866" version="1.5" />
		<enum name="QUERY_RESULT_AVAILABLE" value="0x8867" version="1.5" />
		<enum name="ARRAY_BUFFER" value="0x8892" version="1.5" />
		<enum name="ELEMENT_ARRAY_BUFFER" value="0x8893" version="1.5" />
		<enum name="ARRAY_BUFFER_BINDING" value="0x8894" version="1.5" />
		<enum name="ELEMENT_ARRAY_BUFFER_BINDING" value="0x8895" version="1.5" />
		<enum name="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING" value="0x889F" version="1.5" />
		<enum name="READ_ONLY" value="0x88B8" version="1.5" />
		<enum name="WRITE_ONLY" value="0x88B9" version="1.5" >
			<ext name="NV_shader_buffer_store" />
		</enum>
		<enum name="READ_WRITE" value="0x88BA" version="1.5" >
			<ext name="NV_shader_buffer_store" />
		</enum>
		<enum name="BUFFER_ACCESS" value="0x88BB" version="1.5" />
		<enum name="BUFFER_MAPPED" value="0x88BC" version="1.5" />
		<enum name="BUFFER_MAP_POINTER" value="0x88BD" version="1.5" />
		<enum name="STREAM_DRAW" value="0x88E0" version="1.5" />
		<enum name="STREAM_READ" value="0x88E1" version="1.5" />
		<enum name="STREAM_COPY" value="0x88E2" version="1.5" />
		<enum name="STATIC_DRAW" value="0x88E4" version="1.5" />
		<enum name="STATIC_READ" value="0x88E5" version="1.5" />
		<enum name="STATIC_COPY" value="0x88E6" version="1.5" />
		<enum name="DYNAMIC_DRAW" value="0x88E8" version="1.5" />
		<enum name="DYNAMIC_READ" value="0x88E9" version="1.5" />
		<enum name="DYNAMIC_COPY" value="0x88EA" version="1.5" />
		<enum name="SAMPLES_PASSED" value="0x8914" version="1.5" />
		<enum name="SRC1_ALPHA" value="0x8589" version="1.5" >
			<ext name="ARB_blend_func_extended" />
		</enum>
		<enum name="VERTEX_ARRAY_BUFFER_BINDING" value="0x8896" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="NORMAL_ARRAY_BUFFER_BINDING" value="0x8897" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="COLOR_ARRAY_BUFFER_BINDING" value="0x8898" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="INDEX_ARRAY_BUFFER_BINDING" value="0x8899" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_COORD_ARRAY_BUFFER_BINDING" value="0x889A" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="EDGE_FLAG_ARRAY_BUFFER_BINDING" value="0x889B" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="SECONDARY_COLOR_ARRAY_BUFFER_BINDING" value="0x889C" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORDINATE_ARRAY_BUFFER_BINDING" value="0x889D" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="WEIGHT_ARRAY_BUFFER_BINDING" value="0x889E" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORD_SRC" value="0x8450" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORD" value="0x8451" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="CURRENT_FOG_COORD" value="0x8453" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORD_ARRAY_TYPE" value="0x8454" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORD_ARRAY_STRIDE" value="0x8455" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORD_ARRAY_POINTER" value="0x8456" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORD_ARRAY" value="0x8457" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="FOG_COORD_ARRAY_BUFFER_BINDING" value="0x889D" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="SRC0_RGB" value="0x8580" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="SRC1_RGB" value="0x8581" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="SRC2_RGB" value="0x8582" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="SRC0_ALPHA" value="0x8588" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="SRC2_ALPHA" value="0x858A" version="1.5" deprecated="3.0" removed="3.1" />
		<enum name="BLEND_EQUATION_RGB" value="0x8009" version="2.0" />
		<enum name="VERTEX_ATTRIB_ARRAY_ENABLED" value="0x8622" version="2.0" />
		<enum name="VERTEX_ATTRIB_ARRAY_SIZE" value="0x8623" version="2.0" />
		<enum name="VERTEX_ATTRIB_ARRAY_STRIDE" value="0x8624" version="2.0" />
		<enum name="VERTEX_ATTRIB_ARRAY_TYPE" value="0x8625" version="2.0" />
		<enum name="CURRENT_VERTEX_ATTRIB" value="0x8626" version="2.0" />
		<enum name="VERTEX_PROGRAM_POINT_SIZE" value="0x8642" version="2.0" />
		<enum name="VERTEX_ATTRIB_ARRAY_POINTER" value="0x8645" version="2.0" />
		<enum name="STENCIL_BACK_FUNC" value="0x8800" version="2.0" />
		<enum name="STENCIL_BACK_FAIL" value="0x8801" version="2.0" />
		<enum name="STENCIL_BACK_PASS_DEPTH_FAIL" value="0x8802" version="2.0" />
		<enum name="STENCIL_BACK_PASS_DEPTH_PASS" value="0x8803" version="2.0" />
		<enum name="MAX_DRAW_BUFFERS" value="0x8824" version="2.0" />
		<enum name="DRAW_BUFFER0" value="0x8825" version="2.0" />
		<enum name="DRAW_BUFFER1" value="0x8826" version="2.0" />
		<enum name="DRAW_BUFFER2" value="0x8827" version="2.0" />
		<enum name="DRAW_BUFFER3" value="0x8828" version="2.0" />
		<enum name="DRAW_BUFFER4" value="0x8829" version="2.0" />
		<enum name="DRAW_BUFFER5" value="0x882A" version="2.0" />
		<enum name="DRAW_BUFFER6" value="0x882B" version="2.0" />
		<enum name="DRAW_BUFFER7" value="0x882C" version="2.0" />
		<enum name="DRAW_BUFFER8" value="0x882D" version="2.0" />
		<enum name="DRAW_BUFFER9" value="0x882E" version="2.0" />
		<enum name="DRAW_BUFFER10" value="0x882F" version="2.0" />
		<enum name="DRAW_BUFFER11" value="0x8830" version="2.0" />
		<enum name="DRAW_BUFFER12" value="0x8831" version="2.0" />
		<enum name="DRAW_BUFFER13" value="0x8832" version="2.0" />
		<enum name="DRAW_BUFFER14" value="0x8833" version="2.0" />
		<enum name="DRAW_BUFFER15" value="0x8834" version="2.0" />
		<enum name="BLEND_EQUATION_ALPHA" value="0x883D" version="2.0" />
		<enum name="MAX_VERTEX_ATTRIBS" value="0x8869" version="2.0" />
		<enum name="VERTEX_ATTRIB_ARRAY_NORMALIZED" value="0x886A" version="2.0" />
		<enum name="MAX_TEXTURE_IMAGE_UNITS" value="0x8872" version="2.0" />
		<enum name="FRAGMENT_SHADER" value="0x8B30" version="2.0" />
		<enum name="VERTEX_SHADER" value="0x8B31" version="2.0" />
		<enum name="MAX_FRAGMENT_UNIFORM_COMPONENTS" value="0x8B49" version="2.0" />
		<enum name="MAX_VERTEX_UNIFORM_COMPONENTS" value="0x8B4A" version="2.0" />
		<enum name="MAX_VARYING_FLOATS" value="0x8B4B" version="2.0" />
		<enum name="MAX_VERTEX_TEXTURE_IMAGE_UNITS" value="0x8B4C" version="2.0" />
		<enum name="MAX_COMBINED_TEXTURE_IMAGE_UNITS" value="0x8B4D" version="2.0" />
		<enum name="SHADER_TYPE" value="0x8B4F" version="2.0" />
		<enum name="FLOAT_VEC2" value="0x8B50" version="2.0" />
		<enum name="FLOAT_VEC3" value="0x8B51" version="2.0" />
		<enum name="FLOAT_VEC4" value="0x8B52" version="2.0" />
		<enum name="INT_VEC2" value="0x8B53" version="2.0" />
		<enum name="INT_VEC3" value="0x8B54" version="2.0" />
		<enum name="INT_VEC4" value="0x8B55" version="2.0" />
		<enum name="BOOL" value="0x8B56" version="2.0" />
		<enum name="BOOL_VEC2" value="0x8B57" version="2.0" />
		<enum name="BOOL_VEC3" value="0x8B58" version="2.0" />
		<enum name="BOOL_VEC4" value="0x8B59" version="2.0" />
		<enum name="FLOAT_MAT2" value="0x8B5A" version="2.0" />
		<enum name="FLOAT_MAT3" value="0x8B5B" version="2.0" />
		<enum name="FLOAT_MAT4" value="0x8B5C" version="2.0" />
		<enum name="SAMPLER_1D" value="0x8B5D" version="2.0" />
		<enum name="SAMPLER_2D" value="0x8B5E" version="2.0" />
		<enum name="SAMPLER_3D" value="0x8B5F" version="2.0" />
		<enum name="SAMPLER_CUBE" value="0x8B60" version="2.0" />
		<enum name="SAMPLER_1D_SHADOW" value="0x8B61" version="2.0" />
		<enum name="SAMPLER_2D_SHADOW" value="0x8B62" version="2.0" />
		<enum name="DELETE_STATUS" value="0x8B80" version="2.0" />
		<enum name="COMPILE_STATUS" value="0x8B81" version="2.0" />
		<enum name="LINK_STATUS" value="0x8B82" version="2.0" />
		<enum name="VALIDATE_STATUS" value="0x8B83" version="2.0" />
		<enum name="INFO_LOG_LENGTH" value="0x8B84" version="2.0" />
		<enum name="ATTACHED_SHADERS" value="0x8B85" version="2.0" />
		<enum name="ACTIVE_UNIFORMS" value="0x8B86" version="2.0" />
		<enum name="ACTIVE_UNIFORM_MAX_LENGTH" value="0x8B87" version="2.0" />
		<enum name="SHADER_SOURCE_LENGTH" value="0x8B88" version="2.0" />
		<enum name="ACTIVE_ATTRIBUTES" value="0x8B89" version="2.0" />
		<enum name="ACTIVE_ATTRIBUTE_MAX_LENGTH" value="0x8B8A" version="2.0" />
		<enum name="FRAGMENT_SHADER_DERIVATIVE_HINT" value="0x8B8B" version="2.0" />
		<enum name="SHADING_LANGUAGE_VERSION" value="0x8B8C" version="2.0" />
		<enum name="CURRENT_PROGRAM" value="0x8B8D" version="2.0" />
		<enum name="POINT_SPRITE_COORD_ORIGIN" value="0x8CA0" version="2.0" />
		<enum name="LOWER_LEFT" value="0x8CA1" version="2.0" />
		<enum name="UPPER_LEFT" value="0x8CA2" version="2.0" />
		<enum name="STENCIL_BACK_REF" value="0x8CA3" version="2.0" />
		<enum name="STENCIL_BACK_VALUE_MASK" value="0x8CA4" version="2.0" />
		<enum name="STENCIL_BACK_WRITEMASK" value="0x8CA5" version="2.0" />
		<enum name="VERTEX_PROGRAM_TWO_SIDE" value="0x8643" version="2.0" deprecated="3.0" removed="3.1" />
		<enum name="POINT_SPRITE" value="0x8861" version="2.0" deprecated="3.0" removed="3.1" />
		<enum name="COORD_REPLACE" value="0x8862" version="2.0" deprecated="3.0" removed="3.1" />
		<enum name="MAX_TEXTURE_COORDS" value="0x8871" version="2.0" deprecated="3.0" removed="3.1" />
		<enum name="PIXEL_PACK_BUFFER" value="0x88EB" version="2.1" />
		<enum name="PIXEL_UNPACK_BUFFER" value="0x88EC" version="2.1" />
		<enum name="PIXEL_PACK_BUFFER_BINDING" value="0x88ED" version="2.1" />
		<enum name="PIXEL_UNPACK_BUFFER_BINDING" value="0x88EF" version="2.1" />
		<enum name="FLOAT_MAT2x3" value="0x8B65" version="2.1" />
		<enum name="FLOAT_MAT2x4" value="0x8B66" version="2.1" />
		<enum name="FLOAT_MAT3x2" value="0x8B67" version="2.1" />
		<enum name="FLOAT_MAT3x4" value="0x8B68" version="2.1" />
		<enum name="FLOAT_MAT4x2" value="0x8B69" version="2.1" />
		<enum name="FLOAT_MAT4x3" value="0x8B6A" version="2.1" />
		<enum name="SRGB" value="0x8C40" version="2.1" />
		<enum name="SRGB8" value="0x8C41" version="2.1" />
		<enum name="SRGB_ALPHA" value="0x8C42" version="2.1" />
		<enum name="SRGB8_ALPHA8" value="0x8C43" version="2.1" />
		<enum name="COMPRESSED_SRGB" value="0x8C48" version="2.1" />
		<enum name="COMPRESSED_SRGB_ALPHA" value="0x8C49" version="2.1" />
		<enum name="CURRENT_RASTER_SECONDARY_COLOR" value="0x845F" version="2.1" deprecated="3.0" removed="3.1" />
		<enum name="SLUMINANCE_ALPHA" value="0x8C44" version="2.1" deprecated="3.0" removed="3.1" />
		<enum name="SLUMINANCE8_ALPHA8" value="0x8C45" version="2.1" deprecated="3.0" removed="3.1" />
		<enum name="SLUMINANCE" value="0x8C46" version="2.1" deprecated="3.0" removed="3.1" />
		<enum name="SLUMINANCE8" value="0x8C47" version="2.1" deprecated="3.0" removed="3.1" />
		<enum name="COMPRESSED_SLUMINANCE" value="0x8C4A" version="2.1" deprecated="3.0" removed="3.1" />
		<enum name="COMPRESSED_SLUMINANCE_ALPHA" value="0x8C4B" version="2.1" deprecated="3.0" removed="3.1" />
		<enum name="COMPARE_REF_TO_TEXTURE" value="0x884E" version="3.0" />
		<enum name="CLIP_DISTANCE0" value="0x3000" version="3.0" />
		<enum name="CLIP_DISTANCE1" value="0x3001" version="3.0" />
		<enum name="CLIP_DISTANCE2" value="0x3002" version="3.0" />
		<enum name="CLIP_DISTANCE3" value="0x3003" version="3.0" />
		<enum name="CLIP_DISTANCE4" value="0x3004" version="3.0" />
		<enum name="CLIP_DISTANCE5" value="0x3005" version="3.0" />
		<enum name="CLIP_DISTANCE6" value="0x3006" version="3.0" />
		<enum name="CLIP_DISTANCE7" value="0x3007" version="3.0" />
		<enum name="MAX_CLIP_DISTANCES" value="0x0D32" version="3.0" />
		<enum name="MAJOR_VERSION" value="0x821B" version="3.0" />
		<enum name="MINOR_VERSION" value="0x821C" version="3.0" />
		<enum name="NUM_EXTENSIONS" value="0x821D" version="3.0" />
		<enum name="CONTEXT_FLAGS" value="0x821E" version="3.0" />
		<enum name="COMPRESSED_RED" value="0x8225" version="3.0" />
		<enum name="COMPRESSED_RG" value="0x8226" version="3.0" />
		<enum name="CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT" value="0x0001" version="3.0" />
		<enum name="RGBA32F" value="0x8814" version="3.0" />
		<enum name="RGB32F" value="0x8815" version="3.0" >
			<ext name="ARB_texture_buffer_object_rgb32" />
		</enum>
		<enum name="RGBA16F" value="0x881A" version="3.0" />
		<enum name="RGB16F" value="0x881B" version="3.0" />
		<enum name="VERTEX_ATTRIB_ARRAY_INTEGER" value="0x88FD" version="3.0" />
		<enum name="MAX_ARRAY_TEXTURE_LAYERS" value="0x88FF" version="3.0" />
		<enum name="MIN_PROGRAM_TEXEL_OFFSET" value="0x8904" version="3.0" />
		<enum name="MAX_PROGRAM_TEXEL_OFFSET" value="0x8905" version="3.0" />
		<enum name="CLAMP_READ_COLOR" value="0x891C" version="3.0" />
		<enum name="FIXED_ONLY" value="0x891D" version="3.0" />
		<enum name="MAX_VARYING_COMPONENTS" value="0x8B4B" version="3.0" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="TEXTURE_1D_ARRAY" value="0x8C18" version="3.0" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="PROXY_TEXTURE_1D_ARRAY" value="0x8C19" version="3.0" />
		<enum name="TEXTURE_2D_ARRAY" value="0x8C1A" version="3.0" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="PROXY_TEXTURE_2D_ARRAY" value="0x8C1B" version="3.0" />
		<enum name="TEXTURE_BINDING_1D_ARRAY" value="0x8C1C" version="3.0" />
		<enum name="TEXTURE_BINDING_2D_ARRAY" value="0x8C1D" version="3.0" />
		<enum name="R11F_G11F_B10F" value="0x8C3A" version="3.0" />
		<enum name="UNSIGNED_INT_10F_11F_11F_REV" value="0x8C3B" version="3.0" />
		<enum name="RGB9_E5" value="0x8C3D" version="3.0" />
		<enum name="UNSIGNED_INT_5_9_9_9_REV" value="0x8C3E" version="3.0" />
		<enum name="TEXTURE_SHARED_SIZE" value="0x8C3F" version="3.0" />
		<enum name="TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH" value="0x8C76" version="3.0" />
		<enum name="TRANSFORM_FEEDBACK_BUFFER_MODE" value="0x8C7F" version="3.0" />
		<enum name="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS" value="0x8C80" version="3.0" />
		<enum name="TRANSFORM_FEEDBACK_VARYINGS" value="0x8C83" version="3.0" />
		<enum name="TRANSFORM_FEEDBACK_BUFFER_START" value="0x8C84" version="3.0" />
		<enum name="TRANSFORM_FEEDBACK_BUFFER_SIZE" value="0x8C85" version="3.0" />
		<enum name="PRIMITIVES_GENERATED" value="0x8C87" version="3.0" />
		<enum name="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN" value="0x8C88" version="3.0" />
		<enum name="RASTERIZER_DISCARD" value="0x8C89" version="3.0" />
		<enum name="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS" value="0x8C8A" version="3.0" />
		<enum name="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS" value="0x8C8B" version="3.0" />
		<enum name="INTERLEAVED_ATTRIBS" value="0x8C8C" version="3.0" />
		<enum name="SEPARATE_ATTRIBS" value="0x8C8D" version="3.0" />
		<enum name="TRANSFORM_FEEDBACK_BUFFER" value="0x8C8E" version="3.0" />
		<enum name="TRANSFORM_FEEDBACK_BUFFER_BINDING" value="0x8C8F" version="3.0" />
		<enum name="RGBA32UI" value="0x8D70" version="3.0" />
		<enum name="RGB32UI" value="0x8D71" version="3.0" >
			<ext name="ARB_texture_buffer_object_rgb32" />
		</enum>
		<enum name="RGBA16UI" value="0x8D76" version="3.0" />
		<enum name="RGB16UI" value="0x8D77" version="3.0" />
		<enum name="RGBA8UI" value="0x8D7C" version="3.0" />
		<enum name="RGB8UI" value="0x8D7D" version="3.0" />
		<enum name="RGBA32I" value="0x8D82" version="3.0" />
		<enum name="RGB32I" value="0x8D83" version="3.0" >
			<ext name="ARB_texture_buffer_object_rgb32" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="RGBA16I" value="0x8D88" version="3.0" />
		<enum name="RGB16I" value="0x8D89" version="3.0" />
		<enum name="RGBA8I" value="0x8D8E" version="3.0" />
		<enum name="RGB8I" value="0x8D8F" version="3.0" />
		<enum name="RED_INTEGER" value="0x8D94" version="3.0" />
		<enum name="GREEN_INTEGER" value="0x8D95" version="3.0" />
		<enum name="BLUE_INTEGER" value="0x8D96" version="3.0" />
		<enum name="RGB_INTEGER" value="0x8D98" version="3.0" />
		<enum name="RGBA_INTEGER" value="0x8D99" version="3.0" />
		<enum name="BGR_INTEGER" value="0x8D9A" version="3.0" />
		<enum name="BGRA_INTEGER" value="0x8D9B" version="3.0" />
		<enum name="SAMPLER_1D_ARRAY" value="0x8DC0" version="3.0" />
		<enum name="SAMPLER_2D_ARRAY" value="0x8DC1" version="3.0" />
		<enum name="SAMPLER_1D_ARRAY_SHADOW" value="0x8DC3" version="3.0" />
		<enum name="SAMPLER_2D_ARRAY_SHADOW" value="0x8DC4" version="3.0" />
		<enum name="SAMPLER_CUBE_SHADOW" value="0x8DC5" version="3.0" />
		<enum name="UNSIGNED_INT_VEC2" value="0x8DC6" version="3.0" />
		<enum name="UNSIGNED_INT_VEC3" value="0x8DC7" version="3.0" />
		<enum name="UNSIGNED_INT_VEC4" value="0x8DC8" version="3.0" />
		<enum name="INT_SAMPLER_1D" value="0x8DC9" version="3.0" />
		<enum name="INT_SAMPLER_2D" value="0x8DCA" version="3.0" />
		<enum name="INT_SAMPLER_3D" value="0x8DCB" version="3.0" />
		<enum name="INT_SAMPLER_CUBE" value="0x8DCC" version="3.0" />
		<enum name="INT_SAMPLER_1D_ARRAY" value="0x8DCE" version="3.0" />
		<enum name="INT_SAMPLER_2D_ARRAY" value="0x8DCF" version="3.0" />
		<enum name="UNSIGNED_INT_SAMPLER_1D" value="0x8DD1" version="3.0" />
		<enum name="UNSIGNED_INT_SAMPLER_2D" value="0x8DD2" version="3.0" />
		<enum name="UNSIGNED_INT_SAMPLER_3D" value="0x8DD3" version="3.0" />
		<enum name="UNSIGNED_INT_SAMPLER_CUBE" value="0x8DD4" version="3.0" />
		<enum name="UNSIGNED_INT_SAMPLER_1D_ARRAY" value="0x8DD6" version="3.0" />
		<enum name="UNSIGNED_INT_SAMPLER_2D_ARRAY" value="0x8DD7" version="3.0" />
		<enum name="QUERY_WAIT" value="0x8E13" version="3.0" />
		<enum name="QUERY_NO_WAIT" value="0x8E14" version="3.0" />
		<enum name="QUERY_BY_REGION_WAIT" value="0x8E15" version="3.0" />
		<enum name="QUERY_BY_REGION_NO_WAIT" value="0x8E16" version="3.0" />
		<enum name="BUFFER_ACCESS_FLAGS" value="0x911F" version="3.0" />
		<enum name="BUFFER_MAP_LENGTH" value="0x9120" version="3.0" />
		<enum name="BUFFER_MAP_OFFSET" value="0x9121" version="3.0" />
		<enum name="DEPTH_COMPONENT32F" value="0x8CAC" version="3.0" >
			<ext name="ARB_depth_buffer_float" />
		</enum>
		<enum name="DEPTH32F_STENCIL8" value="0x8CAD" version="3.0" >
			<ext name="ARB_depth_buffer_float" />
		</enum>
		<enum name="FLOAT_32_UNSIGNED_INT_24_8_REV" value="0x8DAD" version="3.0" >
			<ext name="ARB_depth_buffer_float" />
		</enum>
		<enum name="INVALID_FRAMEBUFFER_OPERATION" value="0x0506" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING" value="0x8210" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE" value="0x8211" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_RED_SIZE" value="0x8212" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_GREEN_SIZE" value="0x8213" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_BLUE_SIZE" value="0x8214" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE" value="0x8215" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE" value="0x8216" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE" value="0x8217" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_DEFAULT" value="0x8218" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_UNDEFINED" value="0x8219" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="DEPTH_STENCIL_ATTACHMENT" value="0x821A" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="INDEX" value="0x8222" version="3.0" deprecated="3.0" removed="3.1" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="MAX_RENDERBUFFER_SIZE" value="0x84E8" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="DEPTH_STENCIL" value="0x84F9" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="UNSIGNED_INT_24_8" value="0x84FA" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="DEPTH24_STENCIL8" value="0x88F0" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="TEXTURE_STENCIL_SIZE" value="0x88F1" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="TEXTURE_RED_TYPE" value="0x8C10" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="TEXTURE_GREEN_TYPE" value="0x8C11" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="TEXTURE_BLUE_TYPE" value="0x8C12" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="TEXTURE_ALPHA_TYPE" value="0x8C13" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="TEXTURE_DEPTH_TYPE" value="0x8C16" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="UNSIGNED_NORMALIZED" value="0x8C17" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_BINDING" value="0x8CA6" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="DRAW_FRAMEBUFFER_BINDING" ref="FRAMEBUFFER_BINDING" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_BINDING" value="0x8CA7" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="READ_FRAMEBUFFER" value="0x8CA8" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="DRAW_FRAMEBUFFER" value="0x8CA9" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="READ_FRAMEBUFFER_BINDING" value="0x8CAA" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_SAMPLES" value="0x8CAB" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE" value="0x8CD0" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME" value="0x8CD1" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL" value="0x8CD2" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE" value="0x8CD3" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER" value="0x8CD4" version="3.0" >
			<ext name="ARB_framebuffer_object" />
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="FRAMEBUFFER_COMPLETE" value="0x8CD5" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_ATTACHMENT" value="0x8CD6" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT" value="0x8CD7" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER" value="0x8CDB" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_READ_BUFFER" value="0x8CDC" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_UNSUPPORTED" value="0x8CDD" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="MAX_COLOR_ATTACHMENTS" value="0x8CDF" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT0" value="0x8CE0" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT1" value="0x8CE1" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT2" value="0x8CE2" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT3" value="0x8CE3" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT4" value="0x8CE4" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT5" value="0x8CE5" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT6" value="0x8CE6" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT7" value="0x8CE7" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT8" value="0x8CE8" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT9" value="0x8CE9" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT10" value="0x8CEA" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT11" value="0x8CEB" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT12" value="0x8CEC" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT13" value="0x8CED" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT14" value="0x8CEE" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT15" value="0x8CEF" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="DEPTH_ATTACHMENT" value="0x8D00" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="STENCIL_ATTACHMENT" value="0x8D20" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER" value="0x8D40" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER" value="0x8D41" version="3.0" >
			<ext name="ARB_framebuffer_object" />
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="RENDERBUFFER_WIDTH" value="0x8D42" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_HEIGHT" value="0x8D43" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_INTERNAL_FORMAT" value="0x8D44" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="STENCIL_INDEX1" value="0x8D46" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="STENCIL_INDEX4" value="0x8D47" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="STENCIL_INDEX8" value="0x8D48" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="STENCIL_INDEX16" value="0x8D49" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_RED_SIZE" value="0x8D50" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_GREEN_SIZE" value="0x8D51" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_BLUE_SIZE" value="0x8D52" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_ALPHA_SIZE" value="0x8D53" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_DEPTH_SIZE" value="0x8D54" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_STENCIL_SIZE" value="0x8D55" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE" value="0x8D56" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="MAX_SAMPLES" value="0x8D57" version="3.0" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_SRGB" value="0x8DB9" version="3.0" >
			<ext name="ARB_framebuffer_sRGB" />
		</enum>
		<enum name="HALF_FLOAT" value="0x140B" version="3.0" >
			<ext name="ARB_half_float_vertex" />
		</enum>
		<enum name="MAP_READ_BIT" value="0x0001" version="3.0" >
			<ext name="ARB_map_buffer_range" />
		</enum>
		<enum name="MAP_WRITE_BIT" value="0x0002" version="3.0" >
			<ext name="ARB_map_buffer_range" />
		</enum>
		<enum name="MAP_INVALIDATE_RANGE_BIT" value="0x0004" version="3.0" >
			<ext name="ARB_map_buffer_range" />
		</enum>
		<enum name="MAP_INVALIDATE_BUFFER_BIT" value="0x0008" version="3.0" >
			<ext name="ARB_map_buffer_range" />
		</enum>
		<enum name="MAP_FLUSH_EXPLICIT_BIT" value="0x0010" version="3.0" >
			<ext name="ARB_map_buffer_range" />
		</enum>
		<enum name="MAP_UNSYNCHRONIZED_BIT" value="0x0020" version="3.0" >
			<ext name="ARB_map_buffer_range" />
		</enum>
		<enum name="COMPRESSED_RED_RGTC1" value="0x8DBB" version="3.0" >
			<ext name="ARB_texture_compression_rgtc" />
		</enum>
		<enum name="COMPRESSED_SIGNED_RED_RGTC1" value="0x8DBC" version="3.0" >
			<ext name="ARB_texture_compression_rgtc" />
		</enum>
		<enum name="COMPRESSED_RG_RGTC2" value="0x8DBD" version="3.0" >
			<ext name="ARB_texture_compression_rgtc" />
		</enum>
		<enum name="COMPRESSED_SIGNED_RG_RGTC2" value="0x8DBE" version="3.0" >
			<ext name="ARB_texture_compression_rgtc" />
		</enum>
		<enum name="RG" value="0x8227" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG_INTEGER" value="0x8228" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R8" value="0x8229" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R16" value="0x822A" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG8" value="0x822B" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG16" value="0x822C" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R16F" value="0x822D" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R32F" value="0x822E" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG16F" value="0x822F" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG32F" value="0x8230" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R8I" value="0x8231" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R8UI" value="0x8232" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R16I" value="0x8233" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R16UI" value="0x8234" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R32I" value="0x8235" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="R32UI" value="0x8236" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG8I" value="0x8237" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG8UI" value="0x8238" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG16I" value="0x8239" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG16UI" value="0x823A" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG32I" value="0x823B" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="RG32UI" value="0x823C" version="3.0" >
			<ext name="ARB_texture_rg" />
		</enum>
		<enum name="VERTEX_ARRAY_BINDING" value="0x85B5" version="3.0" >
			<ext name="ARB_vertex_array_object" />
		</enum>
		<enum name="CLAMP_VERTEX_COLOR" value="0x891A" version="3.0" deprecated="3.0" removed="3.1" />
		<enum name="CLAMP_FRAGMENT_COLOR" value="0x891B" version="3.0" deprecated="3.0" removed="3.1" />
		<enum name="ALPHA_INTEGER" value="0x8D97" version="3.0" deprecated="3.0" removed="3.1" />
		<enum name="TEXTURE_LUMINANCE_TYPE" value="0x8C14" version="3.0" deprecated="3.0" removed="3.1" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="TEXTURE_INTENSITY_TYPE" value="0x8C15" version="3.0" deprecated="3.0" removed="3.1" >
			<ext name="ARB_framebuffer_object" />
		</enum>
		<enum name="SAMPLER_2D_RECT" value="0x8B63" version="3.1" />
		<enum name="SAMPLER_2D_RECT_SHADOW" value="0x8B64" version="3.1" />
		<enum name="SAMPLER_BUFFER" value="0x8DC2" version="3.1" />
		<enum name="INT_SAMPLER_2D_RECT" value="0x8DCD" version="3.1" />
		<enum name="INT_SAMPLER_BUFFER" value="0x8DD0" version="3.1" />
		<enum name="UNSIGNED_INT_SAMPLER_2D_RECT" value="0x8DD5" version="3.1" />
		<enum name="UNSIGNED_INT_SAMPLER_BUFFER" value="0x8DD8" version="3.1" />
		<enum name="TEXTURE_BUFFER" value="0x8C2A" version="3.1" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MAX_TEXTURE_BUFFER_SIZE" value="0x8C2B" version="3.1" />
		<enum name="TEXTURE_BINDING_BUFFER" value="0x8C2C" version="3.1" />
		<enum name="TEXTURE_BUFFER_DATA_STORE_BINDING" value="0x8C2D" version="3.1" />
		<enum name="TEXTURE_RECTANGLE" value="0x84F5" version="3.1" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_BINDING_RECTANGLE" value="0x84F6" version="3.1" />
		<enum name="PROXY_TEXTURE_RECTANGLE" value="0x84F7" version="3.1" />
		<enum name="MAX_RECTANGLE_TEXTURE_SIZE" value="0x84F8" version="3.1" />
		<enum name="RED_SNORM" value="0x8F90" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RG_SNORM" value="0x8F91" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RGB_SNORM" value="0x8F92" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RGBA_SNORM" value="0x8F93" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="R8_SNORM" value="0x8F94" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RG8_SNORM" value="0x8F95" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RGB8_SNORM" value="0x8F96" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RGBA8_SNORM" value="0x8F97" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="R16_SNORM" value="0x8F98" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RG16_SNORM" value="0x8F99" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RGB16_SNORM" value="0x8F9A" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="RGBA16_SNORM" value="0x8F9B" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="SIGNED_NORMALIZED" value="0x8F9C" version="3.1" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="PRIMITIVE_RESTART" value="0x8F9D" version="3.1" />
		<enum name="PRIMITIVE_RESTART_INDEX" value="0x8F9E" version="3.1" />
		<enum name="COPY_READ_BUFFER" ref="COPY_READ_BUFFER_BINDING" version="3.1" >
			<ext name="ARB_copy_buffer" />
		</enum>
		<enum name="COPY_WRITE_BUFFER" ref="COPY_WRITE_BUFFER_BINDING" version="3.1" >
			<ext name="ARB_copy_buffer" />
		</enum>
		<enum name="UNIFORM_BUFFER" value="0x8A11" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BUFFER_BINDING" value="0x8A28" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BUFFER_START" value="0x8A29" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BUFFER_SIZE" value="0x8A2A" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="MAX_VERTEX_UNIFORM_BLOCKS" value="0x8A2B" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="MAX_FRAGMENT_UNIFORM_BLOCKS" value="0x8A2D" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="MAX_COMBINED_UNIFORM_BLOCKS" value="0x8A2E" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="MAX_UNIFORM_BUFFER_BINDINGS" value="0x8A2F" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="MAX_UNIFORM_BLOCK_SIZE" value="0x8A30" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS" value="0x8A31" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS" value="0x8A33" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BUFFER_OFFSET_ALIGNMENT" value="0x8A34" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH" value="0x8A35" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="ACTIVE_UNIFORM_BLOCKS" value="0x8A36" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_TYPE" value="0x8A37" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_SIZE" value="0x8A38" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="UNIFORM_NAME_LENGTH" value="0x8A39" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="UNIFORM_BLOCK_INDEX" value="0x8A3A" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_OFFSET" value="0x8A3B" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_ARRAY_STRIDE" value="0x8A3C" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_MATRIX_STRIDE" value="0x8A3D" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_IS_ROW_MAJOR" value="0x8A3E" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BLOCK_BINDING" value="0x8A3F" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BLOCK_DATA_SIZE" value="0x8A40" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BLOCK_NAME_LENGTH" value="0x8A41" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BLOCK_ACTIVE_UNIFORMS" value="0x8A42" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES" value="0x8A43" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER" value="0x8A44" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER" value="0x8A46" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="INVALID_INDEX" value="0xFFFFFFFF" version="3.1" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="CONTEXT_CORE_PROFILE_BIT" value="0x00000001" version="3.2" />
		<enum name="CONTEXT_COMPATIBILITY_PROFILE_BIT" value="0x00000002" version="3.2" />
		<enum name="LINES_ADJACENCY" value="0x000A" version="3.2" />
		<enum name="LINE_STRIP_ADJACENCY" value="0x000B" version="3.2" />
		<enum name="TRIANGLES_ADJACENCY" value="0x000C" version="3.2" />
		<enum name="TRIANGLE_STRIP_ADJACENCY" value="0x000D" version="3.2" />
		<enum name="PROGRAM_POINT_SIZE" value="0x8642" version="3.2" />
		<enum name="MAX_GEOMETRY_TEXTURE_IMAGE_UNITS" value="0x8C29" version="3.2" />
		<enum name="FRAMEBUFFER_ATTACHMENT_LAYERED" value="0x8DA7" version="3.2" />
		<enum name="FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS" value="0x8DA8" version="3.2" />
		<enum name="GEOMETRY_SHADER" value="0x8DD9" version="3.2" />
		<enum name="GEOMETRY_VERTICES_OUT" value="0x8916" version="3.2" />
		<enum name="GEOMETRY_INPUT_TYPE" value="0x8917" version="3.2" />
		<enum name="GEOMETRY_OUTPUT_TYPE" value="0x8918" version="3.2" />
		<enum name="MAX_GEOMETRY_UNIFORM_COMPONENTS" value="0x8DDF" version="3.2" />
		<enum name="MAX_GEOMETRY_OUTPUT_VERTICES" value="0x8DE0" version="3.2" />
		<enum name="MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS" value="0x8DE1" version="3.2" />
		<enum name="MAX_VERTEX_OUTPUT_COMPONENTS" value="0x9122" version="3.2" />
		<enum name="MAX_GEOMETRY_INPUT_COMPONENTS" value="0x9123" version="3.2" />
		<enum name="MAX_GEOMETRY_OUTPUT_COMPONENTS" value="0x9124" version="3.2" />
		<enum name="MAX_FRAGMENT_INPUT_COMPONENTS" value="0x9125" version="3.2" />
		<enum name="CONTEXT_PROFILE_MASK" value="0x9126" version="3.2" />
		<enum name="DEPTH_CLAMP" value="0x864F" version="3.2" >
			<ext name="ARB_depth_clamp" />
		</enum>
		<enum name="QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION" value="0x8E4C" version="3.2" >
			<ext name="ARB_provoking_vertex" />
		</enum>
		<enum name="FIRST_VERTEX_CONVENTION" value="0x8E4D" version="3.2" >
			<ext name="ARB_provoking_vertex" />
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="LAST_VERTEX_CONVENTION" value="0x8E4E" version="3.2" >
			<ext name="ARB_provoking_vertex" />
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="PROVOKING_VERTEX" value="0x8E4F" version="3.2" >
			<ext name="ARB_provoking_vertex" />
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_SEAMLESS" value="0x884F" version="3.2" >
			<ext name="ARB_seamless_cube_map" />
			<ext name="AMD_seamless_cubemap_per_texture" />
		</enum>
		<enum name="MAX_SERVER_WAIT_TIMEOUT" value="0x9111" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="OBJECT_TYPE" value="0x9112" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="SYNC_CONDITION" value="0x9113" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="SYNC_STATUS" value="0x9114" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="SYNC_FLAGS" value="0x9115" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="SYNC_FENCE" value="0x9116" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="SYNC_GPU_COMMANDS_COMPLETE" value="0x9117" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="UNSIGNALED" value="0x9118" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="SIGNALED" value="0x9119" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="ALREADY_SIGNALED" value="0x911A" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="TIMEOUT_EXPIRED" value="0x911B" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="CONDITION_SATISFIED" value="0x911C" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="WAIT_FAILED" value="0x911D" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="TIMEOUT_IGNORED" value="0xFFFFFFFFFFFFFFFF" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="SYNC_FLUSH_COMMANDS_BIT" value="0x00000001" version="3.2" >
			<ext name="ARB_sync" />
		</enum>
		<enum name="SAMPLE_POSITION" value="0x8E50" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="SAMPLE_MASK" value="0x8E51" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_VALUE" value="0x8E52" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="MAX_SAMPLE_MASK_WORDS" value="0x8E59" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="TEXTURE_2D_MULTISAMPLE" value="0x9100" version="3.2" >
			<ext name="ARB_texture_multisample" />
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="PROXY_TEXTURE_2D_MULTISAMPLE" value="0x9101" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="TEXTURE_2D_MULTISAMPLE_ARRAY" value="0x9102" version="3.2" >
			<ext name="ARB_texture_multisample" />
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY" value="0x9103" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="TEXTURE_BINDING_2D_MULTISAMPLE" value="0x9104" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY" value="0x9105" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="TEXTURE_SAMPLES" value="0x9106" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="TEXTURE_FIXED_SAMPLE_LOCATIONS" value="0x9107" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="SAMPLER_2D_MULTISAMPLE" value="0x9108" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="INT_SAMPLER_2D_MULTISAMPLE" value="0x9109" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE" value="0x910A" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="SAMPLER_2D_MULTISAMPLE_ARRAY" value="0x910B" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="INT_SAMPLER_2D_MULTISAMPLE_ARRAY" value="0x910C" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY" value="0x910D" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="MAX_COLOR_TEXTURE_SAMPLES" value="0x910E" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="MAX_DEPTH_TEXTURE_SAMPLES" value="0x910F" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="MAX_INTEGER_SAMPLES" value="0x9110" version="3.2" >
			<ext name="ARB_texture_multisample" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_DIVISOR" value="0x88FE" version="3.3" />
		<enum name="SRC1_COLOR" value="0x88F9" version="3.3" >
			<ext name="ARB_blend_func_extended" />
		</enum>
		<enum name="ONE_MINUS_SRC1_COLOR" value="0x88FA" version="3.3" >
			<ext name="ARB_blend_func_extended" />
		</enum>
		<enum name="ONE_MINUS_SRC1_ALPHA" value="0x88FB" version="3.3" >
			<ext name="ARB_blend_func_extended" />
		</enum>
		<enum name="MAX_DUAL_SOURCE_DRAW_BUFFERS" value="0x88FC" version="3.3" >
			<ext name="ARB_blend_func_extended" />
		</enum>
		<enum name="ANY_SAMPLES_PASSED" value="0x8C2F" version="3.3" >
			<ext name="ARB_occlusion_query2" />
		</enum>
		<enum name="SAMPLER_BINDING" value="0x8919" version="3.3" >
			<ext name="ARB_sampler_objects" />
		</enum>
		<enum name="RGB10_A2UI" value="0x906F" version="3.3" >
			<ext name="ARB_texture_rgb10_a2ui" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_R" value="0x8E42" version="3.3" >
			<ext name="ARB_texture_swizzle" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_G" value="0x8E43" version="3.3" >
			<ext name="ARB_texture_swizzle" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_B" value="0x8E44" version="3.3" >
			<ext name="ARB_texture_swizzle" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_A" value="0x8E45" version="3.3" >
			<ext name="ARB_texture_swizzle" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_RGBA" value="0x8E46" version="3.3" >
			<ext name="ARB_texture_swizzle" />
		</enum>
		<enum name="TIME_ELAPSED" value="0x88BF" version="3.3" >
			<ext name="ARB_timer_query" />
		</enum>
		<enum name="TIMESTAMP" value="0x8E28" version="3.3" >
			<ext name="ARB_timer_query" />
		</enum>
		<enum name="INT_2_10_10_10_REV" value="0x8D9F" version="3.3" >
			<ext name="ARB_vertex_type_2_10_10_10_rev" />
		</enum>
		<enum name="SAMPLE_SHADING" value="0x8C36" version="4.0" />
		<enum name="MIN_SAMPLE_SHADING_VALUE" value="0x8C37" version="4.0" />
		<enum name="MIN_PROGRAM_TEXTURE_GATHER_OFFSET" value="0x8E5E" version="4.0" />
		<enum name="MAX_PROGRAM_TEXTURE_GATHER_OFFSET" value="0x8E5F" version="4.0" />
		<enum name="MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS" value="0x8F9F" version="4.0" />
		<enum name="TEXTURE_CUBE_MAP_ARRAY" value="0x9009" version="4.0" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_BINDING_CUBE_MAP_ARRAY" value="0x900A" version="4.0" />
		<enum name="PROXY_TEXTURE_CUBE_MAP_ARRAY" value="0x900B" version="4.0" />
		<enum name="SAMPLER_CUBE_MAP_ARRAY" value="0x900C" version="4.0" />
		<enum name="SAMPLER_CUBE_MAP_ARRAY_SHADOW" value="0x900D" version="4.0" />
		<enum name="INT_SAMPLER_CUBE_MAP_ARRAY" value="0x900E" version="4.0" />
		<enum name="UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY" value="0x900F" version="4.0" />
		<enum name="DRAW_INDIRECT_BUFFER" value="0x8F3F" version="4.0" >
			<ext name="ARB_draw_indirect" />
		</enum>
		<enum name="DRAW_INDIRECT_BUFFER_BINDING" value="0x8F43" version="4.0" >
			<ext name="ARB_draw_indirect" />
		</enum>
		<enum name="GEOMETRY_SHADER_INVOCATIONS" value="0x887F" version="4.0" >
			<ext name="ARB_gpu_shader5" />
		</enum>
		<enum name="MAX_GEOMETRY_SHADER_INVOCATIONS" value="0x8E5A" version="4.0" >
			<ext name="ARB_gpu_shader5" />
		</enum>
		<enum name="MIN_FRAGMENT_INTERPOLATION_OFFSET" value="0x8E5B" version="4.0" >
			<ext name="ARB_gpu_shader5" />
		</enum>
		<enum name="MAX_FRAGMENT_INTERPOLATION_OFFSET" value="0x8E5C" version="4.0" >
			<ext name="ARB_gpu_shader5" />
		</enum>
		<enum name="FRAGMENT_INTERPOLATION_OFFSET_BITS" value="0x8E5D" version="4.0" >
			<ext name="ARB_gpu_shader5" />
		</enum>
		<enum name="MAX_VERTEX_STREAMS" value="0x8E71" version="4.0" >
			<ext name="ARB_gpu_shader5" />
			<ext name="ARB_transform_feedback3" />
		</enum>
		<enum name="DOUBLE_VEC2" value="0x8FFC" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_VEC3" value="0x8FFD" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_VEC4" value="0x8FFE" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT2" value="0x8F46" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT3" value="0x8F47" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT4" value="0x8F48" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT2x3" value="0x8F49" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT2x4" value="0x8F4A" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT3x2" value="0x8F4B" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT3x4" value="0x8F4C" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT4x2" value="0x8F4D" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT4x3" value="0x8F4E" version="4.0" >
			<ext name="ARB_gpu_shader_fp64" />
			<ext name="ARB_vertex_attrib_64bit" />
		</enum>
		<enum name="ACTIVE_SUBROUTINES" value="0x8DE5" version="4.0" >
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="ACTIVE_SUBROUTINE_UNIFORMS" value="0x8DE6" version="4.0" >
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS" value="0x8E47" version="4.0" >
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="ACTIVE_SUBROUTINE_MAX_LENGTH" value="0x8E48" version="4.0" >
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH" value="0x8E49" version="4.0" >
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="MAX_SUBROUTINES" value="0x8DE7" version="4.0" >
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="MAX_SUBROUTINE_UNIFORM_LOCATIONS" value="0x8DE8" version="4.0" >
			<ext name="ARB_shader_subroutine" />
		</enum>
		<enum name="NUM_COMPATIBLE_SUBROUTINES" value="0x8E4A" version="4.0" >
			<ext name="ARB_shader_subroutine" />
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="COMPATIBLE_SUBROUTINES" value="0x8E4B" version="4.0" >
			<ext name="ARB_shader_subroutine" />
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="PATCHES" value="0x000E" version="4.0" >
			<ext name="ARB_tessellation_shader" />
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="PATCH_VERTICES" value="0x8E72" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="PATCH_DEFAULT_INNER_LEVEL" value="0x8E73" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="PATCH_DEFAULT_OUTER_LEVEL" value="0x8E74" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TESS_CONTROL_OUTPUT_VERTICES" value="0x8E75" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TESS_GEN_MODE" value="0x8E76" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TESS_GEN_SPACING" value="0x8E77" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TESS_GEN_VERTEX_ORDER" value="0x8E78" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TESS_GEN_POINT_MODE" value="0x8E79" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="ISOLINES" value="0x8E7A" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="FRACTIONAL_ODD" value="0x8E7B" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="FRACTIONAL_EVEN" value="0x8E7C" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_PATCH_VERTICES" value="0x8E7D" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_GEN_LEVEL" value="0x8E7E" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_CONTROL_UNIFORM_COMPONENTS" value="0x8E7F" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_UNIFORM_COMPONENTS" value="0x8E80" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS" value="0x8E81" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS" value="0x8E82" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_CONTROL_OUTPUT_COMPONENTS" value="0x8E83" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_PATCH_COMPONENTS" value="0x8E84" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS" value="0x8E85" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_OUTPUT_COMPONENTS" value="0x8E86" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_CONTROL_UNIFORM_BLOCKS" value="0x8E89" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_UNIFORM_BLOCKS" value="0x8E8A" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_CONTROL_INPUT_COMPONENTS" value="0x886C" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_INPUT_COMPONENTS" value="0x886D" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS" value="0x8E1E" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS" value="0x8E1F" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER" value="0x84F0" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER" value="0x84F1" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TESS_EVALUATION_SHADER" value="0x8E87" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TESS_CONTROL_SHADER" value="0x8E88" version="4.0" >
			<ext name="ARB_tessellation_shader" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK" value="0x8E22" version="4.0" >
			<ext name="ARB_transform_feedback2" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_PAUSED" ref="TRANSFORM_FEEDBACK_PAUSED" version="4.0" >
			<ext name="ARB_transform_feedback2" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_ACTIVE" ref="TRANSFORM_FEEDBACK_ACTIVE" version="4.0" >
			<ext name="ARB_transform_feedback2" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BINDING" value="0x8E25" version="4.0" >
			<ext name="ARB_transform_feedback2" />
		</enum>
		<enum name="MAX_TRANSFORM_FEEDBACK_BUFFERS" value="0x8E70" version="4.0" >
			<ext name="ARB_transform_feedback3" />
		</enum>
		<enum name="FIXED" value="0x140C" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="IMPLEMENTATION_COLOR_READ_TYPE" value="0x8B9A" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="IMPLEMENTATION_COLOR_READ_FORMAT" value="0x8B9B" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="LOW_FLOAT" value="0x8DF0" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="MEDIUM_FLOAT" value="0x8DF1" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="HIGH_FLOAT" value="0x8DF2" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="LOW_INT" value="0x8DF3" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="MEDIUM_INT" value="0x8DF4" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="HIGH_INT" value="0x8DF5" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="SHADER_COMPILER" value="0x8DFA" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="SHADER_BINARY_FORMATS" value="0x8DF8" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="NUM_SHADER_BINARY_FORMATS" value="0x8DF9" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="MAX_VERTEX_UNIFORM_VECTORS" value="0x8DFB" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="MAX_VARYING_VECTORS" value="0x8DFC" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="MAX_FRAGMENT_UNIFORM_VECTORS" value="0x8DFD" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="RGB565" value="0x8D62" version="4.1" >
			<ext name="ARB_ES2_compatibility" />
		</enum>
		<enum name="PROGRAM_BINARY_RETRIEVABLE_HINT" value="0x8257" version="4.1" >
			<ext name="ARB_get_program_binary" />
		</enum>
		<enum name="PROGRAM_BINARY_LENGTH" value="0x8741" version="4.1" >
			<ext name="ARB_get_program_binary" />
		</enum>
		<enum name="NUM_PROGRAM_BINARY_FORMATS" value="0x87FE" version="4.1" >
			<ext name="ARB_get_program_binary" />
		</enum>
		<enum name="PROGRAM_BINARY_FORMATS" value="0x87FF" version="4.1" >
			<ext name="ARB_get_program_binary" />
		</enum>
		<enum name="VERTEX_SHADER_BIT" value="0x00000001" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="FRAGMENT_SHADER_BIT" value="0x00000002" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="GEOMETRY_SHADER_BIT" value="0x00000004" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="TESS_CONTROL_SHADER_BIT" value="0x00000008" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="TESS_EVALUATION_SHADER_BIT" value="0x00000010" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="ALL_SHADER_BITS" value="0xFFFFFFFF" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="PROGRAM_SEPARABLE" value="0x8258" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="ACTIVE_PROGRAM" value="0x8259" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="PROGRAM_PIPELINE_BINDING" value="0x825A" version="4.1" >
			<ext name="ARB_separate_shader_objects" />
		</enum>
		<enum name="MAX_VIEWPORTS" value="0x825B" version="4.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="VIEWPORT_SUBPIXEL_BITS" value="0x825C" version="4.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="VIEWPORT_BOUNDS_RANGE" value="0x825D" version="4.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="LAYER_PROVOKING_VERTEX" value="0x825E" version="4.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="VIEWPORT_INDEX_PROVOKING_VERTEX" value="0x825F" version="4.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="UNDEFINED_VERTEX" value="0x8260" version="4.1" >
			<ext name="ARB_viewport_array" />
		</enum>
		<enum name="UNPACK_COMPRESSED_BLOCK_WIDTH" value="0x9127" version="4.2" >
			<ext name="ARB_compressed_texture_pixel_storage" />
		</enum>
		<enum name="UNPACK_COMPRESSED_BLOCK_HEIGHT" value="0x9128" version="4.2" >
			<ext name="ARB_compressed_texture_pixel_storage" />
		</enum>
		<enum name="UNPACK_COMPRESSED_BLOCK_DEPTH" value="0x9129" version="4.2" >
			<ext name="ARB_compressed_texture_pixel_storage" />
		</enum>
		<enum name="UNPACK_COMPRESSED_BLOCK_SIZE" value="0x912A" version="4.2" >
			<ext name="ARB_compressed_texture_pixel_storage" />
		</enum>
		<enum name="PACK_COMPRESSED_BLOCK_WIDTH" value="0x912B" version="4.2" >
			<ext name="ARB_compressed_texture_pixel_storage" />
		</enum>
		<enum name="PACK_COMPRESSED_BLOCK_HEIGHT" value="0x912C" version="4.2" >
			<ext name="ARB_compressed_texture_pixel_storage" />
		</enum>
		<enum name="PACK_COMPRESSED_BLOCK_DEPTH" value="0x912D" version="4.2" >
			<ext name="ARB_compressed_texture_pixel_storage" />
		</enum>
		<enum name="PACK_COMPRESSED_BLOCK_SIZE" value="0x912E" version="4.2" >
			<ext name="ARB_compressed_texture_pixel_storage" />
		</enum>
		<enum name="NUM_SAMPLE_COUNTS" value="0x9380" version="4.2" >
			<ext name="ARB_internalformat_query" />
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MIN_MAP_BUFFER_ALIGNMENT" value="0x90BC" version="4.2" >
			<ext name="ARB_map_buffer_alignment" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER" value="0x92C0" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_BINDING" value="0x92C1" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_START" value="0x92C2" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_SIZE" value="0x92C3" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_DATA_SIZE" value="0x92C4" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS" value="0x92C5" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES" value="0x92C6" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER" value="0x92C7" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER" value="0x92C8" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER" value="0x92C9" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER" value="0x92CA" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER" value="0x92CB" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_VERTEX_ATOMIC_COUNTER_BUFFERS" value="0x92CC" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS" value="0x92CD" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS" value="0x92CE" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS" value="0x92CF" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS" value="0x92D0" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_COMBINED_ATOMIC_COUNTER_BUFFERS" value="0x92D1" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_VERTEX_ATOMIC_COUNTERS" value="0x92D2" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_TESS_CONTROL_ATOMIC_COUNTERS" value="0x92D3" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_ATOMIC_COUNTERS" value="0x92D4" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_GEOMETRY_ATOMIC_COUNTERS" value="0x92D5" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_FRAGMENT_ATOMIC_COUNTERS" value="0x92D6" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_COMBINED_ATOMIC_COUNTERS" value="0x92D7" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_ATOMIC_COUNTER_BUFFER_SIZE" value="0x92D8" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="MAX_ATOMIC_COUNTER_BUFFER_BINDINGS" value="0x92DC" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="ACTIVE_ATOMIC_COUNTER_BUFFERS" value="0x92D9" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX" value="0x92DA" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="UNSIGNED_INT_ATOMIC_COUNTER" value="0x92DB" version="4.2" >
			<ext name="ARB_shader_atomic_counters" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_BARRIER_BIT" value="0x00000001" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="ELEMENT_ARRAY_BARRIER_BIT" value="0x00000002" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNIFORM_BARRIER_BIT" value="0x00000004" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="TEXTURE_FETCH_BARRIER_BIT" value="0x00000008" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="SHADER_IMAGE_ACCESS_BARRIER_BIT" value="0x00000020" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="COMMAND_BARRIER_BIT" value="0x00000040" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="PIXEL_BUFFER_BARRIER_BIT" value="0x00000080" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="TEXTURE_UPDATE_BARRIER_BIT" value="0x00000100" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="BUFFER_UPDATE_BARRIER_BIT" value="0x00000200" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="FRAMEBUFFER_BARRIER_BIT" value="0x00000400" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BARRIER_BIT" value="0x00000800" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="ATOMIC_COUNTER_BARRIER_BIT" value="0x00001000" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="ALL_BARRIER_BITS" value="0xFFFFFFFF" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_IMAGE_UNITS" value="0x8F38" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS" value="0x8F39" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="IMAGE_BINDING_NAME" value="0x8F3A" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_LEVEL" value="0x8F3B" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_LAYERED" value="0x8F3C" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_LAYER" value="0x8F3D" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_ACCESS" value="0x8F3E" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_1D" value="0x904C" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D" value="0x904D" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_3D" value="0x904E" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_RECT" value="0x904F" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_CUBE" value="0x9050" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BUFFER" value="0x9051" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_1D_ARRAY" value="0x9052" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_ARRAY" value="0x9053" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_CUBE_MAP_ARRAY" value="0x9054" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_MULTISAMPLE" value="0x9055" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_MULTISAMPLE_ARRAY" value="0x9056" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_1D" value="0x9057" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D" value="0x9058" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_3D" value="0x9059" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_RECT" value="0x905A" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_CUBE" value="0x905B" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_BUFFER" value="0x905C" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_1D_ARRAY" value="0x905D" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_ARRAY" value="0x905E" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_CUBE_MAP_ARRAY" value="0x905F" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_MULTISAMPLE" value="0x9060" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_MULTISAMPLE_ARRAY" value="0x9061" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_1D" value="0x9062" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D" value="0x9063" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_3D" value="0x9064" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_RECT" value="0x9065" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_CUBE" value="0x9066" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_BUFFER" value="0x9067" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_1D_ARRAY" value="0x9068" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_ARRAY" value="0x9069" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY" value="0x906A" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_MULTISAMPLE" value="0x906B" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY" value="0x906C" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_IMAGE_SAMPLES" value="0x906D" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_FORMAT" value="0x906E" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_FORMAT_COMPATIBILITY_TYPE" value="0x90C7" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_FORMAT_COMPATIBILITY_BY_SIZE" value="0x90C8" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_FORMAT_COMPATIBILITY_BY_CLASS" value="0x90C9" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_VERTEX_IMAGE_UNIFORMS" value="0x90CA" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_TESS_CONTROL_IMAGE_UNIFORMS" value="0x90CB" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_IMAGE_UNIFORMS" value="0x90CC" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_GEOMETRY_IMAGE_UNIFORMS" value="0x90CD" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_FRAGMENT_IMAGE_UNIFORMS" value="0x90CE" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="MAX_COMBINED_IMAGE_UNIFORMS" value="0x90CF" version="4.2" >
			<ext name="ARB_shader_image_load_store" />
		</enum>
		<enum name="TEXTURE_IMMUTABLE_FORMAT" value="0x912F" version="4.2" >
			<ext name="ARB_texture_storage" />
		</enum>
		<enum name="NUM_SHADING_LANGUAGE_VERSIONS" value="0x82E9" version="4.3" />
		<enum name="VERTEX_ATTRIB_ARRAY_LONG" value="0x874E" version="4.3" />
		<enum name="COMPRESSED_RGB8_ETC2" value="0x9274" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ETC2" value="0x9275" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2" value="0x9276" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2" value="0x9277" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_RGBA8_ETC2_EAC" value="0x9278" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC" value="0x9279" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_R11_EAC" value="0x9270" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_SIGNED_R11_EAC" value="0x9271" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_RG11_EAC" value="0x9272" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPRESSED_SIGNED_RG11_EAC" value="0x9273" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="PRIMITIVE_RESTART_FIXED_INDEX" value="0x8D69" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="ANY_SAMPLES_PASSED_CONSERVATIVE" value="0x8D6A" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="MAX_ELEMENT_INDEX" value="0x8D6B" version="4.3" >
			<ext name="ARB_ES3_compatibility" />
		</enum>
		<enum name="COMPUTE_SHADER" value="0x91B9" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_UNIFORM_BLOCKS" value="0x91BB" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_TEXTURE_IMAGE_UNITS" value="0x91BC" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_IMAGE_UNIFORMS" value="0x91BD" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_SHARED_MEMORY_SIZE" value="0x8262" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_UNIFORM_COMPONENTS" value="0x8263" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS" value="0x8264" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_ATOMIC_COUNTERS" value="0x8265" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS" value="0x8266" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_LOCAL_INVOCATIONS" value="0x90EB" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_WORK_GROUP_COUNT" value="0x91BE" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="MAX_COMPUTE_WORK_GROUP_SIZE" value="0x91BF" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="COMPUTE_LOCAL_WORK_SIZE" value="0x8267" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER" value="0x90EC" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER" value="0x90ED" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="DISPATCH_INDIRECT_BUFFER" value="0x90EE" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="DISPATCH_INDIRECT_BUFFER_BINDING" value="0x90EF" version="4.3" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="DEBUG_OUTPUT_SYNCHRONOUS" value="0x8242" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_NEXT_LOGGED_MESSAGE_LENGTH" value="0x8243" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_CALLBACK_FUNCTION" value="0x8244" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_CALLBACK_USER_PARAM" value="0x8245" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SOURCE_API" value="0x8246" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SOURCE_WINDOW_SYSTEM" value="0x8247" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SOURCE_SHADER_COMPILER" value="0x8248" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SOURCE_THIRD_PARTY" value="0x8249" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SOURCE_APPLICATION" value="0x824A" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SOURCE_OTHER" value="0x824B" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_ERROR" value="0x824C" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_DEPRECATED_BEHAVIOR" value="0x824D" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_UNDEFINED_BEHAVIOR" value="0x824E" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_PORTABILITY" value="0x824F" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_PERFORMANCE" value="0x8250" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_OTHER" value="0x8251" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="MAX_DEBUG_MESSAGE_LENGTH" value="0x9143" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="MAX_DEBUG_LOGGED_MESSAGES" value="0x9144" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_LOGGED_MESSAGES" value="0x9145" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SEVERITY_HIGH" value="0x9146" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SEVERITY_MEDIUM" value="0x9147" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SEVERITY_LOW" value="0x9148" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_MARKER" value="0x8268" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_PUSH_GROUP" value="0x8269" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_TYPE_POP_GROUP" value="0x826A" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_SEVERITY_NOTIFICATION" value="0x826B" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="MAX_DEBUG_GROUP_STACK_DEPTH" value="0x826C" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_GROUP_STACK_DEPTH" value="0x826D" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="BUFFER" value="0x82E0" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="SHADER" value="0x82E1" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="PROGRAM" value="0x82E2" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="QUERY" value="0x82E3" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="PROGRAM_PIPELINE" value="0x82E4" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="SAMPLER" value="0x82E6" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DISPLAY_LIST" value="0x82E7" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="MAX_LABEL_LENGTH" value="0x82E8" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="DEBUG_OUTPUT" value="0x92E0" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="CONTEXT_FLAG_DEBUG_BIT" value="0x00000002" version="4.3" >
			<ext name="KHR_debug" />
		</enum>
		<enum name="MAX_UNIFORM_LOCATIONS" value="0x826E" version="4.3" >
			<ext name="ARB_explicit_uniform_location" />
		</enum>
		<enum name="FRAMEBUFFER_DEFAULT_WIDTH" value="0x9310" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="FRAMEBUFFER_DEFAULT_HEIGHT" value="0x9311" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="FRAMEBUFFER_DEFAULT_LAYERS" value="0x9312" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="FRAMEBUFFER_DEFAULT_SAMPLES" value="0x9313" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS" value="0x9314" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="MAX_FRAMEBUFFER_WIDTH" value="0x9315" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="MAX_FRAMEBUFFER_HEIGHT" value="0x9316" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="MAX_FRAMEBUFFER_LAYERS" value="0x9317" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="MAX_FRAMEBUFFER_SAMPLES" value="0x9318" version="4.3" >
			<ext name="ARB_framebuffer_no_attachments" />
		</enum>
		<enum name="INTERNALFORMAT_SUPPORTED" value="0x826F" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_PREFERRED" value="0x8270" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_RED_SIZE" value="0x8271" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_GREEN_SIZE" value="0x8272" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_BLUE_SIZE" value="0x8273" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_ALPHA_SIZE" value="0x8274" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_DEPTH_SIZE" value="0x8275" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_STENCIL_SIZE" value="0x8276" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_SHARED_SIZE" value="0x8277" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_RED_TYPE" value="0x8278" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_GREEN_TYPE" value="0x8279" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_BLUE_TYPE" value="0x827A" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_ALPHA_TYPE" value="0x827B" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_DEPTH_TYPE" value="0x827C" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="INTERNALFORMAT_STENCIL_TYPE" value="0x827D" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MAX_WIDTH" value="0x827E" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MAX_HEIGHT" value="0x827F" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MAX_DEPTH" value="0x8280" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MAX_LAYERS" value="0x8281" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MAX_COMBINED_DIMENSIONS" value="0x8282" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="COLOR_COMPONENTS" value="0x8283" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="DEPTH_COMPONENTS" value="0x8284" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="STENCIL_COMPONENTS" value="0x8285" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="COLOR_RENDERABLE" value="0x8286" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="DEPTH_RENDERABLE" value="0x8287" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="STENCIL_RENDERABLE" value="0x8288" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="FRAMEBUFFER_RENDERABLE" value="0x8289" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="FRAMEBUFFER_RENDERABLE_LAYERED" value="0x828A" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="FRAMEBUFFER_BLEND" value="0x828B" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="READ_PIXELS" value="0x828C" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="READ_PIXELS_FORMAT" value="0x828D" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="READ_PIXELS_TYPE" value="0x828E" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_IMAGE_FORMAT" value="0x828F" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_IMAGE_TYPE" value="0x8290" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="GET_TEXTURE_IMAGE_FORMAT" value="0x8291" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="GET_TEXTURE_IMAGE_TYPE" value="0x8292" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MIPMAP" value="0x8293" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="MANUAL_GENERATE_MIPMAP" value="0x8294" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="AUTO_GENERATE_MIPMAP" value="0x8295" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="COLOR_ENCODING" value="0x8296" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SRGB_READ" value="0x8297" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SRGB_WRITE" value="0x8298" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="FILTER" value="0x829A" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VERTEX_TEXTURE" value="0x829B" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TESS_CONTROL_TEXTURE" value="0x829C" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TESS_EVALUATION_TEXTURE" value="0x829D" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="GEOMETRY_TEXTURE" value="0x829E" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="FRAGMENT_TEXTURE" value="0x829F" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="COMPUTE_TEXTURE" value="0x82A0" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_SHADOW" value="0x82A1" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_GATHER" value="0x82A2" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_GATHER_SHADOW" value="0x82A3" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SHADER_IMAGE_LOAD" value="0x82A4" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SHADER_IMAGE_STORE" value="0x82A5" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SHADER_IMAGE_ATOMIC" value="0x82A6" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_TEXEL_SIZE" value="0x82A7" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_COMPATIBILITY_CLASS" value="0x82A8" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_PIXEL_FORMAT" value="0x82A9" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_PIXEL_TYPE" value="0x82AA" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST" value="0x82AC" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST" value="0x82AD" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE" value="0x82AE" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE" value="0x82AF" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_COMPRESSED_BLOCK_WIDTH" value="0x82B1" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_COMPRESSED_BLOCK_HEIGHT" value="0x82B2" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_COMPRESSED_BLOCK_SIZE" value="0x82B3" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="CLEAR_BUFFER" value="0x82B4" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="TEXTURE_VIEW" value="0x82B5" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_COMPATIBILITY_CLASS" value="0x82B6" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="FULL_SUPPORT" value="0x82B7" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="CAVEAT_SUPPORT" value="0x82B8" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_4_X_32" value="0x82B9" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_2_X_32" value="0x82BA" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_1_X_32" value="0x82BB" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_4_X_16" value="0x82BC" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_2_X_16" value="0x82BD" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_1_X_16" value="0x82BE" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_4_X_8" value="0x82BF" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_2_X_8" value="0x82C0" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_1_X_8" value="0x82C1" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_11_11_10" value="0x82C2" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="IMAGE_CLASS_10_10_10_2" value="0x82C3" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_128_BITS" value="0x82C4" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_96_BITS" value="0x82C5" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_64_BITS" value="0x82C6" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_48_BITS" value="0x82C7" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_32_BITS" value="0x82C8" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_24_BITS" value="0x82C9" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_16_BITS" value="0x82CA" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_8_BITS" value="0x82CB" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_S3TC_DXT1_RGB" value="0x82CC" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_S3TC_DXT1_RGBA" value="0x82CD" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_S3TC_DXT3_RGBA" value="0x82CE" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_S3TC_DXT5_RGBA" value="0x82CF" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_RGTC1_RED" value="0x82D0" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_RGTC2_RG" value="0x82D1" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_BPTC_UNORM" value="0x82D2" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="VIEW_CLASS_BPTC_FLOAT" value="0x82D3" version="4.3" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="UNIFORM" value="0x92E1" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="UNIFORM_BLOCK" value="0x92E2" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="PROGRAM_INPUT" value="0x92E3" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="PROGRAM_OUTPUT" value="0x92E4" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="BUFFER_VARIABLE" value="0x92E5" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="SHADER_STORAGE_BLOCK" value="0x92E6" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="VERTEX_SUBROUTINE" value="0x92E8" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="TESS_CONTROL_SUBROUTINE" value="0x92E9" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="TESS_EVALUATION_SUBROUTINE" value="0x92EA" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="GEOMETRY_SUBROUTINE" value="0x92EB" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="FRAGMENT_SUBROUTINE" value="0x92EC" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="COMPUTE_SUBROUTINE" value="0x92ED" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="VERTEX_SUBROUTINE_UNIFORM" value="0x92EE" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="TESS_CONTROL_SUBROUTINE_UNIFORM" value="0x92EF" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="TESS_EVALUATION_SUBROUTINE_UNIFORM" value="0x92F0" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="GEOMETRY_SUBROUTINE_UNIFORM" value="0x92F1" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="FRAGMENT_SUBROUTINE_UNIFORM" value="0x92F2" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="COMPUTE_SUBROUTINE_UNIFORM" value="0x92F3" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_VARYING" value="0x92F4" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="ACTIVE_RESOURCES" value="0x92F5" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="MAX_NAME_LENGTH" value="0x92F6" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="MAX_NUM_ACTIVE_VARIABLES" value="0x92F7" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="MAX_NUM_COMPATIBLE_SUBROUTINES" value="0x92F8" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="NAME_LENGTH" value="0x92F9" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="TYPE" value="0x92FA" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="ARRAY_SIZE" value="0x92FB" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="OFFSET" value="0x92FC" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="BLOCK_INDEX" value="0x92FD" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="ARRAY_STRIDE" value="0x92FE" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="MATRIX_STRIDE" value="0x92FF" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="IS_ROW_MAJOR" value="0x9300" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="ATOMIC_COUNTER_BUFFER_INDEX" value="0x9301" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="BUFFER_BINDING" value="0x9302" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="BUFFER_DATA_SIZE" value="0x9303" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="NUM_ACTIVE_VARIABLES" value="0x9304" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="ACTIVE_VARIABLES" value="0x9305" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="REFERENCED_BY_VERTEX_SHADER" value="0x9306" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="REFERENCED_BY_TESS_CONTROL_SHADER" value="0x9307" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="REFERENCED_BY_TESS_EVALUATION_SHADER" value="0x9308" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="REFERENCED_BY_GEOMETRY_SHADER" value="0x9309" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="REFERENCED_BY_FRAGMENT_SHADER" value="0x930A" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="REFERENCED_BY_COMPUTE_SHADER" value="0x930B" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="TOP_LEVEL_ARRAY_SIZE" value="0x930C" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="TOP_LEVEL_ARRAY_STRIDE" value="0x930D" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="LOCATION" value="0x930E" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="LOCATION_INDEX" value="0x930F" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="IS_PER_PATCH" value="0x92E7" version="4.3" >
			<ext name="ARB_program_interface_query" />
		</enum>
		<enum name="SHADER_STORAGE_BUFFER" value="0x90D2" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="SHADER_STORAGE_BUFFER_BINDING" value="0x90D3" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="SHADER_STORAGE_BUFFER_START" value="0x90D4" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="SHADER_STORAGE_BUFFER_SIZE" value="0x90D5" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_VERTEX_SHADER_STORAGE_BLOCKS" value="0x90D6" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_GEOMETRY_SHADER_STORAGE_BLOCKS" value="0x90D7" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS" value="0x90D8" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS" value="0x90D9" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_FRAGMENT_SHADER_STORAGE_BLOCKS" value="0x90DA" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_COMPUTE_SHADER_STORAGE_BLOCKS" value="0x90DB" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_COMBINED_SHADER_STORAGE_BLOCKS" value="0x90DC" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_SHADER_STORAGE_BUFFER_BINDINGS" value="0x90DD" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_SHADER_STORAGE_BLOCK_SIZE" value="0x90DE" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT" value="0x90DF" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="SHADER_STORAGE_BARRIER_BIT" value="0x2000" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="MAX_COMBINED_SHADER_OUTPUT_RESOURCES" ref="MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS" version="4.3" >
			<ext name="ARB_shader_storage_buffer_object" />
		</enum>
		<enum name="DEPTH_STENCIL_TEXTURE_MODE" value="0x90EA" version="4.3" >
			<ext name="ARB_stencil_texturing" />
		</enum>
		<enum name="TEXTURE_BUFFER_OFFSET" value="0x919D" version="4.3" >
			<ext name="ARB_texture_buffer_range" />
		</enum>
		<enum name="TEXTURE_BUFFER_SIZE" value="0x919E" version="4.3" >
			<ext name="ARB_texture_buffer_range" />
		</enum>
		<enum name="TEXTURE_BUFFER_OFFSET_ALIGNMENT" value="0x919F" version="4.3" >
			<ext name="ARB_texture_buffer_range" />
		</enum>
		<enum name="TEXTURE_VIEW_MIN_LEVEL" value="0x82DB" version="4.3" >
			<ext name="ARB_texture_view" />
		</enum>
		<enum name="TEXTURE_VIEW_NUM_LEVELS" value="0x82DC" version="4.3" >
			<ext name="ARB_texture_view" />
		</enum>
		<enum name="TEXTURE_VIEW_MIN_LAYER" value="0x82DD" version="4.3" >
			<ext name="ARB_texture_view" />
		</enum>
		<enum name="TEXTURE_VIEW_NUM_LAYERS" value="0x82DE" version="4.3" >
			<ext name="ARB_texture_view" />
		</enum>
		<enum name="TEXTURE_IMMUTABLE_LEVELS" value="0x82DF" version="4.3" >
			<ext name="ARB_texture_view" />
		</enum>
		<enum name="VERTEX_ATTRIB_BINDING" value="0x82D4" version="4.3" >
			<ext name="ARB_vertex_attrib_binding" />
		</enum>
		<enum name="VERTEX_ATTRIB_RELATIVE_OFFSET" value="0x82D5" version="4.3" >
			<ext name="ARB_vertex_attrib_binding" />
		</enum>
		<enum name="VERTEX_BINDING_DIVISOR" value="0x82D6" version="4.3" >
			<ext name="ARB_vertex_attrib_binding" />
		</enum>
		<enum name="VERTEX_BINDING_OFFSET" value="0x82D7" version="4.3" >
			<ext name="ARB_vertex_attrib_binding" />
		</enum>
		<enum name="VERTEX_BINDING_STRIDE" value="0x82D8" version="4.3" >
			<ext name="ARB_vertex_attrib_binding" />
		</enum>
		<enum name="MAX_VERTEX_ATTRIB_RELATIVE_OFFSET" value="0x82D9" version="4.3" >
			<ext name="ARB_vertex_attrib_binding" />
		</enum>
		<enum name="MAX_VERTEX_ATTRIB_BINDINGS" value="0x82DA" version="4.3" >
			<ext name="ARB_vertex_attrib_binding" />
		</enum>
		<enum name="TEXTURE0_ARB" value="0x84C0" >
			<ext name="ARB_multitexture" />
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="TEXTURE1_ARB" value="0x84C1" >
			<ext name="ARB_multitexture" />
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="TEXTURE2_ARB" value="0x84C2" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE3_ARB" value="0x84C3" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE4_ARB" value="0x84C4" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE5_ARB" value="0x84C5" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE6_ARB" value="0x84C6" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE7_ARB" value="0x84C7" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE8_ARB" value="0x84C8" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE9_ARB" value="0x84C9" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE10_ARB" value="0x84CA" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE11_ARB" value="0x84CB" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE12_ARB" value="0x84CC" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE13_ARB" value="0x84CD" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE14_ARB" value="0x84CE" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE15_ARB" value="0x84CF" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE16_ARB" value="0x84D0" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE17_ARB" value="0x84D1" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE18_ARB" value="0x84D2" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE19_ARB" value="0x84D3" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE20_ARB" value="0x84D4" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE21_ARB" value="0x84D5" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE22_ARB" value="0x84D6" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE23_ARB" value="0x84D7" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE24_ARB" value="0x84D8" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE25_ARB" value="0x84D9" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE26_ARB" value="0x84DA" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE27_ARB" value="0x84DB" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE28_ARB" value="0x84DC" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE29_ARB" value="0x84DD" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE30_ARB" value="0x84DE" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TEXTURE31_ARB" value="0x84DF" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="ACTIVE_TEXTURE_ARB" value="0x84E0" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="CLIENT_ACTIVE_TEXTURE_ARB" value="0x84E1" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="MAX_TEXTURE_UNITS_ARB" value="0x84E2" >
			<ext name="ARB_multitexture" />
		</enum>
		<enum name="TRANSPOSE_MODELVIEW_MATRIX_ARB" value="0x84E3" >
			<ext name="ARB_transpose_matrix" />
		</enum>
		<enum name="TRANSPOSE_PROJECTION_MATRIX_ARB" value="0x84E4" >
			<ext name="ARB_transpose_matrix" />
		</enum>
		<enum name="TRANSPOSE_TEXTURE_MATRIX_ARB" value="0x84E5" >
			<ext name="ARB_transpose_matrix" />
		</enum>
		<enum name="TRANSPOSE_COLOR_MATRIX_ARB" value="0x84E6" >
			<ext name="ARB_transpose_matrix" />
		</enum>
		<enum name="MULTISAMPLE_ARB" value="0x809D" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="SAMPLE_ALPHA_TO_COVERAGE_ARB" value="0x809E" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="SAMPLE_ALPHA_TO_ONE_ARB" value="0x809F" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="SAMPLE_COVERAGE_ARB" value="0x80A0" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="SAMPLE_BUFFERS_ARB" value="0x80A8" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="SAMPLES_ARB" value="0x80A9" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="SAMPLE_COVERAGE_VALUE_ARB" value="0x80AA" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="SAMPLE_COVERAGE_INVERT_ARB" value="0x80AB" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="MULTISAMPLE_BIT_ARB" value="0x20000000" >
			<ext name="ARB_multisample" />
		</enum>
		<enum name="NORMAL_MAP_ARB" value="0x8511" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="REFLECTION_MAP_ARB" value="0x8512" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_ARB" value="0x8513" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_BINDING_CUBE_MAP_ARB" value="0x8514" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_X_ARB" value="0x8515" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_X_ARB" value="0x8516" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_Y_ARB" value="0x8517" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB" value="0x8518" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_Z_ARB" value="0x8519" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB" value="0x851A" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="PROXY_TEXTURE_CUBE_MAP_ARB" value="0x851B" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="MAX_CUBE_MAP_TEXTURE_SIZE_ARB" value="0x851C" >
			<ext name="ARB_texture_cube_map" />
		</enum>
		<enum name="COMPRESSED_ALPHA_ARB" value="0x84E9" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="COMPRESSED_LUMINANCE_ARB" value="0x84EA" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="COMPRESSED_LUMINANCE_ALPHA_ARB" value="0x84EB" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="COMPRESSED_INTENSITY_ARB" value="0x84EC" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="COMPRESSED_RGB_ARB" value="0x84ED" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="COMPRESSED_RGBA_ARB" value="0x84EE" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="TEXTURE_COMPRESSION_HINT_ARB" value="0x84EF" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="TEXTURE_COMPRESSED_IMAGE_SIZE_ARB" value="0x86A0" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="TEXTURE_COMPRESSED_ARB" value="0x86A1" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="NUM_COMPRESSED_TEXTURE_FORMATS_ARB" value="0x86A2" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="COMPRESSED_TEXTURE_FORMATS_ARB" value="0x86A3" >
			<ext name="ARB_texture_compression" />
		</enum>
		<enum name="CLAMP_TO_BORDER_ARB" value="0x812D" >
			<ext name="ARB_texture_border_clamp" />
		</enum>
		<enum name="POINT_SIZE_MIN_ARB" value="0x8126" >
			<ext name="ARB_point_parameters" />
		</enum>
		<enum name="POINT_SIZE_MAX_ARB" value="0x8127" >
			<ext name="ARB_point_parameters" />
		</enum>
		<enum name="POINT_FADE_THRESHOLD_SIZE_ARB" value="0x8128" >
			<ext name="ARB_point_parameters" />
		</enum>
		<enum name="POINT_DISTANCE_ATTENUATION_ARB" value="0x8129" >
			<ext name="ARB_point_parameters" />
		</enum>
		<enum name="MAX_VERTEX_UNITS_ARB" value="0x86A4" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="ACTIVE_VERTEX_UNITS_ARB" value="0x86A5" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="WEIGHT_SUM_UNITY_ARB" value="0x86A6" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="VERTEX_BLEND_ARB" value="0x86A7" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="CURRENT_WEIGHT_ARB" value="0x86A8" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="WEIGHT_ARRAY_TYPE_ARB" value="0x86A9" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="WEIGHT_ARRAY_STRIDE_ARB" value="0x86AA" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="WEIGHT_ARRAY_SIZE_ARB" value="0x86AB" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="WEIGHT_ARRAY_POINTER_ARB" value="0x86AC" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="WEIGHT_ARRAY_ARB" value="0x86AD" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW0_ARB" value="0x1700" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW1_ARB" value="0x850A" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW2_ARB" value="0x8722" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW3_ARB" value="0x8723" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW4_ARB" value="0x8724" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW5_ARB" value="0x8725" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW6_ARB" value="0x8726" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW7_ARB" value="0x8727" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW8_ARB" value="0x8728" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW9_ARB" value="0x8729" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW10_ARB" value="0x872A" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW11_ARB" value="0x872B" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW12_ARB" value="0x872C" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW13_ARB" value="0x872D" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW14_ARB" value="0x872E" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW15_ARB" value="0x872F" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW16_ARB" value="0x8730" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW17_ARB" value="0x8731" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW18_ARB" value="0x8732" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW19_ARB" value="0x8733" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW20_ARB" value="0x8734" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW21_ARB" value="0x8735" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW22_ARB" value="0x8736" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW23_ARB" value="0x8737" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW24_ARB" value="0x8738" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW25_ARB" value="0x8739" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW26_ARB" value="0x873A" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW27_ARB" value="0x873B" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW28_ARB" value="0x873C" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW29_ARB" value="0x873D" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW30_ARB" value="0x873E" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MODELVIEW31_ARB" value="0x873F" >
			<ext name="ARB_vertex_blend" />
		</enum>
		<enum name="MATRIX_PALETTE_ARB" value="0x8840" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="MAX_MATRIX_PALETTE_STACK_DEPTH_ARB" value="0x8841" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="MAX_PALETTE_MATRICES_ARB" value="0x8842" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="CURRENT_PALETTE_MATRIX_ARB" value="0x8843" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="MATRIX_INDEX_ARRAY_ARB" value="0x8844" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="CURRENT_MATRIX_INDEX_ARB" value="0x8845" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="MATRIX_INDEX_ARRAY_SIZE_ARB" value="0x8846" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="MATRIX_INDEX_ARRAY_TYPE_ARB" value="0x8847" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="MATRIX_INDEX_ARRAY_STRIDE_ARB" value="0x8848" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="MATRIX_INDEX_ARRAY_POINTER_ARB" value="0x8849" >
			<ext name="ARB_matrix_palette" />
		</enum>
		<enum name="COMBINE_ARB" value="0x8570" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="COMBINE_RGB_ARB" value="0x8571" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="COMBINE_ALPHA_ARB" value="0x8572" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="SOURCE0_RGB_ARB" value="0x8580" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="SOURCE1_RGB_ARB" value="0x8581" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="SOURCE2_RGB_ARB" value="0x8582" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="SOURCE0_ALPHA_ARB" value="0x8588" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="SOURCE1_ALPHA_ARB" value="0x8589" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="SOURCE2_ALPHA_ARB" value="0x858A" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="OPERAND0_RGB_ARB" value="0x8590" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="OPERAND1_RGB_ARB" value="0x8591" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="OPERAND2_RGB_ARB" value="0x8592" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="OPERAND0_ALPHA_ARB" value="0x8598" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="OPERAND1_ALPHA_ARB" value="0x8599" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="OPERAND2_ALPHA_ARB" value="0x859A" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="RGB_SCALE_ARB" value="0x8573" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="ADD_SIGNED_ARB" value="0x8574" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="INTERPOLATE_ARB" value="0x8575" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="SUBTRACT_ARB" value="0x84E7" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="CONSTANT_ARB" value="0x8576" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="PRIMARY_COLOR_ARB" value="0x8577" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="PREVIOUS_ARB" value="0x8578" >
			<ext name="ARB_texture_env_combine" />
		</enum>
		<enum name="DOT3_RGB_ARB" value="0x86AE" >
			<ext name="ARB_texture_env_dot3" />
		</enum>
		<enum name="DOT3_RGBA_ARB" value="0x86AF" >
			<ext name="ARB_texture_env_dot3" />
		</enum>
		<enum name="MIRRORED_REPEAT_ARB" value="0x8370" >
			<ext name="ARB_texture_mirrored_repeat" />
		</enum>
		<enum name="DEPTH_COMPONENT16_ARB" value="0x81A5" >
			<ext name="ARB_depth_texture" />
		</enum>
		<enum name="DEPTH_COMPONENT24_ARB" value="0x81A6" >
			<ext name="ARB_depth_texture" />
		</enum>
		<enum name="DEPTH_COMPONENT32_ARB" value="0x81A7" >
			<ext name="ARB_depth_texture" />
		</enum>
		<enum name="TEXTURE_DEPTH_SIZE_ARB" value="0x884A" >
			<ext name="ARB_depth_texture" />
		</enum>
		<enum name="DEPTH_TEXTURE_MODE_ARB" value="0x884B" >
			<ext name="ARB_depth_texture" />
		</enum>
		<enum name="TEXTURE_COMPARE_MODE_ARB" value="0x884C" >
			<ext name="ARB_shadow" />
		</enum>
		<enum name="TEXTURE_COMPARE_FUNC_ARB" value="0x884D" >
			<ext name="ARB_shadow" />
		</enum>
		<enum name="COMPARE_R_TO_TEXTURE_ARB" value="0x884E" >
			<ext name="ARB_shadow" />
		</enum>
		<enum name="TEXTURE_COMPARE_FAIL_VALUE_ARB" value="0x80BF" >
			<ext name="ARB_shadow_ambient" />
		</enum>
		<enum name="COLOR_SUM_ARB" value="0x8458" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_PROGRAM_ARB" value="0x8620" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_ENABLED_ARB" value="0x8622" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_SIZE_ARB" value="0x8623" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_STRIDE_ARB" value="0x8624" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_TYPE_ARB" value="0x8625" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="CURRENT_VERTEX_ATTRIB_ARB" value="0x8626" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_LENGTH_ARB" value="0x8627" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_STRING_ARB" value="0x8628" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB" value="0x862E" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_MATRICES_ARB" value="0x862F" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="CURRENT_MATRIX_STACK_DEPTH_ARB" value="0x8640" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="CURRENT_MATRIX_ARB" value="0x8641" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_PROGRAM_POINT_SIZE_ARB" value="0x8642" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_PROGRAM_TWO_SIDE_ARB" value="0x8643" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_POINTER_ARB" value="0x8645" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_ERROR_POSITION_ARB" value="0x864B" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_BINDING_ARB" value="0x8677" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_VERTEX_ATTRIBS_ARB" value="0x8869" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB" value="0x886A" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_ERROR_STRING_ARB" value="0x8874" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_FORMAT_ASCII_ARB" value="0x8875" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_FORMAT_ARB" value="0x8876" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_INSTRUCTIONS_ARB" value="0x88A0" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_INSTRUCTIONS_ARB" value="0x88A1" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_NATIVE_INSTRUCTIONS_ARB" value="0x88A2" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB" value="0x88A3" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_TEMPORARIES_ARB" value="0x88A4" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_TEMPORARIES_ARB" value="0x88A5" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_NATIVE_TEMPORARIES_ARB" value="0x88A6" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_NATIVE_TEMPORARIES_ARB" value="0x88A7" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_PARAMETERS_ARB" value="0x88A8" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_PARAMETERS_ARB" value="0x88A9" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_NATIVE_PARAMETERS_ARB" value="0x88AA" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_NATIVE_PARAMETERS_ARB" value="0x88AB" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_ATTRIBS_ARB" value="0x88AC" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_ATTRIBS_ARB" value="0x88AD" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_NATIVE_ATTRIBS_ARB" value="0x88AE" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_NATIVE_ATTRIBS_ARB" value="0x88AF" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_ADDRESS_REGISTERS_ARB" value="0x88B0" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_ADDRESS_REGISTERS_ARB" value="0x88B1" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB" value="0x88B2" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB" value="0x88B3" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_LOCAL_PARAMETERS_ARB" value="0x88B4" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MAX_PROGRAM_ENV_PARAMETERS_ARB" value="0x88B5" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="PROGRAM_UNDER_NATIVE_LIMITS_ARB" value="0x88B6" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="TRANSPOSE_CURRENT_MATRIX_ARB" value="0x88B7" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX0_ARB" value="0x88C0" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX1_ARB" value="0x88C1" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX2_ARB" value="0x88C2" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX3_ARB" value="0x88C3" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX4_ARB" value="0x88C4" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX5_ARB" value="0x88C5" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX6_ARB" value="0x88C6" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX7_ARB" value="0x88C7" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX8_ARB" value="0x88C8" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX9_ARB" value="0x88C9" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX10_ARB" value="0x88CA" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX11_ARB" value="0x88CB" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX12_ARB" value="0x88CC" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX13_ARB" value="0x88CD" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX14_ARB" value="0x88CE" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX15_ARB" value="0x88CF" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX16_ARB" value="0x88D0" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX17_ARB" value="0x88D1" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX18_ARB" value="0x88D2" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX19_ARB" value="0x88D3" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX20_ARB" value="0x88D4" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX21_ARB" value="0x88D5" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX22_ARB" value="0x88D6" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX23_ARB" value="0x88D7" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX24_ARB" value="0x88D8" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX25_ARB" value="0x88D9" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX26_ARB" value="0x88DA" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX27_ARB" value="0x88DB" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX28_ARB" value="0x88DC" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX29_ARB" value="0x88DD" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX30_ARB" value="0x88DE" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="MATRIX31_ARB" value="0x88DF" >
			<ext name="ARB_vertex_program" />
		</enum>
		<enum name="FRAGMENT_PROGRAM_ARB" value="0x8804" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="PROGRAM_ALU_INSTRUCTIONS_ARB" value="0x8805" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="PROGRAM_TEX_INSTRUCTIONS_ARB" value="0x8806" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="PROGRAM_TEX_INDIRECTIONS_ARB" value="0x8807" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB" value="0x8808" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB" value="0x8809" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB" value="0x880A" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="MAX_PROGRAM_ALU_INSTRUCTIONS_ARB" value="0x880B" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="MAX_PROGRAM_TEX_INSTRUCTIONS_ARB" value="0x880C" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="MAX_PROGRAM_TEX_INDIRECTIONS_ARB" value="0x880D" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB" value="0x880E" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB" value="0x880F" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB" value="0x8810" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="MAX_TEXTURE_COORDS_ARB" value="0x8871" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="MAX_TEXTURE_IMAGE_UNITS_ARB" value="0x8872" >
			<ext name="ARB_fragment_program" />
		</enum>
		<enum name="BUFFER_SIZE_ARB" value="0x8764" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="BUFFER_USAGE_ARB" value="0x8765" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="ARRAY_BUFFER_ARB" value="0x8892" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="ELEMENT_ARRAY_BUFFER_ARB" value="0x8893" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="ARRAY_BUFFER_BINDING_ARB" value="0x8894" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="ELEMENT_ARRAY_BUFFER_BINDING_ARB" value="0x8895" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="VERTEX_ARRAY_BUFFER_BINDING_ARB" value="0x8896" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="NORMAL_ARRAY_BUFFER_BINDING_ARB" value="0x8897" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="COLOR_ARRAY_BUFFER_BINDING_ARB" value="0x8898" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="INDEX_ARRAY_BUFFER_BINDING_ARB" value="0x8899" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB" value="0x889A" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB" value="0x889B" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB" value="0x889C" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB" value="0x889D" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="WEIGHT_ARRAY_BUFFER_BINDING_ARB" value="0x889E" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB" value="0x889F" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="READ_ONLY_ARB" value="0x88B8" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="WRITE_ONLY_ARB" value="0x88B9" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="READ_WRITE_ARB" value="0x88BA" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="BUFFER_ACCESS_ARB" value="0x88BB" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="BUFFER_MAPPED_ARB" value="0x88BC" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="BUFFER_MAP_POINTER_ARB" value="0x88BD" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="STREAM_DRAW_ARB" value="0x88E0" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="STREAM_READ_ARB" value="0x88E1" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="STREAM_COPY_ARB" value="0x88E2" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="STATIC_DRAW_ARB" value="0x88E4" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="STATIC_READ_ARB" value="0x88E5" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="STATIC_COPY_ARB" value="0x88E6" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="DYNAMIC_DRAW_ARB" value="0x88E8" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="DYNAMIC_READ_ARB" value="0x88E9" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="DYNAMIC_COPY_ARB" value="0x88EA" >
			<ext name="ARB_vertex_buffer_object" />
		</enum>
		<enum name="QUERY_COUNTER_BITS_ARB" value="0x8864" >
			<ext name="ARB_occlusion_query" />
		</enum>
		<enum name="CURRENT_QUERY_ARB" value="0x8865" >
			<ext name="ARB_occlusion_query" />
		</enum>
		<enum name="QUERY_RESULT_ARB" value="0x8866" >
			<ext name="ARB_occlusion_query" />
		</enum>
		<enum name="QUERY_RESULT_AVAILABLE_ARB" value="0x8867" >
			<ext name="ARB_occlusion_query" />
		</enum>
		<enum name="SAMPLES_PASSED_ARB" value="0x8914" >
			<ext name="ARB_occlusion_query" />
		</enum>
		<enum name="PROGRAM_OBJECT_ARB" value="0x8B40" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SHADER_OBJECT_ARB" value="0x8B48" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_TYPE_ARB" value="0x8B4E" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_SUBTYPE_ARB" value="0x8B4F" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="FLOAT_VEC2_ARB" value="0x8B50" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="FLOAT_VEC3_ARB" value="0x8B51" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="FLOAT_VEC4_ARB" value="0x8B52" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="INT_VEC2_ARB" value="0x8B53" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="INT_VEC3_ARB" value="0x8B54" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="INT_VEC4_ARB" value="0x8B55" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="BOOL_ARB" value="0x8B56" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="BOOL_VEC2_ARB" value="0x8B57" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="BOOL_VEC3_ARB" value="0x8B58" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="BOOL_VEC4_ARB" value="0x8B59" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="FLOAT_MAT2_ARB" value="0x8B5A" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="FLOAT_MAT3_ARB" value="0x8B5B" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="FLOAT_MAT4_ARB" value="0x8B5C" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SAMPLER_1D_ARB" value="0x8B5D" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SAMPLER_2D_ARB" value="0x8B5E" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SAMPLER_3D_ARB" value="0x8B5F" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SAMPLER_CUBE_ARB" value="0x8B60" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SAMPLER_1D_SHADOW_ARB" value="0x8B61" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SAMPLER_2D_SHADOW_ARB" value="0x8B62" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SAMPLER_2D_RECT_ARB" value="0x8B63" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="SAMPLER_2D_RECT_SHADOW_ARB" value="0x8B64" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_DELETE_STATUS_ARB" value="0x8B80" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_COMPILE_STATUS_ARB" value="0x8B81" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_LINK_STATUS_ARB" value="0x8B82" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_VALIDATE_STATUS_ARB" value="0x8B83" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_INFO_LOG_LENGTH_ARB" value="0x8B84" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_ATTACHED_OBJECTS_ARB" value="0x8B85" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_ACTIVE_UNIFORMS_ARB" value="0x8B86" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB" value="0x8B87" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="OBJECT_SHADER_SOURCE_LENGTH_ARB" value="0x8B88" >
			<ext name="ARB_shader_objects" />
		</enum>
		<enum name="VERTEX_SHADER_ARB" value="0x8B31" >
			<ext name="ARB_vertex_shader" />
		</enum>
		<enum name="MAX_VERTEX_UNIFORM_COMPONENTS_ARB" value="0x8B4A" >
			<ext name="ARB_vertex_shader" />
		</enum>
		<enum name="MAX_VARYING_FLOATS_ARB" value="0x8B4B" >
			<ext name="ARB_vertex_shader" />
		</enum>
		<enum name="MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB" value="0x8B4C" >
			<ext name="ARB_vertex_shader" />
			<ext name="NV_vertex_program3" />
		</enum>
		<enum name="MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB" value="0x8B4D" >
			<ext name="ARB_vertex_shader" />
		</enum>
		<enum name="OBJECT_ACTIVE_ATTRIBUTES_ARB" value="0x8B89" >
			<ext name="ARB_vertex_shader" />
		</enum>
		<enum name="OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB" value="0x8B8A" >
			<ext name="ARB_vertex_shader" />
		</enum>
		<enum name="FRAGMENT_SHADER_ARB" value="0x8B30" >
			<ext name="ARB_fragment_shader" />
		</enum>
		<enum name="MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB" value="0x8B49" >
			<ext name="ARB_fragment_shader" />
		</enum>
		<enum name="FRAGMENT_SHADER_DERIVATIVE_HINT_ARB" value="0x8B8B" >
			<ext name="ARB_fragment_shader" />
		</enum>
		<enum name="SHADING_LANGUAGE_VERSION_ARB" value="0x8B8C" >
			<ext name="ARB_shading_language_100" />
		</enum>
		<enum name="POINT_SPRITE_ARB" value="0x8861" >
			<ext name="ARB_point_sprite" />
		</enum>
		<enum name="COORD_REPLACE_ARB" value="0x8862" >
			<ext name="ARB_point_sprite" />
		</enum>
		<enum name="MAX_DRAW_BUFFERS_ARB" value="0x8824" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER0_ARB" value="0x8825" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER1_ARB" value="0x8826" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER2_ARB" value="0x8827" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER3_ARB" value="0x8828" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER4_ARB" value="0x8829" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER5_ARB" value="0x882A" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER6_ARB" value="0x882B" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER7_ARB" value="0x882C" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER8_ARB" value="0x882D" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER9_ARB" value="0x882E" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER10_ARB" value="0x882F" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER11_ARB" value="0x8830" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER12_ARB" value="0x8831" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER13_ARB" value="0x8832" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER14_ARB" value="0x8833" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER15_ARB" value="0x8834" >
			<ext name="ARB_draw_buffers" />
		</enum>
		<enum name="TEXTURE_RECTANGLE_ARB" value="0x84F5" >
			<ext name="ARB_texture_rectangle" />
		</enum>
		<enum name="TEXTURE_BINDING_RECTANGLE_ARB" value="0x84F6" >
			<ext name="ARB_texture_rectangle" />
		</enum>
		<enum name="PROXY_TEXTURE_RECTANGLE_ARB" value="0x84F7" >
			<ext name="ARB_texture_rectangle" />
		</enum>
		<enum name="MAX_RECTANGLE_TEXTURE_SIZE_ARB" value="0x84F8" >
			<ext name="ARB_texture_rectangle" />
		</enum>
		<enum name="RGBA_FLOAT_MODE_ARB" value="0x8820" >
			<ext name="ARB_color_buffer_float" />
		</enum>
		<enum name="CLAMP_VERTEX_COLOR_ARB" value="0x891A" >
			<ext name="ARB_color_buffer_float" />
		</enum>
		<enum name="CLAMP_FRAGMENT_COLOR_ARB" value="0x891B" >
			<ext name="ARB_color_buffer_float" />
		</enum>
		<enum name="CLAMP_READ_COLOR_ARB" value="0x891C" >
			<ext name="ARB_color_buffer_float" />
		</enum>
		<enum name="FIXED_ONLY_ARB" value="0x891D" >
			<ext name="ARB_color_buffer_float" />
		</enum>
		<enum name="HALF_FLOAT_ARB" value="0x140B" >
			<ext name="ARB_half_float_pixel" />
		</enum>
		<enum name="TEXTURE_RED_TYPE_ARB" value="0x8C10" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="TEXTURE_GREEN_TYPE_ARB" value="0x8C11" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="TEXTURE_BLUE_TYPE_ARB" value="0x8C12" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="TEXTURE_ALPHA_TYPE_ARB" value="0x8C13" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="TEXTURE_LUMINANCE_TYPE_ARB" value="0x8C14" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="TEXTURE_INTENSITY_TYPE_ARB" value="0x8C15" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="TEXTURE_DEPTH_TYPE_ARB" value="0x8C16" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="UNSIGNED_NORMALIZED_ARB" value="0x8C17" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="RGBA32F_ARB" value="0x8814" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="RGB32F_ARB" value="0x8815" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="ALPHA32F_ARB" value="0x8816" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="INTENSITY32F_ARB" value="0x8817" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="LUMINANCE32F_ARB" value="0x8818" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="LUMINANCE_ALPHA32F_ARB" value="0x8819" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="RGBA16F_ARB" value="0x881A" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="RGB16F_ARB" value="0x881B" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="ALPHA16F_ARB" value="0x881C" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="INTENSITY16F_ARB" value="0x881D" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="LUMINANCE16F_ARB" value="0x881E" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="LUMINANCE_ALPHA16F_ARB" value="0x881F" >
			<ext name="ARB_texture_float" />
		</enum>
		<enum name="PIXEL_PACK_BUFFER_ARB" value="0x88EB" >
			<ext name="ARB_pixel_buffer_object" />
		</enum>
		<enum name="PIXEL_UNPACK_BUFFER_ARB" value="0x88EC" >
			<ext name="ARB_pixel_buffer_object" />
		</enum>
		<enum name="PIXEL_PACK_BUFFER_BINDING_ARB" value="0x88ED" >
			<ext name="ARB_pixel_buffer_object" />
		</enum>
		<enum name="PIXEL_UNPACK_BUFFER_BINDING_ARB" value="0x88EF" >
			<ext name="ARB_pixel_buffer_object" />
		</enum>
		<enum name="LINES_ADJACENCY_ARB" value="0x000A" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="LINE_STRIP_ADJACENCY_ARB" value="0x000B" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="TRIANGLES_ADJACENCY_ARB" value="0x000C" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="TRIANGLE_STRIP_ADJACENCY_ARB" value="0x000D" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="PROGRAM_POINT_SIZE_ARB" value="0x8642" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB" value="0x8C29" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_LAYERED_ARB" value="0x8DA7" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB" value="0x8DA8" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB" value="0x8DA9" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="GEOMETRY_SHADER_ARB" value="0x8DD9" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="GEOMETRY_VERTICES_OUT_ARB" value="0x8DDA" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="GEOMETRY_INPUT_TYPE_ARB" value="0x8DDB" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="GEOMETRY_OUTPUT_TYPE_ARB" value="0x8DDC" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_VARYING_COMPONENTS_ARB" value="0x8DDD" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="MAX_VERTEX_VARYING_COMPONENTS_ARB" value="0x8DDE" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB" value="0x8DDF" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_OUTPUT_VERTICES_ARB" value="0x8DE0" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB" value="0x8DE1" >
			<ext name="ARB_geometry_shader4" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_DIVISOR_ARB" value="0x88FE" >
			<ext name="ARB_instanced_arrays" />
		</enum>
		<enum name="TEXTURE_BUFFER_ARB" value="0x8C2A" >
			<ext name="ARB_texture_buffer_object" />
		</enum>
		<enum name="MAX_TEXTURE_BUFFER_SIZE_ARB" value="0x8C2B" >
			<ext name="ARB_texture_buffer_object" />
		</enum>
		<enum name="TEXTURE_BINDING_BUFFER_ARB" value="0x8C2C" >
			<ext name="ARB_texture_buffer_object" />
		</enum>
		<enum name="TEXTURE_BUFFER_DATA_STORE_BINDING_ARB" value="0x8C2D" >
			<ext name="ARB_texture_buffer_object" />
		</enum>
		<enum name="TEXTURE_BUFFER_FORMAT_ARB" value="0x8C2E" >
			<ext name="ARB_texture_buffer_object" />
		</enum>
		<enum name="MAX_GEOMETRY_UNIFORM_BLOCKS" value="0x8A2C" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS" value="0x8A32" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER" value="0x8A45" >
			<ext name="ARB_uniform_buffer_object" />
		</enum>
		<enum name="COPY_READ_BUFFER_BINDING" value="0x8F36" >
			<ext name="ARB_copy_buffer" />
		</enum>
		<enum name="COPY_WRITE_BUFFER_BINDING" value="0x8F37" >
			<ext name="ARB_copy_buffer" />
		</enum>
		<enum name="SAMPLE_SHADING_ARB" value="0x8C36" >
			<ext name="ARB_sample_shading" />
		</enum>
		<enum name="MIN_SAMPLE_SHADING_VALUE_ARB" value="0x8C37" >
			<ext name="ARB_sample_shading" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_ARRAY_ARB" value="0x9009" >
			<ext name="ARB_texture_cube_map_array" />
		</enum>
		<enum name="TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB" value="0x900A" >
			<ext name="ARB_texture_cube_map_array" />
		</enum>
		<enum name="PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB" value="0x900B" >
			<ext name="ARB_texture_cube_map_array" />
		</enum>
		<enum name="SAMPLER_CUBE_MAP_ARRAY_ARB" value="0x900C" >
			<ext name="ARB_texture_cube_map_array" />
		</enum>
		<enum name="SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB" value="0x900D" >
			<ext name="ARB_texture_cube_map_array" />
		</enum>
		<enum name="INT_SAMPLER_CUBE_MAP_ARRAY_ARB" value="0x900E" >
			<ext name="ARB_texture_cube_map_array" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB" value="0x900F" >
			<ext name="ARB_texture_cube_map_array" />
		</enum>
		<enum name="MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB" value="0x8E5E" >
			<ext name="ARB_texture_gather" />
		</enum>
		<enum name="MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB" value="0x8E5F" >
			<ext name="ARB_texture_gather" />
		</enum>
		<enum name="MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB" value="0x8F9F" >
			<ext name="ARB_texture_gather" />
		</enum>
		<enum name="SHADER_INCLUDE_ARB" value="0x8DAE" >
			<ext name="ARB_shading_language_include" />
		</enum>
		<enum name="NAMED_STRING_LENGTH_ARB" value="0x8DE9" >
			<ext name="ARB_shading_language_include" />
		</enum>
		<enum name="NAMED_STRING_TYPE_ARB" value="0x8DEA" >
			<ext name="ARB_shading_language_include" />
		</enum>
		<enum name="COMPRESSED_RGBA_BPTC_UNORM_ARB" value="0x8E8C" >
			<ext name="ARB_texture_compression_bptc" />
		</enum>
		<enum name="COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB" value="0x8E8D" >
			<ext name="ARB_texture_compression_bptc" />
		</enum>
		<enum name="COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB" value="0x8E8E" >
			<ext name="ARB_texture_compression_bptc" />
		</enum>
		<enum name="COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB" value="0x8E8F" >
			<ext name="ARB_texture_compression_bptc" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_PAUSED" value="0x8E23" >
			<ext name="ARB_transform_feedback2" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_ACTIVE" value="0x8E24" >
			<ext name="ARB_transform_feedback2" />
		</enum>
		<enum name="SYNC_CL_EVENT_ARB" value="0x8240" >
			<ext name="ARB_cl_event" />
		</enum>
		<enum name="SYNC_CL_EVENT_COMPLETE_ARB" value="0x8241" >
			<ext name="ARB_cl_event" />
		</enum>
		<enum name="DEBUG_OUTPUT_SYNCHRONOUS_ARB" value="0x8242" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB" value="0x8243" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_CALLBACK_FUNCTION_ARB" value="0x8244" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_CALLBACK_USER_PARAM_ARB" value="0x8245" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SOURCE_API_ARB" value="0x8246" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SOURCE_WINDOW_SYSTEM_ARB" value="0x8247" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SOURCE_SHADER_COMPILER_ARB" value="0x8248" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SOURCE_THIRD_PARTY_ARB" value="0x8249" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SOURCE_APPLICATION_ARB" value="0x824A" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SOURCE_OTHER_ARB" value="0x824B" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_TYPE_ERROR_ARB" value="0x824C" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB" value="0x824D" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB" value="0x824E" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_TYPE_PORTABILITY_ARB" value="0x824F" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_TYPE_PERFORMANCE_ARB" value="0x8250" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_TYPE_OTHER_ARB" value="0x8251" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="MAX_DEBUG_MESSAGE_LENGTH_ARB" value="0x9143" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="MAX_DEBUG_LOGGED_MESSAGES_ARB" value="0x9144" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_LOGGED_MESSAGES_ARB" value="0x9145" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SEVERITY_HIGH_ARB" value="0x9146" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SEVERITY_MEDIUM_ARB" value="0x9147" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="DEBUG_SEVERITY_LOW_ARB" value="0x9148" >
			<ext name="ARB_debug_output" />
		</enum>
		<enum name="CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB" value="0x00000004" >
			<ext name="ARB_robustness" />
		</enum>
		<enum name="LOSE_CONTEXT_ON_RESET_ARB" value="0x8252" >
			<ext name="ARB_robustness" />
		</enum>
		<enum name="GUILTY_CONTEXT_RESET_ARB" value="0x8253" >
			<ext name="ARB_robustness" />
		</enum>
		<enum name="INNOCENT_CONTEXT_RESET_ARB" value="0x8254" >
			<ext name="ARB_robustness" />
		</enum>
		<enum name="UNKNOWN_CONTEXT_RESET_ARB" value="0x8255" >
			<ext name="ARB_robustness" />
		</enum>
		<enum name="RESET_NOTIFICATION_STRATEGY_ARB" value="0x8256" >
			<ext name="ARB_robustness" />
		</enum>
		<enum name="NO_RESET_NOTIFICATION_ARB" value="0x8261" >
			<ext name="ARB_robustness" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_4x4_KHR" value="0x93B0" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_5x4_KHR" value="0x93B1" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_5x5_KHR" value="0x93B2" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_6x5_KHR" value="0x93B3" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_6x6_KHR" value="0x93B4" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_8x5_KHR" value="0x93B5" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_8x6_KHR" value="0x93B6" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_8x8_KHR" value="0x93B7" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_10x5_KHR" value="0x93B8" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_10x6_KHR" value="0x93B9" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_10x8_KHR" value="0x93BA" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_10x10_KHR" value="0x93BB" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_12x10_KHR" value="0x93BC" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_RGBA_ASTC_12x12_KHR" value="0x93BD" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR" value="0x93D0" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR" value="0x93D1" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR" value="0x93D2" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR" value="0x93D3" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR" value="0x93D4" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR" value="0x93D5" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR" value="0x93D6" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR" value="0x93D7" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR" value="0x93D8" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR" value="0x93D9" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR" value="0x93DA" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR" value="0x93DB" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR" value="0x93DC" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR" value="0x93DD" >
			<ext name="KHR_texture_compression_astc_ldr" />
		</enum>
		<enum name="COMPUTE_SHADER_BIT" value="0x00000020" >
			<ext name="ARB_compute_shader" />
		</enum>
		<enum name="SRGB_DECODE_ARB" value="0x8299" >
			<ext name="ARB_internalformat_query2" />
		</enum>
		<enum name="ABGR_EXT" value="0x8000" >
			<ext name="EXT_abgr" />
		</enum>
		<enum name="CONSTANT_COLOR_EXT" value="0x8001" >
			<ext name="EXT_blend_color" />
		</enum>
		<enum name="ONE_MINUS_CONSTANT_COLOR_EXT" value="0x8002" >
			<ext name="EXT_blend_color" />
		</enum>
		<enum name="CONSTANT_ALPHA_EXT" value="0x8003" >
			<ext name="EXT_blend_color" />
		</enum>
		<enum name="ONE_MINUS_CONSTANT_ALPHA_EXT" value="0x8004" >
			<ext name="EXT_blend_color" />
		</enum>
		<enum name="BLEND_COLOR_EXT" value="0x8005" >
			<ext name="EXT_blend_color" />
		</enum>
		<enum name="POLYGON_OFFSET_EXT" value="0x8037" >
			<ext name="EXT_polygon_offset" />
		</enum>
		<enum name="POLYGON_OFFSET_FACTOR_EXT" value="0x8038" >
			<ext name="EXT_polygon_offset" />
		</enum>
		<enum name="POLYGON_OFFSET_BIAS_EXT" value="0x8039" >
			<ext name="EXT_polygon_offset" />
		</enum>
		<enum name="ALPHA4_EXT" value="0x803B" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="ALPHA8_EXT" value="0x803C" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="ALPHA12_EXT" value="0x803D" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="ALPHA16_EXT" value="0x803E" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE4_EXT" value="0x803F" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE8_EXT" value="0x8040" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE12_EXT" value="0x8041" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE16_EXT" value="0x8042" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE4_ALPHA4_EXT" value="0x8043" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE6_ALPHA2_EXT" value="0x8044" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE8_ALPHA8_EXT" value="0x8045" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE12_ALPHA4_EXT" value="0x8046" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE12_ALPHA12_EXT" value="0x8047" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="LUMINANCE16_ALPHA16_EXT" value="0x8048" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="INTENSITY_EXT" value="0x8049" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="INTENSITY4_EXT" value="0x804A" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="INTENSITY8_EXT" value="0x804B" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="INTENSITY12_EXT" value="0x804C" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="INTENSITY16_EXT" value="0x804D" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB2_EXT" value="0x804E" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB4_EXT" value="0x804F" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB5_EXT" value="0x8050" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB8_EXT" value="0x8051" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB10_EXT" value="0x8052" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB12_EXT" value="0x8053" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB16_EXT" value="0x8054" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGBA2_EXT" value="0x8055" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGBA4_EXT" value="0x8056" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB5_A1_EXT" value="0x8057" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGBA8_EXT" value="0x8058" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGB10_A2_EXT" value="0x8059" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGBA12_EXT" value="0x805A" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="RGBA16_EXT" value="0x805B" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="TEXTURE_RED_SIZE_EXT" value="0x805C" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="TEXTURE_GREEN_SIZE_EXT" value="0x805D" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="TEXTURE_BLUE_SIZE_EXT" value="0x805E" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="TEXTURE_ALPHA_SIZE_EXT" value="0x805F" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="TEXTURE_LUMINANCE_SIZE_EXT" value="0x8060" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="TEXTURE_INTENSITY_SIZE_EXT" value="0x8061" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="REPLACE_EXT" value="0x8062" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="PROXY_TEXTURE_1D_EXT" value="0x8063" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="PROXY_TEXTURE_2D_EXT" value="0x8064" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="TEXTURE_TOO_LARGE_EXT" value="0x8065" >
			<ext name="EXT_texture" />
		</enum>
		<enum name="PACK_SKIP_IMAGES_EXT" value="0x806B" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="PACK_IMAGE_HEIGHT_EXT" value="0x806C" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="UNPACK_SKIP_IMAGES_EXT" value="0x806D" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="UNPACK_IMAGE_HEIGHT_EXT" value="0x806E" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="TEXTURE_3D_EXT" value="0x806F" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="PROXY_TEXTURE_3D_EXT" value="0x8070" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="TEXTURE_DEPTH_EXT" value="0x8071" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="TEXTURE_WRAP_R_EXT" value="0x8072" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="MAX_3D_TEXTURE_SIZE_EXT" value="0x8073" >
			<ext name="EXT_texture3D" />
		</enum>
		<enum name="FILTER4_SGIS" value="0x8146" >
			<ext name="SGIS_texture_filter4" />
		</enum>
		<enum name="TEXTURE_FILTER4_SIZE_SGIS" value="0x8147" >
			<ext name="SGIS_texture_filter4" />
		</enum>
		<enum name="HISTOGRAM_EXT" value="0x8024" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="PROXY_HISTOGRAM_EXT" value="0x8025" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="HISTOGRAM_WIDTH_EXT" value="0x8026" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="HISTOGRAM_FORMAT_EXT" value="0x8027" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="HISTOGRAM_RED_SIZE_EXT" value="0x8028" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="HISTOGRAM_GREEN_SIZE_EXT" value="0x8029" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="HISTOGRAM_BLUE_SIZE_EXT" value="0x802A" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="HISTOGRAM_ALPHA_SIZE_EXT" value="0x802B" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="HISTOGRAM_LUMINANCE_SIZE_EXT" value="0x802C" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="HISTOGRAM_SINK_EXT" value="0x802D" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="MINMAX_EXT" value="0x802E" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="MINMAX_FORMAT_EXT" value="0x802F" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="MINMAX_SINK_EXT" value="0x8030" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="TABLE_TOO_LARGE_EXT" value="0x8031" >
			<ext name="EXT_histogram" />
		</enum>
		<enum name="CONVOLUTION_1D_EXT" value="0x8010" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="CONVOLUTION_2D_EXT" value="0x8011" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="SEPARABLE_2D_EXT" value="0x8012" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="CONVOLUTION_BORDER_MODE_EXT" value="0x8013" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="CONVOLUTION_FILTER_SCALE_EXT" value="0x8014" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="CONVOLUTION_FILTER_BIAS_EXT" value="0x8015" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="REDUCE_EXT" value="0x8016" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="CONVOLUTION_FORMAT_EXT" value="0x8017" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="CONVOLUTION_WIDTH_EXT" value="0x8018" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="CONVOLUTION_HEIGHT_EXT" value="0x8019" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="MAX_CONVOLUTION_WIDTH_EXT" value="0x801A" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="MAX_CONVOLUTION_HEIGHT_EXT" value="0x801B" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="POST_CONVOLUTION_RED_SCALE_EXT" value="0x801C" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="POST_CONVOLUTION_GREEN_SCALE_EXT" value="0x801D" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="POST_CONVOLUTION_BLUE_SCALE_EXT" value="0x801E" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="POST_CONVOLUTION_ALPHA_SCALE_EXT" value="0x801F" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="POST_CONVOLUTION_RED_BIAS_EXT" value="0x8020" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="POST_CONVOLUTION_GREEN_BIAS_EXT" value="0x8021" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="POST_CONVOLUTION_BLUE_BIAS_EXT" value="0x8022" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="POST_CONVOLUTION_ALPHA_BIAS_EXT" value="0x8023" >
			<ext name="EXT_convolution" />
		</enum>
		<enum name="COLOR_MATRIX_SGI" value="0x80B1" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="COLOR_MATRIX_STACK_DEPTH_SGI" value="0x80B2" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="MAX_COLOR_MATRIX_STACK_DEPTH_SGI" value="0x80B3" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="POST_COLOR_MATRIX_RED_SCALE_SGI" value="0x80B4" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="POST_COLOR_MATRIX_GREEN_SCALE_SGI" value="0x80B5" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="POST_COLOR_MATRIX_BLUE_SCALE_SGI" value="0x80B6" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="POST_COLOR_MATRIX_ALPHA_SCALE_SGI" value="0x80B7" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="POST_COLOR_MATRIX_RED_BIAS_SGI" value="0x80B8" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="POST_COLOR_MATRIX_GREEN_BIAS_SGI" value="0x80B9" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="POST_COLOR_MATRIX_BLUE_BIAS_SGI" value="0x80BA" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="POST_COLOR_MATRIX_ALPHA_BIAS_SGI" value="0x80BB" >
			<ext name="SGI_color_matrix" />
		</enum>
		<enum name="COLOR_TABLE_SGI" value="0x80D0" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="POST_CONVOLUTION_COLOR_TABLE_SGI" value="0x80D1" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="POST_COLOR_MATRIX_COLOR_TABLE_SGI" value="0x80D2" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="PROXY_COLOR_TABLE_SGI" value="0x80D3" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI" value="0x80D4" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI" value="0x80D5" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_SCALE_SGI" value="0x80D6" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_BIAS_SGI" value="0x80D7" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_FORMAT_SGI" value="0x80D8" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_WIDTH_SGI" value="0x80D9" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_RED_SIZE_SGI" value="0x80DA" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_GREEN_SIZE_SGI" value="0x80DB" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_BLUE_SIZE_SGI" value="0x80DC" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_ALPHA_SIZE_SGI" value="0x80DD" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_LUMINANCE_SIZE_SGI" value="0x80DE" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="COLOR_TABLE_INTENSITY_SIZE_SGI" value="0x80DF" >
			<ext name="SGI_color_table" />
		</enum>
		<enum name="PIXEL_TEXTURE_SGIS" value="0x8353" >
			<ext name="SGIS_pixel_texture" />
		</enum>
		<enum name="PIXEL_FRAGMENT_RGB_SOURCE_SGIS" value="0x8354" >
			<ext name="SGIS_pixel_texture" />
		</enum>
		<enum name="PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS" value="0x8355" >
			<ext name="SGIS_pixel_texture" />
		</enum>
		<enum name="PIXEL_GROUP_COLOR_SGIS" value="0x8356" >
			<ext name="SGIS_pixel_texture" />
		</enum>
		<enum name="PIXEL_TEX_GEN_SGIX" value="0x8139" >
			<ext name="SGIX_pixel_texture" />
		</enum>
		<enum name="PIXEL_TEX_GEN_MODE_SGIX" value="0x832B" >
			<ext name="SGIX_pixel_texture" />
		</enum>
		<enum name="PACK_SKIP_VOLUMES_SGIS" value="0x8130" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="PACK_IMAGE_DEPTH_SGIS" value="0x8131" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="UNPACK_SKIP_VOLUMES_SGIS" value="0x8132" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="UNPACK_IMAGE_DEPTH_SGIS" value="0x8133" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="TEXTURE_4D_SGIS" value="0x8134" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="PROXY_TEXTURE_4D_SGIS" value="0x8135" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="TEXTURE_4DSIZE_SGIS" value="0x8136" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="TEXTURE_WRAP_Q_SGIS" value="0x8137" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="MAX_4D_TEXTURE_SIZE_SGIS" value="0x8138" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="TEXTURE_4D_BINDING_SGIS" value="0x814F" >
			<ext name="SGIS_texture4D" />
		</enum>
		<enum name="TEXTURE_COLOR_TABLE_SGI" value="0x80BC" >
			<ext name="SGI_texture_color_table" />
		</enum>
		<enum name="PROXY_TEXTURE_COLOR_TABLE_SGI" value="0x80BD" >
			<ext name="SGI_texture_color_table" />
		</enum>
		<enum name="CMYK_EXT" value="0x800C" >
			<ext name="EXT_cmyka" />
		</enum>
		<enum name="CMYKA_EXT" value="0x800D" >
			<ext name="EXT_cmyka" />
		</enum>
		<enum name="PACK_CMYK_HINT_EXT" value="0x800E" >
			<ext name="EXT_cmyka" />
		</enum>
		<enum name="UNPACK_CMYK_HINT_EXT" value="0x800F" >
			<ext name="EXT_cmyka" />
		</enum>
		<enum name="TEXTURE_PRIORITY_EXT" value="0x8066" >
			<ext name="EXT_texture_object" />
		</enum>
		<enum name="TEXTURE_RESIDENT_EXT" value="0x8067" >
			<ext name="EXT_texture_object" />
		</enum>
		<enum name="TEXTURE_1D_BINDING_EXT" value="0x8068" >
			<ext name="EXT_texture_object" />
		</enum>
		<enum name="TEXTURE_2D_BINDING_EXT" value="0x8069" >
			<ext name="EXT_texture_object" />
		</enum>
		<enum name="TEXTURE_3D_BINDING_EXT" value="0x806A" >
			<ext name="EXT_texture_object" />
		</enum>
		<enum name="DETAIL_TEXTURE_2D_SGIS" value="0x8095" >
			<ext name="SGIS_detail_texture" />
		</enum>
		<enum name="DETAIL_TEXTURE_2D_BINDING_SGIS" value="0x8096" >
			<ext name="SGIS_detail_texture" />
		</enum>
		<enum name="LINEAR_DETAIL_SGIS" value="0x8097" >
			<ext name="SGIS_detail_texture" />
		</enum>
		<enum name="LINEAR_DETAIL_ALPHA_SGIS" value="0x8098" >
			<ext name="SGIS_detail_texture" />
		</enum>
		<enum name="LINEAR_DETAIL_COLOR_SGIS" value="0x8099" >
			<ext name="SGIS_detail_texture" />
		</enum>
		<enum name="DETAIL_TEXTURE_LEVEL_SGIS" value="0x809A" >
			<ext name="SGIS_detail_texture" />
		</enum>
		<enum name="DETAIL_TEXTURE_MODE_SGIS" value="0x809B" >
			<ext name="SGIS_detail_texture" />
		</enum>
		<enum name="DETAIL_TEXTURE_FUNC_POINTS_SGIS" value="0x809C" >
			<ext name="SGIS_detail_texture" />
		</enum>
		<enum name="LINEAR_SHARPEN_SGIS" value="0x80AD" >
			<ext name="SGIS_sharpen_texture" />
		</enum>
		<enum name="LINEAR_SHARPEN_ALPHA_SGIS" value="0x80AE" >
			<ext name="SGIS_sharpen_texture" />
		</enum>
		<enum name="LINEAR_SHARPEN_COLOR_SGIS" value="0x80AF" >
			<ext name="SGIS_sharpen_texture" />
		</enum>
		<enum name="SHARPEN_TEXTURE_FUNC_POINTS_SGIS" value="0x80B0" >
			<ext name="SGIS_sharpen_texture" />
		</enum>
		<enum name="UNSIGNED_BYTE_3_3_2_EXT" value="0x8032" >
			<ext name="EXT_packed_pixels" />
		</enum>
		<enum name="UNSIGNED_SHORT_4_4_4_4_EXT" value="0x8033" >
			<ext name="EXT_packed_pixels" />
		</enum>
		<enum name="UNSIGNED_SHORT_5_5_5_1_EXT" value="0x8034" >
			<ext name="EXT_packed_pixels" />
		</enum>
		<enum name="UNSIGNED_INT_8_8_8_8_EXT" value="0x8035" >
			<ext name="EXT_packed_pixels" />
		</enum>
		<enum name="UNSIGNED_INT_10_10_10_2_EXT" value="0x8036" >
			<ext name="EXT_packed_pixels" />
		</enum>
		<enum name="TEXTURE_MIN_LOD_SGIS" value="0x813A" >
			<ext name="SGIS_texture_lod" />
		</enum>
		<enum name="TEXTURE_MAX_LOD_SGIS" value="0x813B" >
			<ext name="SGIS_texture_lod" />
		</enum>
		<enum name="TEXTURE_BASE_LEVEL_SGIS" value="0x813C" >
			<ext name="SGIS_texture_lod" />
		</enum>
		<enum name="TEXTURE_MAX_LEVEL_SGIS" value="0x813D" >
			<ext name="SGIS_texture_lod" />
		</enum>
		<enum name="MULTISAMPLE_SGIS" value="0x809D" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="SAMPLE_ALPHA_TO_MASK_SGIS" value="0x809E" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="SAMPLE_ALPHA_TO_ONE_SGIS" value="0x809F" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_SGIS" value="0x80A0" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="1PASS_SGIS" value="0x80A1" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="2PASS_0_SGIS" value="0x80A2" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="2PASS_1_SGIS" value="0x80A3" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="4PASS_0_SGIS" value="0x80A4" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="4PASS_1_SGIS" value="0x80A5" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="4PASS_2_SGIS" value="0x80A6" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="4PASS_3_SGIS" value="0x80A7" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="SAMPLE_BUFFERS_SGIS" value="0x80A8" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="SAMPLES_SGIS" value="0x80A9" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_VALUE_SGIS" value="0x80AA" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_INVERT_SGIS" value="0x80AB" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="SAMPLE_PATTERN_SGIS" value="0x80AC" >
			<ext name="SGIS_multisample" />
		</enum>
		<enum name="RESCALE_NORMAL_EXT" value="0x803A" >
			<ext name="EXT_rescale_normal" />
		</enum>
		<enum name="VERTEX_ARRAY_EXT" value="0x8074" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="NORMAL_ARRAY_EXT" value="0x8075" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="COLOR_ARRAY_EXT" value="0x8076" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="INDEX_ARRAY_EXT" value="0x8077" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_EXT" value="0x8078" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_EXT" value="0x8079" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="VERTEX_ARRAY_SIZE_EXT" value="0x807A" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="VERTEX_ARRAY_TYPE_EXT" value="0x807B" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="VERTEX_ARRAY_STRIDE_EXT" value="0x807C" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="VERTEX_ARRAY_COUNT_EXT" value="0x807D" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="NORMAL_ARRAY_TYPE_EXT" value="0x807E" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="NORMAL_ARRAY_STRIDE_EXT" value="0x807F" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="NORMAL_ARRAY_COUNT_EXT" value="0x8080" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="COLOR_ARRAY_SIZE_EXT" value="0x8081" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="COLOR_ARRAY_TYPE_EXT" value="0x8082" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="COLOR_ARRAY_STRIDE_EXT" value="0x8083" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="COLOR_ARRAY_COUNT_EXT" value="0x8084" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="INDEX_ARRAY_TYPE_EXT" value="0x8085" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="INDEX_ARRAY_STRIDE_EXT" value="0x8086" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="INDEX_ARRAY_COUNT_EXT" value="0x8087" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_SIZE_EXT" value="0x8088" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_TYPE_EXT" value="0x8089" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_STRIDE_EXT" value="0x808A" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_COUNT_EXT" value="0x808B" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_STRIDE_EXT" value="0x808C" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_COUNT_EXT" value="0x808D" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="VERTEX_ARRAY_POINTER_EXT" value="0x808E" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="NORMAL_ARRAY_POINTER_EXT" value="0x808F" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="COLOR_ARRAY_POINTER_EXT" value="0x8090" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="INDEX_ARRAY_POINTER_EXT" value="0x8091" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_POINTER_EXT" value="0x8092" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_POINTER_EXT" value="0x8093" >
			<ext name="EXT_vertex_array" />
		</enum>
		<enum name="GENERATE_MIPMAP_SGIS" value="0x8191" >
			<ext name="SGIS_generate_mipmap" />
		</enum>
		<enum name="GENERATE_MIPMAP_HINT_SGIS" value="0x8192" >
			<ext name="SGIS_generate_mipmap" />
		</enum>
		<enum name="LINEAR_CLIPMAP_LINEAR_SGIX" value="0x8170" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="TEXTURE_CLIPMAP_CENTER_SGIX" value="0x8171" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="TEXTURE_CLIPMAP_FRAME_SGIX" value="0x8172" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="TEXTURE_CLIPMAP_OFFSET_SGIX" value="0x8173" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX" value="0x8174" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="TEXTURE_CLIPMAP_LOD_OFFSET_SGIX" value="0x8175" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="TEXTURE_CLIPMAP_DEPTH_SGIX" value="0x8176" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="MAX_CLIPMAP_DEPTH_SGIX" value="0x8177" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX" value="0x8178" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="NEAREST_CLIPMAP_NEAREST_SGIX" value="0x844D" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="NEAREST_CLIPMAP_LINEAR_SGIX" value="0x844E" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="LINEAR_CLIPMAP_NEAREST_SGIX" value="0x844F" >
			<ext name="SGIX_clipmap" />
		</enum>
		<enum name="TEXTURE_COMPARE_SGIX" value="0x819A" >
			<ext name="SGIX_shadow" />
		</enum>
		<enum name="TEXTURE_COMPARE_OPERATOR_SGIX" value="0x819B" >
			<ext name="SGIX_shadow" />
		</enum>
		<enum name="TEXTURE_LEQUAL_R_SGIX" value="0x819C" >
			<ext name="SGIX_shadow" />
		</enum>
		<enum name="TEXTURE_GEQUAL_R_SGIX" value="0x819D" >
			<ext name="SGIX_shadow" />
		</enum>
		<enum name="CLAMP_TO_EDGE_SGIS" value="0x812F" >
			<ext name="SGIS_texture_edge_clamp" />
		</enum>
		<enum name="CLAMP_TO_BORDER_SGIS" value="0x812D" >
			<ext name="SGIS_texture_border_clamp" />
		</enum>
		<enum name="FUNC_ADD_EXT" value="0x8006" >
			<ext name="EXT_blend_minmax" />
		</enum>
		<enum name="MIN_EXT" value="0x8007" >
			<ext name="EXT_blend_minmax" />
		</enum>
		<enum name="MAX_EXT" value="0x8008" >
			<ext name="EXT_blend_minmax" />
		</enum>
		<enum name="BLEND_EQUATION_EXT" value="0x8009" >
			<ext name="EXT_blend_minmax" />
		</enum>
		<enum name="FUNC_SUBTRACT_EXT" value="0x800A" >
			<ext name="EXT_blend_subtract" />
		</enum>
		<enum name="FUNC_REVERSE_SUBTRACT_EXT" value="0x800B" >
			<ext name="EXT_blend_subtract" />
		</enum>
		<enum name="INTERLACE_SGIX" value="0x8094" >
			<ext name="SGIX_interlace" />
		</enum>
		<enum name="PIXEL_TILE_BEST_ALIGNMENT_SGIX" value="0x813E" >
			<ext name="SGIX_pixel_tiles" />
		</enum>
		<enum name="PIXEL_TILE_CACHE_INCREMENT_SGIX" value="0x813F" >
			<ext name="SGIX_pixel_tiles" />
		</enum>
		<enum name="PIXEL_TILE_WIDTH_SGIX" value="0x8140" >
			<ext name="SGIX_pixel_tiles" />
		</enum>
		<enum name="PIXEL_TILE_HEIGHT_SGIX" value="0x8141" >
			<ext name="SGIX_pixel_tiles" />
		</enum>
		<enum name="PIXEL_TILE_GRID_WIDTH_SGIX" value="0x8142" >
			<ext name="SGIX_pixel_tiles" />
		</enum>
		<enum name="PIXEL_TILE_GRID_HEIGHT_SGIX" value="0x8143" >
			<ext name="SGIX_pixel_tiles" />
		</enum>
		<enum name="PIXEL_TILE_GRID_DEPTH_SGIX" value="0x8144" >
			<ext name="SGIX_pixel_tiles" />
		</enum>
		<enum name="PIXEL_TILE_CACHE_SIZE_SGIX" value="0x8145" >
			<ext name="SGIX_pixel_tiles" />
		</enum>
		<enum name="DUAL_ALPHA4_SGIS" value="0x8110" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_ALPHA8_SGIS" value="0x8111" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_ALPHA12_SGIS" value="0x8112" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_ALPHA16_SGIS" value="0x8113" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_LUMINANCE4_SGIS" value="0x8114" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_LUMINANCE8_SGIS" value="0x8115" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_LUMINANCE12_SGIS" value="0x8116" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_LUMINANCE16_SGIS" value="0x8117" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_INTENSITY4_SGIS" value="0x8118" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_INTENSITY8_SGIS" value="0x8119" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_INTENSITY12_SGIS" value="0x811A" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_INTENSITY16_SGIS" value="0x811B" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_LUMINANCE_ALPHA4_SGIS" value="0x811C" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_LUMINANCE_ALPHA8_SGIS" value="0x811D" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="QUAD_ALPHA4_SGIS" value="0x811E" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="QUAD_ALPHA8_SGIS" value="0x811F" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="QUAD_LUMINANCE4_SGIS" value="0x8120" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="QUAD_LUMINANCE8_SGIS" value="0x8121" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="QUAD_INTENSITY4_SGIS" value="0x8122" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="QUAD_INTENSITY8_SGIS" value="0x8123" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="DUAL_TEXTURE_SELECT_SGIS" value="0x8124" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="QUAD_TEXTURE_SELECT_SGIS" value="0x8125" >
			<ext name="SGIS_texture_select" />
		</enum>
		<enum name="SPRITE_SGIX" value="0x8148" >
			<ext name="SGIX_sprite" />
		</enum>
		<enum name="SPRITE_MODE_SGIX" value="0x8149" >
			<ext name="SGIX_sprite" />
		</enum>
		<enum name="SPRITE_AXIS_SGIX" value="0x814A" >
			<ext name="SGIX_sprite" />
		</enum>
		<enum name="SPRITE_TRANSLATION_SGIX" value="0x814B" >
			<ext name="SGIX_sprite" />
		</enum>
		<enum name="SPRITE_AXIAL_SGIX" value="0x814C" >
			<ext name="SGIX_sprite" />
		</enum>
		<enum name="SPRITE_OBJECT_ALIGNED_SGIX" value="0x814D" >
			<ext name="SGIX_sprite" />
		</enum>
		<enum name="SPRITE_EYE_ALIGNED_SGIX" value="0x814E" >
			<ext name="SGIX_sprite" />
		</enum>
		<enum name="TEXTURE_MULTI_BUFFER_HINT_SGIX" value="0x812E" >
			<ext name="SGIX_texture_multi_buffer" />
		</enum>
		<enum name="POINT_SIZE_MIN_EXT" value="0x8126" >
			<ext name="EXT_point_parameters" />
		</enum>
		<enum name="POINT_SIZE_MAX_EXT" value="0x8127" >
			<ext name="EXT_point_parameters" />
		</enum>
		<enum name="POINT_FADE_THRESHOLD_SIZE_EXT" value="0x8128" >
			<ext name="EXT_point_parameters" />
		</enum>
		<enum name="DISTANCE_ATTENUATION_EXT" value="0x8129" >
			<ext name="EXT_point_parameters" />
		</enum>
		<enum name="POINT_SIZE_MIN_SGIS" value="0x8126" >
			<ext name="SGIS_point_parameters" />
		</enum>
		<enum name="POINT_SIZE_MAX_SGIS" value="0x8127" >
			<ext name="SGIS_point_parameters" />
		</enum>
		<enum name="POINT_FADE_THRESHOLD_SIZE_SGIS" value="0x8128" >
			<ext name="SGIS_point_parameters" />
		</enum>
		<enum name="DISTANCE_ATTENUATION_SGIS" value="0x8129" >
			<ext name="SGIS_point_parameters" />
		</enum>
		<enum name="INSTRUMENT_BUFFER_POINTER_SGIX" value="0x8180" >
			<ext name="SGIX_instruments" />
		</enum>
		<enum name="INSTRUMENT_MEASUREMENTS_SGIX" value="0x8181" >
			<ext name="SGIX_instruments" />
		</enum>
		<enum name="POST_TEXTURE_FILTER_BIAS_SGIX" value="0x8179" >
			<ext name="SGIX_texture_scale_bias" />
		</enum>
		<enum name="POST_TEXTURE_FILTER_SCALE_SGIX" value="0x817A" >
			<ext name="SGIX_texture_scale_bias" />
		</enum>
		<enum name="POST_TEXTURE_FILTER_BIAS_RANGE_SGIX" value="0x817B" >
			<ext name="SGIX_texture_scale_bias" />
		</enum>
		<enum name="POST_TEXTURE_FILTER_SCALE_RANGE_SGIX" value="0x817C" >
			<ext name="SGIX_texture_scale_bias" />
		</enum>
		<enum name="FRAMEZOOM_SGIX" value="0x818B" >
			<ext name="SGIX_framezoom" />
		</enum>
		<enum name="FRAMEZOOM_FACTOR_SGIX" value="0x818C" >
			<ext name="SGIX_framezoom" />
		</enum>
		<enum name="MAX_FRAMEZOOM_FACTOR_SGIX" value="0x818D" >
			<ext name="SGIX_framezoom" />
		</enum>
		<enum name="TEXTURE_DEFORMATION_BIT_SGIX" value="0x00000001" >
			<ext name="FfdMaskSGIX" />
		</enum>
		<enum name="GEOMETRY_DEFORMATION_BIT_SGIX" value="0x00000002" >
			<ext name="FfdMaskSGIX" />
		</enum>
		<enum name="GEOMETRY_DEFORMATION_SGIX" value="0x8194" >
			<ext name="SGIX_polynomial_ffd" />
		</enum>
		<enum name="TEXTURE_DEFORMATION_SGIX" value="0x8195" >
			<ext name="SGIX_polynomial_ffd" />
		</enum>
		<enum name="DEFORMATIONS_MASK_SGIX" value="0x8196" >
			<ext name="SGIX_polynomial_ffd" />
		</enum>
		<enum name="MAX_DEFORMATION_ORDER_SGIX" value="0x8197" >
			<ext name="SGIX_polynomial_ffd" />
		</enum>
		<enum name="REFERENCE_PLANE_SGIX" value="0x817D" >
			<ext name="SGIX_reference_plane" />
		</enum>
		<enum name="REFERENCE_PLANE_EQUATION_SGIX" value="0x817E" >
			<ext name="SGIX_reference_plane" />
		</enum>
		<enum name="DEPTH_COMPONENT16_SGIX" value="0x81A5" >
			<ext name="SGIX_depth_texture" />
		</enum>
		<enum name="DEPTH_COMPONENT24_SGIX" value="0x81A6" >
			<ext name="SGIX_depth_texture" />
		</enum>
		<enum name="DEPTH_COMPONENT32_SGIX" value="0x81A7" >
			<ext name="SGIX_depth_texture" />
		</enum>
		<enum name="FOG_FUNC_SGIS" value="0x812A" >
			<ext name="SGIS_fog_function" />
		</enum>
		<enum name="FOG_FUNC_POINTS_SGIS" value="0x812B" >
			<ext name="SGIS_fog_function" />
		</enum>
		<enum name="MAX_FOG_FUNC_POINTS_SGIS" value="0x812C" >
			<ext name="SGIS_fog_function" />
		</enum>
		<enum name="FOG_OFFSET_SGIX" value="0x8198" >
			<ext name="SGIX_fog_offset" />
		</enum>
		<enum name="FOG_OFFSET_VALUE_SGIX" value="0x8199" >
			<ext name="SGIX_fog_offset" />
		</enum>
		<enum name="IMAGE_SCALE_X_HP" value="0x8155" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_SCALE_Y_HP" value="0x8156" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_TRANSLATE_X_HP" value="0x8157" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_TRANSLATE_Y_HP" value="0x8158" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_ROTATE_ANGLE_HP" value="0x8159" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_ROTATE_ORIGIN_X_HP" value="0x815A" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_ROTATE_ORIGIN_Y_HP" value="0x815B" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_MAG_FILTER_HP" value="0x815C" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_MIN_FILTER_HP" value="0x815D" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_CUBIC_WEIGHT_HP" value="0x815E" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="CUBIC_HP" value="0x815F" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="AVERAGE_HP" value="0x8160" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IMAGE_TRANSFORM_2D_HP" value="0x8161" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="POST_IMAGE_TRANSFORM_COLOR_TABLE_HP" value="0x8162" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP" value="0x8163" >
			<ext name="HP_image_transform" />
		</enum>
		<enum name="IGNORE_BORDER_HP" value="0x8150" >
			<ext name="HP_convolution_border_modes" />
		</enum>
		<enum name="CONSTANT_BORDER_HP" value="0x8151" >
			<ext name="HP_convolution_border_modes" />
		</enum>
		<enum name="REPLICATE_BORDER_HP" value="0x8153" >
			<ext name="HP_convolution_border_modes" />
		</enum>
		<enum name="CONVOLUTION_BORDER_COLOR_HP" value="0x8154" >
			<ext name="HP_convolution_border_modes" />
		</enum>
		<enum name="TEXTURE_ENV_BIAS_SGIX" value="0x80BE" >
			<ext name="SGIX_texture_add_env" />
		</enum>
		<enum name="VERTEX_DATA_HINT_PGI" value="0x1A22A" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="VERTEX_CONSISTENT_HINT_PGI" value="0x1A22B" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MATERIAL_SIDE_HINT_PGI" value="0x1A22C" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MAX_VERTEX_HINT_PGI" value="0x1A22D" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="COLOR3_BIT_PGI" value="0x00010000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="COLOR4_BIT_PGI" value="0x00020000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="EDGEFLAG_BIT_PGI" value="0x00040000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="INDEX_BIT_PGI" value="0x00080000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MAT_AMBIENT_BIT_PGI" value="0x00100000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MAT_AMBIENT_AND_DIFFUSE_BIT_PGI" value="0x00200000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MAT_DIFFUSE_BIT_PGI" value="0x00400000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MAT_EMISSION_BIT_PGI" value="0x00800000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MAT_COLOR_INDEXES_BIT_PGI" value="0x01000000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MAT_SHININESS_BIT_PGI" value="0x02000000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="MAT_SPECULAR_BIT_PGI" value="0x04000000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="NORMAL_BIT_PGI" value="0x08000000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="TEXCOORD1_BIT_PGI" value="0x10000000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="TEXCOORD2_BIT_PGI" value="0x20000000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="TEXCOORD3_BIT_PGI" value="0x40000000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="TEXCOORD4_BIT_PGI" value="0x80000000" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="VERTEX23_BIT_PGI" value="0x00000004" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="VERTEX4_BIT_PGI" value="0x00000008" >
			<ext name="PGI_vertex_hints" />
		</enum>
		<enum name="PREFER_DOUBLEBUFFER_HINT_PGI" value="0x1A1F8" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="CONSERVE_MEMORY_HINT_PGI" value="0x1A1FD" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="RECLAIM_MEMORY_HINT_PGI" value="0x1A1FE" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="NATIVE_GRAPHICS_HANDLE_PGI" value="0x1A202" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="NATIVE_GRAPHICS_BEGIN_HINT_PGI" value="0x1A203" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="NATIVE_GRAPHICS_END_HINT_PGI" value="0x1A204" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="ALWAYS_FAST_HINT_PGI" value="0x1A20C" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="ALWAYS_SOFT_HINT_PGI" value="0x1A20D" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="ALLOW_DRAW_OBJ_HINT_PGI" value="0x1A20E" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="ALLOW_DRAW_WIN_HINT_PGI" value="0x1A20F" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="ALLOW_DRAW_FRG_HINT_PGI" value="0x1A210" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="ALLOW_DRAW_MEM_HINT_PGI" value="0x1A211" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="STRICT_DEPTHFUNC_HINT_PGI" value="0x1A216" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="STRICT_LIGHTING_HINT_PGI" value="0x1A217" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="STRICT_SCISSOR_HINT_PGI" value="0x1A218" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="FULL_STIPPLE_HINT_PGI" value="0x1A219" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="CLIP_NEAR_HINT_PGI" value="0x1A220" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="CLIP_FAR_HINT_PGI" value="0x1A221" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="WIDE_LINE_HINT_PGI" value="0x1A222" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="BACK_NORMALS_HINT_PGI" value="0x1A223" >
			<ext name="PGI_misc_hints" />
		</enum>
		<enum name="COLOR_INDEX1_EXT" value="0x80E2" >
			<ext name="EXT_paletted_texture" />
		</enum>
		<enum name="COLOR_INDEX2_EXT" value="0x80E3" >
			<ext name="EXT_paletted_texture" />
		</enum>
		<enum name="COLOR_INDEX4_EXT" value="0x80E4" >
			<ext name="EXT_paletted_texture" />
		</enum>
		<enum name="COLOR_INDEX8_EXT" value="0x80E5" >
			<ext name="EXT_paletted_texture" />
		</enum>
		<enum name="COLOR_INDEX12_EXT" value="0x80E6" >
			<ext name="EXT_paletted_texture" />
		</enum>
		<enum name="COLOR_INDEX16_EXT" value="0x80E7" >
			<ext name="EXT_paletted_texture" />
		</enum>
		<enum name="TEXTURE_INDEX_SIZE_EXT" value="0x80ED" >
			<ext name="EXT_paletted_texture" />
		</enum>
		<enum name="CLIP_VOLUME_CLIPPING_HINT_EXT" value="0x80F0" >
			<ext name="EXT_clip_volume_hint" />
		</enum>
		<enum name="LIST_PRIORITY_SGIX" value="0x8182" >
			<ext name="SGIX_list_priority" />
		</enum>
		<enum name="IR_INSTRUMENT1_SGIX" value="0x817F" >
			<ext name="SGIX_ir_instrument1" />
		</enum>
		<enum name="CALLIGRAPHIC_FRAGMENT_SGIX" value="0x8183" >
			<ext name="SGIX_calligraphic_fragment" />
		</enum>
		<enum name="TEXTURE_LOD_BIAS_S_SGIX" value="0x818E" >
			<ext name="SGIX_texture_lod_bias" />
		</enum>
		<enum name="TEXTURE_LOD_BIAS_T_SGIX" value="0x818F" >
			<ext name="SGIX_texture_lod_bias" />
		</enum>
		<enum name="TEXTURE_LOD_BIAS_R_SGIX" value="0x8190" >
			<ext name="SGIX_texture_lod_bias" />
		</enum>
		<enum name="SHADOW_AMBIENT_SGIX" value="0x80BF" >
			<ext name="SGIX_shadow_ambient" />
		</enum>
		<enum name="INDEX_MATERIAL_EXT" value="0x81B8" >
			<ext name="EXT_index_material" />
		</enum>
		<enum name="INDEX_MATERIAL_PARAMETER_EXT" value="0x81B9" >
			<ext name="EXT_index_material" />
		</enum>
		<enum name="INDEX_MATERIAL_FACE_EXT" value="0x81BA" >
			<ext name="EXT_index_material" />
		</enum>
		<enum name="INDEX_TEST_EXT" value="0x81B5" >
			<ext name="EXT_index_func" />
		</enum>
		<enum name="INDEX_TEST_FUNC_EXT" value="0x81B6" >
			<ext name="EXT_index_func" />
		</enum>
		<enum name="INDEX_TEST_REF_EXT" value="0x81B7" >
			<ext name="EXT_index_func" />
		</enum>
		<enum name="IUI_V2F_EXT" value="0x81AD" >
			<ext name="EXT_index_array_formats" />
		</enum>
		<enum name="IUI_V3F_EXT" value="0x81AE" >
			<ext name="EXT_index_array_formats" />
		</enum>
		<enum name="IUI_N3F_V2F_EXT" value="0x81AF" >
			<ext name="EXT_index_array_formats" />
		</enum>
		<enum name="IUI_N3F_V3F_EXT" value="0x81B0" >
			<ext name="EXT_index_array_formats" />
		</enum>
		<enum name="T2F_IUI_V2F_EXT" value="0x81B1" >
			<ext name="EXT_index_array_formats" />
		</enum>
		<enum name="T2F_IUI_V3F_EXT" value="0x81B2" >
			<ext name="EXT_index_array_formats" />
		</enum>
		<enum name="T2F_IUI_N3F_V2F_EXT" value="0x81B3" >
			<ext name="EXT_index_array_formats" />
		</enum>
		<enum name="T2F_IUI_N3F_V3F_EXT" value="0x81B4" >
			<ext name="EXT_index_array_formats" />
		</enum>
		<enum name="ARRAY_ELEMENT_LOCK_FIRST_EXT" value="0x81A8" >
			<ext name="EXT_compiled_vertex_array" />
		</enum>
		<enum name="ARRAY_ELEMENT_LOCK_COUNT_EXT" value="0x81A9" >
			<ext name="EXT_compiled_vertex_array" />
		</enum>
		<enum name="CULL_VERTEX_EXT" value="0x81AA" >
			<ext name="EXT_cull_vertex" />
		</enum>
		<enum name="CULL_VERTEX_EYE_POSITION_EXT" value="0x81AB" >
			<ext name="EXT_cull_vertex" />
		</enum>
		<enum name="CULL_VERTEX_OBJECT_POSITION_EXT" value="0x81AC" >
			<ext name="EXT_cull_vertex" />
		</enum>
		<enum name="YCRCB_422_SGIX" value="0x81BB" >
			<ext name="SGIX_ycrcb" />
		</enum>
		<enum name="YCRCB_444_SGIX" value="0x81BC" >
			<ext name="SGIX_ycrcb" />
		</enum>
		<enum name="FRAGMENT_LIGHTING_SGIX" value="0x8400" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_COLOR_MATERIAL_SGIX" value="0x8401" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_COLOR_MATERIAL_FACE_SGIX" value="0x8402" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX" value="0x8403" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="MAX_FRAGMENT_LIGHTS_SGIX" value="0x8404" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="MAX_ACTIVE_LIGHTS_SGIX" value="0x8405" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="CURRENT_RASTER_NORMAL_SGIX" value="0x8406" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="LIGHT_ENV_MODE_SGIX" value="0x8407" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX" value="0x8408" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX" value="0x8409" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX" value="0x840A" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX" value="0x840B" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT0_SGIX" value="0x840C" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT1_SGIX" value="0x840D" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT2_SGIX" value="0x840E" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT3_SGIX" value="0x840F" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT4_SGIX" value="0x8410" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT5_SGIX" value="0x8411" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT6_SGIX" value="0x8412" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="FRAGMENT_LIGHT7_SGIX" value="0x8413" >
			<ext name="SGIX_fragment_lighting" />
		</enum>
		<enum name="RASTER_POSITION_UNCLIPPED_IBM" value="0x19262" >
			<ext name="IBM_rasterpos_clip" />
		</enum>
		<enum name="TEXTURE_LIGHTING_MODE_HP" value="0x8167" >
			<ext name="HP_texture_lighting" />
		</enum>
		<enum name="TEXTURE_POST_SPECULAR_HP" value="0x8168" >
			<ext name="HP_texture_lighting" />
		</enum>
		<enum name="TEXTURE_PRE_SPECULAR_HP" value="0x8169" >
			<ext name="HP_texture_lighting" />
		</enum>
		<enum name="MAX_ELEMENTS_VERTICES_EXT" value="0x80E8" >
			<ext name="EXT_draw_range_elements" />
		</enum>
		<enum name="MAX_ELEMENTS_INDICES_EXT" value="0x80E9" >
			<ext name="EXT_draw_range_elements" />
		</enum>
		<enum name="PHONG_WIN" value="0x80EA" >
			<ext name="WIN_phong_shading" />
		</enum>
		<enum name="PHONG_HINT_WIN" value="0x80EB" >
			<ext name="WIN_phong_shading" />
		</enum>
		<enum name="FOG_SPECULAR_TEXTURE_WIN" value="0x80EC" >
			<ext name="WIN_specular_fog" />
		</enum>
		<enum name="FRAGMENT_MATERIAL_EXT" value="0x8349" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="FRAGMENT_NORMAL_EXT" value="0x834A" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="FRAGMENT_COLOR_EXT" value="0x834C" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="ATTENUATION_EXT" value="0x834D" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="SHADOW_ATTENUATION_EXT" value="0x834E" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="TEXTURE_APPLICATION_MODE_EXT" value="0x834F" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="TEXTURE_LIGHT_EXT" value="0x8350" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="TEXTURE_MATERIAL_FACE_EXT" value="0x8351" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="TEXTURE_MATERIAL_PARAMETER_EXT" value="0x8352" >
			<ext name="EXT_light_texture" />
		</enum>
		<enum name="FRAGMENT_DEPTH_EXT" value="0x8452" >
			<ext name="EXT_light_texture" />
			<ext name="EXT_fog_coord" />
		</enum>
		<enum name="ALPHA_MIN_SGIX" value="0x8320" >
			<ext name="SGIX_blend_alpha_minmax" />
		</enum>
		<enum name="ALPHA_MAX_SGIX" value="0x8321" >
			<ext name="SGIX_blend_alpha_minmax" />
		</enum>
		<enum name="PIXEL_TEX_GEN_Q_CEILING_SGIX" value="0x8184" >
			<ext name="SGIX_impact_pixel_texture" />
		</enum>
		<enum name="PIXEL_TEX_GEN_Q_ROUND_SGIX" value="0x8185" >
			<ext name="SGIX_impact_pixel_texture" />
		</enum>
		<enum name="PIXEL_TEX_GEN_Q_FLOOR_SGIX" value="0x8186" >
			<ext name="SGIX_impact_pixel_texture" />
		</enum>
		<enum name="PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX" value="0x8187" >
			<ext name="SGIX_impact_pixel_texture" />
		</enum>
		<enum name="PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX" value="0x8188" >
			<ext name="SGIX_impact_pixel_texture" />
		</enum>
		<enum name="PIXEL_TEX_GEN_ALPHA_LS_SGIX" value="0x8189" >
			<ext name="SGIX_impact_pixel_texture" />
		</enum>
		<enum name="PIXEL_TEX_GEN_ALPHA_MS_SGIX" value="0x818A" >
			<ext name="SGIX_impact_pixel_texture" />
		</enum>
		<enum name="BGR_EXT" value="0x80E0" >
			<ext name="EXT_bgra" />
		</enum>
		<enum name="BGRA_EXT" value="0x80E1" >
			<ext name="EXT_bgra" />
		</enum>
		<enum name="ASYNC_MARKER_SGIX" value="0x8329" >
			<ext name="SGIX_async" />
		</enum>
		<enum name="ASYNC_TEX_IMAGE_SGIX" value="0x835C" >
			<ext name="SGIX_async_pixel" />
		</enum>
		<enum name="ASYNC_DRAW_PIXELS_SGIX" value="0x835D" >
			<ext name="SGIX_async_pixel" />
		</enum>
		<enum name="ASYNC_READ_PIXELS_SGIX" value="0x835E" >
			<ext name="SGIX_async_pixel" />
		</enum>
		<enum name="MAX_ASYNC_TEX_IMAGE_SGIX" value="0x835F" >
			<ext name="SGIX_async_pixel" />
		</enum>
		<enum name="MAX_ASYNC_DRAW_PIXELS_SGIX" value="0x8360" >
			<ext name="SGIX_async_pixel" />
		</enum>
		<enum name="MAX_ASYNC_READ_PIXELS_SGIX" value="0x8361" >
			<ext name="SGIX_async_pixel" />
		</enum>
		<enum name="ASYNC_HISTOGRAM_SGIX" value="0x832C" >
			<ext name="SGIX_async_histogram" />
		</enum>
		<enum name="MAX_ASYNC_HISTOGRAM_SGIX" value="0x832D" >
			<ext name="SGIX_async_histogram" />
		</enum>
		<enum name="PARALLEL_ARRAYS_INTEL" value="0x83F4" >
			<ext name="INTEL_parallel_arrays" />
		</enum>
		<enum name="VERTEX_ARRAY_PARALLEL_POINTERS_INTEL" value="0x83F5" >
			<ext name="INTEL_parallel_arrays" />
		</enum>
		<enum name="NORMAL_ARRAY_PARALLEL_POINTERS_INTEL" value="0x83F6" >
			<ext name="INTEL_parallel_arrays" />
		</enum>
		<enum name="COLOR_ARRAY_PARALLEL_POINTERS_INTEL" value="0x83F7" >
			<ext name="INTEL_parallel_arrays" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL" value="0x83F8" >
			<ext name="INTEL_parallel_arrays" />
		</enum>
		<enum name="OCCLUSION_TEST_HP" value="0x8165" >
			<ext name="HP_occlusion_test" />
		</enum>
		<enum name="OCCLUSION_TEST_RESULT_HP" value="0x8166" >
			<ext name="HP_occlusion_test" />
		</enum>
		<enum name="PIXEL_TRANSFORM_2D_EXT" value="0x8330" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="PIXEL_MAG_FILTER_EXT" value="0x8331" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="PIXEL_MIN_FILTER_EXT" value="0x8332" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="PIXEL_CUBIC_WEIGHT_EXT" value="0x8333" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="CUBIC_EXT" value="0x8334" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="AVERAGE_EXT" value="0x8335" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT" value="0x8336" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT" value="0x8337" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="PIXEL_TRANSFORM_2D_MATRIX_EXT" value="0x8338" >
			<ext name="EXT_pixel_transform" />
		</enum>
		<enum name="SHARED_TEXTURE_PALETTE_EXT" value="0x81FB" >
			<ext name="EXT_shared_texture_palette" />
		</enum>
		<enum name="LIGHT_MODEL_COLOR_CONTROL_EXT" value="0x81F8" >
			<ext name="EXT_separate_specular_color" />
		</enum>
		<enum name="SINGLE_COLOR_EXT" value="0x81F9" >
			<ext name="EXT_separate_specular_color" />
		</enum>
		<enum name="SEPARATE_SPECULAR_COLOR_EXT" value="0x81FA" >
			<ext name="EXT_separate_specular_color" />
		</enum>
		<enum name="COLOR_SUM_EXT" value="0x8458" >
			<ext name="EXT_secondary_color" />
		</enum>
		<enum name="CURRENT_SECONDARY_COLOR_EXT" value="0x8459" >
			<ext name="EXT_secondary_color" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_SIZE_EXT" value="0x845A" >
			<ext name="EXT_secondary_color" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_TYPE_EXT" value="0x845B" >
			<ext name="EXT_secondary_color" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_STRIDE_EXT" value="0x845C" >
			<ext name="EXT_secondary_color" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_POINTER_EXT" value="0x845D" >
			<ext name="EXT_secondary_color" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_EXT" value="0x845E" >
			<ext name="EXT_secondary_color" />
		</enum>
		<enum name="PERTURB_EXT" value="0x85AE" >
			<ext name="EXT_texture_perturb_normal" />
		</enum>
		<enum name="TEXTURE_NORMAL_EXT" value="0x85AF" >
			<ext name="EXT_texture_perturb_normal" />
		</enum>
		<enum name="FOG_COORDINATE_SOURCE_EXT" value="0x8450" >
			<ext name="EXT_fog_coord" />
		</enum>
		<enum name="FOG_COORDINATE_EXT" value="0x8451" >
			<ext name="EXT_fog_coord" />
		</enum>
		<enum name="CURRENT_FOG_COORDINATE_EXT" value="0x8453" >
			<ext name="EXT_fog_coord" />
		</enum>
		<enum name="FOG_COORDINATE_ARRAY_TYPE_EXT" value="0x8454" >
			<ext name="EXT_fog_coord" />
		</enum>
		<enum name="FOG_COORDINATE_ARRAY_STRIDE_EXT" value="0x8455" >
			<ext name="EXT_fog_coord" />
		</enum>
		<enum name="FOG_COORDINATE_ARRAY_POINTER_EXT" value="0x8456" >
			<ext name="EXT_fog_coord" />
		</enum>
		<enum name="FOG_COORDINATE_ARRAY_EXT" value="0x8457" >
			<ext name="EXT_fog_coord" />
		</enum>
		<enum name="SCREEN_COORDINATES_REND" value="0x8490" >
			<ext name="REND_screen_coordinates" />
		</enum>
		<enum name="INVERTED_SCREEN_W_REND" value="0x8491" >
			<ext name="REND_screen_coordinates" />
		</enum>
		<enum name="TANGENT_ARRAY_EXT" value="0x8439" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="BINORMAL_ARRAY_EXT" value="0x843A" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="CURRENT_TANGENT_EXT" value="0x843B" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="CURRENT_BINORMAL_EXT" value="0x843C" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="TANGENT_ARRAY_TYPE_EXT" value="0x843E" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="TANGENT_ARRAY_STRIDE_EXT" value="0x843F" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="BINORMAL_ARRAY_TYPE_EXT" value="0x8440" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="BINORMAL_ARRAY_STRIDE_EXT" value="0x8441" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="TANGENT_ARRAY_POINTER_EXT" value="0x8442" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="BINORMAL_ARRAY_POINTER_EXT" value="0x8443" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="MAP1_TANGENT_EXT" value="0x8444" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="MAP2_TANGENT_EXT" value="0x8445" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="MAP1_BINORMAL_EXT" value="0x8446" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="MAP2_BINORMAL_EXT" value="0x8447" >
			<ext name="EXT_coordinate_frame" />
		</enum>
		<enum name="COMBINE_EXT" value="0x8570" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="COMBINE_RGB_EXT" value="0x8571" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="COMBINE_ALPHA_EXT" value="0x8572" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="RGB_SCALE_EXT" value="0x8573" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="ADD_SIGNED_EXT" value="0x8574" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="INTERPOLATE_EXT" value="0x8575" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="CONSTANT_EXT" value="0x8576" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="PRIMARY_COLOR_EXT" value="0x8577" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="PREVIOUS_EXT" value="0x8578" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="SOURCE0_RGB_EXT" value="0x8580" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="SOURCE1_RGB_EXT" value="0x8581" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="SOURCE2_RGB_EXT" value="0x8582" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="SOURCE0_ALPHA_EXT" value="0x8588" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="SOURCE1_ALPHA_EXT" value="0x8589" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="SOURCE2_ALPHA_EXT" value="0x858A" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="OPERAND0_RGB_EXT" value="0x8590" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="OPERAND1_RGB_EXT" value="0x8591" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="OPERAND2_RGB_EXT" value="0x8592" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="OPERAND0_ALPHA_EXT" value="0x8598" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="OPERAND1_ALPHA_EXT" value="0x8599" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="OPERAND2_ALPHA_EXT" value="0x859A" >
			<ext name="EXT_texture_env_combine" />
		</enum>
		<enum name="LIGHT_MODEL_SPECULAR_VECTOR_APPLE" value="0x85B0" >
			<ext name="APPLE_specular_vector" />
		</enum>
		<enum name="TRANSFORM_HINT_APPLE" value="0x85B1" >
			<ext name="APPLE_transform_hint" />
		</enum>
		<enum name="FOG_SCALE_SGIX" value="0x81FC" >
			<ext name="SGIX_fog_scale" />
		</enum>
		<enum name="FOG_SCALE_VALUE_SGIX" value="0x81FD" >
			<ext name="SGIX_fog_scale" />
		</enum>
		<enum name="UNPACK_CONSTANT_DATA_SUNX" value="0x81D5" >
			<ext name="SUNX_constant_data" />
		</enum>
		<enum name="TEXTURE_CONSTANT_DATA_SUNX" value="0x81D6" >
			<ext name="SUNX_constant_data" />
		</enum>
		<enum name="GLOBAL_ALPHA_SUN" value="0x81D9" >
			<ext name="SUN_global_alpha" />
		</enum>
		<enum name="GLOBAL_ALPHA_FACTOR_SUN" value="0x81DA" >
			<ext name="SUN_global_alpha" />
		</enum>
		<enum name="RESTART_SUN" value="0x0001" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="REPLACE_MIDDLE_SUN" value="0x0002" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="REPLACE_OLDEST_SUN" value="0x0003" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="TRIANGLE_LIST_SUN" value="0x81D7" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="REPLACEMENT_CODE_SUN" value="0x81D8" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="REPLACEMENT_CODE_ARRAY_SUN" value="0x85C0" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="REPLACEMENT_CODE_ARRAY_TYPE_SUN" value="0x85C1" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="REPLACEMENT_CODE_ARRAY_STRIDE_SUN" value="0x85C2" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="REPLACEMENT_CODE_ARRAY_POINTER_SUN" value="0x85C3" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="R1UI_V3F_SUN" value="0x85C4" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="R1UI_C4UB_V3F_SUN" value="0x85C5" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="R1UI_C3F_V3F_SUN" value="0x85C6" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="R1UI_N3F_V3F_SUN" value="0x85C7" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="R1UI_C4F_N3F_V3F_SUN" value="0x85C8" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="R1UI_T2F_V3F_SUN" value="0x85C9" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="R1UI_T2F_N3F_V3F_SUN" value="0x85CA" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="R1UI_T2F_C4F_N3F_V3F_SUN" value="0x85CB" >
			<ext name="SUN_triangle_list" />
		</enum>
		<enum name="BLEND_DST_RGB_EXT" value="0x80C8" >
			<ext name="EXT_blend_func_separate" />
		</enum>
		<enum name="BLEND_SRC_RGB_EXT" value="0x80C9" >
			<ext name="EXT_blend_func_separate" />
		</enum>
		<enum name="BLEND_DST_ALPHA_EXT" value="0x80CA" >
			<ext name="EXT_blend_func_separate" />
		</enum>
		<enum name="BLEND_SRC_ALPHA_EXT" value="0x80CB" >
			<ext name="EXT_blend_func_separate" />
		</enum>
		<enum name="RED_MIN_CLAMP_INGR" value="0x8560" >
			<ext name="INGR_color_clamp" />
		</enum>
		<enum name="GREEN_MIN_CLAMP_INGR" value="0x8561" >
			<ext name="INGR_color_clamp" />
		</enum>
		<enum name="BLUE_MIN_CLAMP_INGR" value="0x8562" >
			<ext name="INGR_color_clamp" />
		</enum>
		<enum name="ALPHA_MIN_CLAMP_INGR" value="0x8563" >
			<ext name="INGR_color_clamp" />
		</enum>
		<enum name="RED_MAX_CLAMP_INGR" value="0x8564" >
			<ext name="INGR_color_clamp" />
		</enum>
		<enum name="GREEN_MAX_CLAMP_INGR" value="0x8565" >
			<ext name="INGR_color_clamp" />
		</enum>
		<enum name="BLUE_MAX_CLAMP_INGR" value="0x8566" >
			<ext name="INGR_color_clamp" />
		</enum>
		<enum name="ALPHA_MAX_CLAMP_INGR" value="0x8567" >
			<ext name="INGR_color_clamp" />
		</enum>
		<enum name="INTERLACE_READ_INGR" value="0x8568" >
			<ext name="INGR_interlace_read" />
		</enum>
		<enum name="INCR_WRAP_EXT" value="0x8507" >
			<ext name="EXT_stencil_wrap" />
		</enum>
		<enum name="DECR_WRAP_EXT" value="0x8508" >
			<ext name="EXT_stencil_wrap" />
		</enum>
		<enum name="422_EXT" value="0x80CC" >
			<ext name="EXT_422_pixels" />
		</enum>
		<enum name="422_REV_EXT" value="0x80CD" >
			<ext name="EXT_422_pixels" />
		</enum>
		<enum name="422_AVERAGE_EXT" value="0x80CE" >
			<ext name="EXT_422_pixels" />
		</enum>
		<enum name="422_REV_AVERAGE_EXT" value="0x80CF" >
			<ext name="EXT_422_pixels" />
		</enum>
		<enum name="NORMAL_MAP_NV" value="0x8511" >
			<ext name="NV_texgen_reflection" />
		</enum>
		<enum name="REFLECTION_MAP_NV" value="0x8512" >
			<ext name="NV_texgen_reflection" />
		</enum>
		<enum name="NORMAL_MAP_EXT" value="0x8511" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="REFLECTION_MAP_EXT" value="0x8512" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_EXT" value="0x8513" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_BINDING_CUBE_MAP_EXT" value="0x8514" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_X_EXT" value="0x8515" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_X_EXT" value="0x8516" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_Y_EXT" value="0x8517" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT" value="0x8518" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_POSITIVE_Z_EXT" value="0x8519" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT" value="0x851A" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="PROXY_TEXTURE_CUBE_MAP_EXT" value="0x851B" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="MAX_CUBE_MAP_TEXTURE_SIZE_EXT" value="0x851C" >
			<ext name="EXT_texture_cube_map" />
		</enum>
		<enum name="WRAP_BORDER_SUN" value="0x81D4" >
			<ext name="SUN_convolution_border_modes" />
		</enum>
		<enum name="MAX_TEXTURE_LOD_BIAS_EXT" value="0x84FD" >
			<ext name="EXT_texture_lod_bias" />
		</enum>
		<enum name="TEXTURE_FILTER_CONTROL_EXT" value="0x8500" >
			<ext name="EXT_texture_lod_bias" />
		</enum>
		<enum name="TEXTURE_LOD_BIAS_EXT" value="0x8501" >
			<ext name="EXT_texture_lod_bias" />
		</enum>
		<enum name="TEXTURE_MAX_ANISOTROPY_EXT" value="0x84FE" >
			<ext name="EXT_texture_filter_anisotropic" />
		</enum>
		<enum name="MAX_TEXTURE_MAX_ANISOTROPY_EXT" value="0x84FF" >
			<ext name="EXT_texture_filter_anisotropic" />
		</enum>
		<enum name="MODELVIEW0_STACK_DEPTH_EXT" ref="MODELVIEW_STACK_DEPTH" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="MODELVIEW1_STACK_DEPTH_EXT" value="0x8502" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="MODELVIEW0_MATRIX_EXT" ref="MODELVIEW_MATRIX" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="MODELVIEW1_MATRIX_EXT" value="0x8506" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="VERTEX_WEIGHTING_EXT" value="0x8509" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="MODELVIEW0_EXT" ref="MODELVIEW" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="MODELVIEW1_EXT" value="0x850A" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="CURRENT_VERTEX_WEIGHT_EXT" value="0x850B" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="VERTEX_WEIGHT_ARRAY_EXT" value="0x850C" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="VERTEX_WEIGHT_ARRAY_SIZE_EXT" value="0x850D" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="VERTEX_WEIGHT_ARRAY_TYPE_EXT" value="0x850E" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="VERTEX_WEIGHT_ARRAY_STRIDE_EXT" value="0x850F" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="VERTEX_WEIGHT_ARRAY_POINTER_EXT" value="0x8510" >
			<ext name="EXT_vertex_weighting" />
		</enum>
		<enum name="MAX_SHININESS_NV" value="0x8504" >
			<ext name="NV_light_max_exponent" />
		</enum>
		<enum name="MAX_SPOT_EXPONENT_NV" value="0x8505" >
			<ext name="NV_light_max_exponent" />
		</enum>
		<enum name="VERTEX_ARRAY_RANGE_NV" value="0x851D" >
			<ext name="NV_vertex_array_range" />
		</enum>
		<enum name="VERTEX_ARRAY_RANGE_LENGTH_NV" value="0x851E" >
			<ext name="NV_vertex_array_range" />
		</enum>
		<enum name="VERTEX_ARRAY_RANGE_VALID_NV" value="0x851F" >
			<ext name="NV_vertex_array_range" />
		</enum>
		<enum name="MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV" value="0x8520" >
			<ext name="NV_vertex_array_range" />
		</enum>
		<enum name="VERTEX_ARRAY_RANGE_POINTER_NV" value="0x8521" >
			<ext name="NV_vertex_array_range" />
		</enum>
		<enum name="REGISTER_COMBINERS_NV" value="0x8522" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="VARIABLE_A_NV" value="0x8523" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="VARIABLE_B_NV" value="0x8524" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="VARIABLE_C_NV" value="0x8525" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="VARIABLE_D_NV" value="0x8526" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="VARIABLE_E_NV" value="0x8527" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="VARIABLE_F_NV" value="0x8528" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="VARIABLE_G_NV" value="0x8529" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="CONSTANT_COLOR0_NV" value="0x852A" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="CONSTANT_COLOR1_NV" value="0x852B" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="PRIMARY_COLOR_NV" value="0x852C" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SECONDARY_COLOR_NV" value="0x852D" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SPARE0_NV" value="0x852E" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SPARE1_NV" value="0x852F" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="DISCARD_NV" value="0x8530" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="E_TIMES_F_NV" value="0x8531" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SPARE0_PLUS_SECONDARY_COLOR_NV" value="0x8532" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="UNSIGNED_IDENTITY_NV" value="0x8536" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="UNSIGNED_INVERT_NV" value="0x8537" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="EXPAND_NORMAL_NV" value="0x8538" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="EXPAND_NEGATE_NV" value="0x8539" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="HALF_BIAS_NORMAL_NV" value="0x853A" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="HALF_BIAS_NEGATE_NV" value="0x853B" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SIGNED_IDENTITY_NV" value="0x853C" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SIGNED_NEGATE_NV" value="0x853D" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SCALE_BY_TWO_NV" value="0x853E" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SCALE_BY_FOUR_NV" value="0x853F" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="SCALE_BY_ONE_HALF_NV" value="0x8540" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="BIAS_BY_NEGATIVE_ONE_HALF_NV" value="0x8541" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_INPUT_NV" value="0x8542" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_MAPPING_NV" value="0x8543" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_COMPONENT_USAGE_NV" value="0x8544" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_AB_DOT_PRODUCT_NV" value="0x8545" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_CD_DOT_PRODUCT_NV" value="0x8546" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_MUX_SUM_NV" value="0x8547" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_SCALE_NV" value="0x8548" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_BIAS_NV" value="0x8549" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_AB_OUTPUT_NV" value="0x854A" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_CD_OUTPUT_NV" value="0x854B" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER_SUM_OUTPUT_NV" value="0x854C" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="MAX_GENERAL_COMBINERS_NV" value="0x854D" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="NUM_GENERAL_COMBINERS_NV" value="0x854E" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COLOR_SUM_CLAMP_NV" value="0x854F" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER0_NV" value="0x8550" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER1_NV" value="0x8551" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER2_NV" value="0x8552" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER3_NV" value="0x8553" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER4_NV" value="0x8554" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER5_NV" value="0x8555" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER6_NV" value="0x8556" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="COMBINER7_NV" value="0x8557" >
			<ext name="NV_register_combiners" />
		</enum>
		<enum name="FOG_DISTANCE_MODE_NV" value="0x855A" >
			<ext name="NV_fog_distance" />
		</enum>
		<enum name="EYE_RADIAL_NV" value="0x855B" >
			<ext name="NV_fog_distance" />
		</enum>
		<enum name="EYE_PLANE_ABSOLUTE_NV" value="0x855C" >
			<ext name="NV_fog_distance" />
		</enum>
		<enum name="EMBOSS_LIGHT_NV" value="0x855D" >
			<ext name="NV_texgen_emboss" />
		</enum>
		<enum name="EMBOSS_CONSTANT_NV" value="0x855E" >
			<ext name="NV_texgen_emboss" />
		</enum>
		<enum name="EMBOSS_MAP_NV" value="0x855F" >
			<ext name="NV_texgen_emboss" />
		</enum>
		<enum name="COMBINE4_NV" value="0x8503" >
			<ext name="NV_texture_env_combine4" />
		</enum>
		<enum name="SOURCE3_RGB_NV" value="0x8583" >
			<ext name="NV_texture_env_combine4" />
		</enum>
		<enum name="SOURCE3_ALPHA_NV" value="0x858B" >
			<ext name="NV_texture_env_combine4" />
		</enum>
		<enum name="OPERAND3_RGB_NV" value="0x8593" >
			<ext name="NV_texture_env_combine4" />
		</enum>
		<enum name="OPERAND3_ALPHA_NV" value="0x859B" >
			<ext name="NV_texture_env_combine4" />
		</enum>
		<enum name="COMPRESSED_RGB_S3TC_DXT1_EXT" value="0x83F0" >
			<ext name="EXT_texture_compression_s3tc" />
		</enum>
		<enum name="COMPRESSED_RGBA_S3TC_DXT1_EXT" value="0x83F1" >
			<ext name="EXT_texture_compression_s3tc" />
		</enum>
		<enum name="COMPRESSED_RGBA_S3TC_DXT3_EXT" value="0x83F2" >
			<ext name="EXT_texture_compression_s3tc" />
		</enum>
		<enum name="COMPRESSED_RGBA_S3TC_DXT5_EXT" value="0x83F3" >
			<ext name="EXT_texture_compression_s3tc" />
		</enum>
		<enum name="CULL_VERTEX_IBM" value="103050" >
			<ext name="IBM_cull_vertex" />
		</enum>
		<enum name="VERTEX_ARRAY_LIST_IBM" value="103070" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="NORMAL_ARRAY_LIST_IBM" value="103071" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="COLOR_ARRAY_LIST_IBM" value="103072" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="INDEX_ARRAY_LIST_IBM" value="103073" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_LIST_IBM" value="103074" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_LIST_IBM" value="103075" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="FOG_COORDINATE_ARRAY_LIST_IBM" value="103076" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_LIST_IBM" value="103077" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="VERTEX_ARRAY_LIST_STRIDE_IBM" value="103080" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="NORMAL_ARRAY_LIST_STRIDE_IBM" value="103081" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="COLOR_ARRAY_LIST_STRIDE_IBM" value="103082" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="INDEX_ARRAY_LIST_STRIDE_IBM" value="103083" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM" value="103084" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_LIST_STRIDE_IBM" value="103085" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM" value="103086" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM" value="103087" >
			<ext name="IBM_vertex_array_lists" />
		</enum>
		<enum name="PACK_SUBSAMPLE_RATE_SGIX" value="0x85A0" >
			<ext name="SGIX_subsample" />
			<ext name="SGIX_ycrcb_subsample" />
		</enum>
		<enum name="UNPACK_SUBSAMPLE_RATE_SGIX" value="0x85A1" >
			<ext name="SGIX_subsample" />
			<ext name="SGIX_ycrcb_subsample" />
		</enum>
		<enum name="PIXEL_SUBSAMPLE_4444_SGIX" value="0x85A2" >
			<ext name="SGIX_subsample" />
			<ext name="SGIX_ycrcb_subsample" />
		</enum>
		<enum name="PIXEL_SUBSAMPLE_2424_SGIX" value="0x85A3" >
			<ext name="SGIX_subsample" />
			<ext name="SGIX_ycrcb_subsample" />
		</enum>
		<enum name="PIXEL_SUBSAMPLE_4242_SGIX" value="0x85A4" >
			<ext name="SGIX_subsample" />
			<ext name="SGIX_ycrcb_subsample" />
		</enum>
		<enum name="YCRCB_SGIX" value="0x8318" >
			<ext name="SGIX_ycrcba" />
		</enum>
		<enum name="YCRCBA_SGIX" value="0x8319" >
			<ext name="SGIX_ycrcba" />
		</enum>
		<enum name="DEPTH_PASS_INSTRUMENT_SGIX" value="0x8310" >
			<ext name="SGI_depth_pass_instrument" />
		</enum>
		<enum name="DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX" value="0x8311" >
			<ext name="SGI_depth_pass_instrument" />
		</enum>
		<enum name="DEPTH_PASS_INSTRUMENT_MAX_SGIX" value="0x8312" >
			<ext name="SGI_depth_pass_instrument" />
		</enum>
		<enum name="COMPRESSED_RGB_FXT1_3DFX" value="0x86B0" >
			<ext name="3DFX_texture_compression_FXT1" />
		</enum>
		<enum name="COMPRESSED_RGBA_FXT1_3DFX" value="0x86B1" >
			<ext name="3DFX_texture_compression_FXT1" />
		</enum>
		<enum name="MULTISAMPLE_3DFX" value="0x86B2" >
			<ext name="3DFX_multisample" />
		</enum>
		<enum name="SAMPLE_BUFFERS_3DFX" value="0x86B3" >
			<ext name="3DFX_multisample" />
		</enum>
		<enum name="SAMPLES_3DFX" value="0x86B4" >
			<ext name="3DFX_multisample" />
		</enum>
		<enum name="MULTISAMPLE_BIT_3DFX" value="0x20000000" >
			<ext name="3DFX_multisample" />
		</enum>
		<enum name="MULTISAMPLE_EXT" value="0x809D" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="SAMPLE_ALPHA_TO_MASK_EXT" value="0x809E" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="SAMPLE_ALPHA_TO_ONE_EXT" value="0x809F" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_EXT" value="0x80A0" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="1PASS_EXT" value="0x80A1" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="2PASS_0_EXT" value="0x80A2" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="2PASS_1_EXT" value="0x80A3" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="4PASS_0_EXT" value="0x80A4" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="4PASS_1_EXT" value="0x80A5" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="4PASS_2_EXT" value="0x80A6" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="4PASS_3_EXT" value="0x80A7" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="SAMPLE_BUFFERS_EXT" value="0x80A8" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="SAMPLES_EXT" value="0x80A9" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_VALUE_EXT" value="0x80AA" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_INVERT_EXT" value="0x80AB" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="SAMPLE_PATTERN_EXT" value="0x80AC" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="MULTISAMPLE_BIT_EXT" value="0x20000000" >
			<ext name="EXT_multisample" />
		</enum>
		<enum name="VERTEX_PRECLIP_SGIX" value="0x83EE" >
			<ext name="SGIX_vertex_preclip" />
		</enum>
		<enum name="VERTEX_PRECLIP_HINT_SGIX" value="0x83EF" >
			<ext name="SGIX_vertex_preclip" />
		</enum>
		<enum name="CONVOLUTION_HINT_SGIX" value="0x8316" >
			<ext name="SGIX_convolution_accuracy" />
		</enum>
		<enum name="PACK_RESAMPLE_SGIX" value="0x842C" >
			<ext name="SGIX_resample" />
		</enum>
		<enum name="UNPACK_RESAMPLE_SGIX" value="0x842D" >
			<ext name="SGIX_resample" />
		</enum>
		<enum name="RESAMPLE_REPLICATE_SGIX" value="0x842E" >
			<ext name="SGIX_resample" />
		</enum>
		<enum name="RESAMPLE_ZERO_FILL_SGIX" value="0x842F" >
			<ext name="SGIX_resample" />
		</enum>
		<enum name="RESAMPLE_DECIMATE_SGIX" value="0x8430" >
			<ext name="SGIX_resample" />
		</enum>
		<enum name="EYE_DISTANCE_TO_POINT_SGIS" value="0x81F0" >
			<ext name="SGIS_point_line_texgen" />
		</enum>
		<enum name="OBJECT_DISTANCE_TO_POINT_SGIS" value="0x81F1" >
			<ext name="SGIS_point_line_texgen" />
		</enum>
		<enum name="EYE_DISTANCE_TO_LINE_SGIS" value="0x81F2" >
			<ext name="SGIS_point_line_texgen" />
		</enum>
		<enum name="OBJECT_DISTANCE_TO_LINE_SGIS" value="0x81F3" >
			<ext name="SGIS_point_line_texgen" />
		</enum>
		<enum name="EYE_POINT_SGIS" value="0x81F4" >
			<ext name="SGIS_point_line_texgen" />
		</enum>
		<enum name="OBJECT_POINT_SGIS" value="0x81F5" >
			<ext name="SGIS_point_line_texgen" />
		</enum>
		<enum name="EYE_LINE_SGIS" value="0x81F6" >
			<ext name="SGIS_point_line_texgen" />
		</enum>
		<enum name="OBJECT_LINE_SGIS" value="0x81F7" >
			<ext name="SGIS_point_line_texgen" />
		</enum>
		<enum name="TEXTURE_COLOR_WRITEMASK_SGIS" value="0x81EF" >
			<ext name="SGIS_texture_color_mask" />
		</enum>
		<enum name="DOT3_RGB_EXT" value="0x8740" >
			<ext name="EXT_texture_env_dot3" />
		</enum>
		<enum name="DOT3_RGBA_EXT" value="0x8741" >
			<ext name="EXT_texture_env_dot3" />
		</enum>
		<enum name="MIRROR_CLAMP_ATI" value="0x8742" >
			<ext name="ATI_texture_mirror_once" />
		</enum>
		<enum name="MIRROR_CLAMP_TO_EDGE_ATI" value="0x8743" >
			<ext name="ATI_texture_mirror_once" />
		</enum>
		<enum name="ALL_COMPLETED_NV" value="0x84F2" >
			<ext name="NV_fence" />
		</enum>
		<enum name="FENCE_STATUS_NV" value="0x84F3" >
			<ext name="NV_fence" />
		</enum>
		<enum name="FENCE_CONDITION_NV" value="0x84F4" >
			<ext name="NV_fence" />
		</enum>
		<enum name="MIRRORED_REPEAT_IBM" value="0x8370" >
			<ext name="IBM_texture_mirrored_repeat" />
		</enum>
		<enum name="EVAL_2D_NV" value="0x86C0" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_TRIANGULAR_2D_NV" value="0x86C1" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="MAP_TESSELLATION_NV" value="0x86C2" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="MAP_ATTRIB_U_ORDER_NV" value="0x86C3" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="MAP_ATTRIB_V_ORDER_NV" value="0x86C4" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_FRACTIONAL_TESSELLATION_NV" value="0x86C5" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB0_NV" value="0x86C6" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB1_NV" value="0x86C7" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB2_NV" value="0x86C8" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB3_NV" value="0x86C9" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB4_NV" value="0x86CA" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB5_NV" value="0x86CB" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB6_NV" value="0x86CC" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB7_NV" value="0x86CD" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB8_NV" value="0x86CE" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB9_NV" value="0x86CF" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB10_NV" value="0x86D0" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB11_NV" value="0x86D1" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB12_NV" value="0x86D2" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB13_NV" value="0x86D3" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB14_NV" value="0x86D4" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="EVAL_VERTEX_ATTRIB15_NV" value="0x86D5" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="MAX_MAP_TESSELLATION_NV" value="0x86D6" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="MAX_RATIONAL_EVAL_ORDER_NV" value="0x86D7" >
			<ext name="NV_evaluators" />
		</enum>
		<enum name="DEPTH_STENCIL_NV" value="0x84F9" >
			<ext name="NV_packed_depth_stencil" />
		</enum>
		<enum name="UNSIGNED_INT_24_8_NV" value="0x84FA" >
			<ext name="NV_packed_depth_stencil" />
		</enum>
		<enum name="PER_STAGE_CONSTANTS_NV" value="0x8535" >
			<ext name="NV_register_combiners2" />
		</enum>
		<enum name="TEXTURE_RECTANGLE_NV" value="0x84F5" >
			<ext name="NV_texture_rectangle" />
		</enum>
		<enum name="TEXTURE_BINDING_RECTANGLE_NV" value="0x84F6" >
			<ext name="NV_texture_rectangle" />
		</enum>
		<enum name="PROXY_TEXTURE_RECTANGLE_NV" value="0x84F7" >
			<ext name="NV_texture_rectangle" />
		</enum>
		<enum name="MAX_RECTANGLE_TEXTURE_SIZE_NV" value="0x84F8" >
			<ext name="NV_texture_rectangle" />
		</enum>
		<enum name="OFFSET_TEXTURE_RECTANGLE_NV" value="0x864C" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="OFFSET_TEXTURE_RECTANGLE_SCALE_NV" value="0x864D" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_TEXTURE_RECTANGLE_NV" value="0x864E" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV" value="0x86D9" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="UNSIGNED_INT_S8_S8_8_8_NV" value="0x86DA" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="UNSIGNED_INT_8_8_S8_S8_REV_NV" value="0x86DB" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DSDT_MAG_INTENSITY_NV" value="0x86DC" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SHADER_CONSISTENT_NV" value="0x86DD" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="TEXTURE_SHADER_NV" value="0x86DE" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SHADER_OPERATION_NV" value="0x86DF" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="CULL_MODES_NV" value="0x86E0" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="OFFSET_TEXTURE_MATRIX_NV" value="0x86E1" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="OFFSET_TEXTURE_SCALE_NV" value="0x86E2" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="OFFSET_TEXTURE_BIAS_NV" value="0x86E3" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="OFFSET_TEXTURE_2D_MATRIX_NV" ref="OFFSET_TEXTURE_MATRIX_NV" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="OFFSET_TEXTURE_2D_SCALE_NV" ref="OFFSET_TEXTURE_SCALE_NV" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="OFFSET_TEXTURE_2D_BIAS_NV" ref="OFFSET_TEXTURE_BIAS_NV" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="PREVIOUS_TEXTURE_INPUT_NV" value="0x86E4" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="CONST_EYE_NV" value="0x86E5" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="PASS_THROUGH_NV" value="0x86E6" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="CULL_FRAGMENT_NV" value="0x86E7" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="OFFSET_TEXTURE_2D_NV" value="0x86E8" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DEPENDENT_AR_TEXTURE_2D_NV" value="0x86E9" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DEPENDENT_GB_TEXTURE_2D_NV" value="0x86EA" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_NV" value="0x86EC" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_DEPTH_REPLACE_NV" value="0x86ED" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_TEXTURE_2D_NV" value="0x86EE" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_TEXTURE_CUBE_MAP_NV" value="0x86F0" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV" value="0x86F1" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_REFLECT_CUBE_MAP_NV" value="0x86F2" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV" value="0x86F3" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="HILO_NV" value="0x86F4" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DSDT_NV" value="0x86F5" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DSDT_MAG_NV" value="0x86F6" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DSDT_MAG_VIB_NV" value="0x86F7" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="HILO16_NV" value="0x86F8" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_HILO_NV" value="0x86F9" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_HILO16_NV" value="0x86FA" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_RGBA_NV" value="0x86FB" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_RGBA8_NV" value="0x86FC" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_RGB_NV" value="0x86FE" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_RGB8_NV" value="0x86FF" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_LUMINANCE_NV" value="0x8701" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_LUMINANCE8_NV" value="0x8702" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_LUMINANCE_ALPHA_NV" value="0x8703" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_LUMINANCE8_ALPHA8_NV" value="0x8704" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_ALPHA_NV" value="0x8705" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_ALPHA8_NV" value="0x8706" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_INTENSITY_NV" value="0x8707" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_INTENSITY8_NV" value="0x8708" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DSDT8_NV" value="0x8709" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DSDT8_MAG8_NV" value="0x870A" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DSDT8_MAG8_INTENSITY8_NV" value="0x870B" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_RGB_UNSIGNED_ALPHA_NV" value="0x870C" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="SIGNED_RGB8_UNSIGNED_ALPHA8_NV" value="0x870D" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="HI_SCALE_NV" value="0x870E" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="LO_SCALE_NV" value="0x870F" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DS_SCALE_NV" value="0x8710" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DT_SCALE_NV" value="0x8711" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="MAGNITUDE_SCALE_NV" value="0x8712" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="VIBRANCE_SCALE_NV" value="0x8713" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="HI_BIAS_NV" value="0x8714" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="LO_BIAS_NV" value="0x8715" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DS_BIAS_NV" value="0x8716" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DT_BIAS_NV" value="0x8717" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="MAGNITUDE_BIAS_NV" value="0x8718" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="VIBRANCE_BIAS_NV" value="0x8719" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="TEXTURE_BORDER_VALUES_NV" value="0x871A" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="TEXTURE_HI_SIZE_NV" value="0x871B" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="TEXTURE_LO_SIZE_NV" value="0x871C" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="TEXTURE_DS_SIZE_NV" value="0x871D" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="TEXTURE_DT_SIZE_NV" value="0x871E" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="TEXTURE_MAG_SIZE_NV" value="0x871F" >
			<ext name="NV_texture_shader" />
		</enum>
		<enum name="DOT_PRODUCT_TEXTURE_3D_NV" value="0x86EF" >
			<ext name="NV_texture_shader2" />
		</enum>
		<enum name="VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV" value="0x8533" >
			<ext name="NV_vertex_array_range2" />
		</enum>
		<enum name="VERTEX_PROGRAM_NV" value="0x8620" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_STATE_PROGRAM_NV" value="0x8621" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="ATTRIB_ARRAY_SIZE_NV" value="0x8623" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="ATTRIB_ARRAY_STRIDE_NV" value="0x8624" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="ATTRIB_ARRAY_TYPE_NV" value="0x8625" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="CURRENT_ATTRIB_NV" value="0x8626" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="PROGRAM_LENGTH_NV" value="0x8627" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="PROGRAM_STRING_NV" value="0x8628" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MODELVIEW_PROJECTION_NV" value="0x8629" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="IDENTITY_NV" value="0x862A" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="INVERSE_NV" value="0x862B" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="TRANSPOSE_NV" value="0x862C" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="INVERSE_TRANSPOSE_NV" value="0x862D" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAX_TRACK_MATRIX_STACK_DEPTH_NV" value="0x862E" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAX_TRACK_MATRICES_NV" value="0x862F" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MATRIX0_NV" value="0x8630" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MATRIX1_NV" value="0x8631" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MATRIX2_NV" value="0x8632" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MATRIX3_NV" value="0x8633" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MATRIX4_NV" value="0x8634" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MATRIX5_NV" value="0x8635" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MATRIX6_NV" value="0x8636" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MATRIX7_NV" value="0x8637" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="CURRENT_MATRIX_STACK_DEPTH_NV" value="0x8640" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="CURRENT_MATRIX_NV" value="0x8641" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_PROGRAM_POINT_SIZE_NV" value="0x8642" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_PROGRAM_TWO_SIDE_NV" value="0x8643" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="PROGRAM_PARAMETER_NV" value="0x8644" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="ATTRIB_ARRAY_POINTER_NV" value="0x8645" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="PROGRAM_TARGET_NV" value="0x8646" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="PROGRAM_RESIDENT_NV" value="0x8647" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="TRACK_MATRIX_NV" value="0x8648" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="TRACK_MATRIX_TRANSFORM_NV" value="0x8649" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_PROGRAM_BINDING_NV" value="0x864A" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="PROGRAM_ERROR_POSITION_NV" value="0x864B" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY0_NV" value="0x8650" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY1_NV" value="0x8651" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY2_NV" value="0x8652" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY3_NV" value="0x8653" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY4_NV" value="0x8654" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY5_NV" value="0x8655" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY6_NV" value="0x8656" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY7_NV" value="0x8657" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY8_NV" value="0x8658" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY9_NV" value="0x8659" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY10_NV" value="0x865A" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY11_NV" value="0x865B" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY12_NV" value="0x865C" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY13_NV" value="0x865D" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY14_NV" value="0x865E" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY15_NV" value="0x865F" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB0_4_NV" value="0x8660" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB1_4_NV" value="0x8661" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB2_4_NV" value="0x8662" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB3_4_NV" value="0x8663" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB4_4_NV" value="0x8664" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB5_4_NV" value="0x8665" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB6_4_NV" value="0x8666" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB7_4_NV" value="0x8667" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB8_4_NV" value="0x8668" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB9_4_NV" value="0x8669" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB10_4_NV" value="0x866A" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB11_4_NV" value="0x866B" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB12_4_NV" value="0x866C" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB13_4_NV" value="0x866D" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB14_4_NV" value="0x866E" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP1_VERTEX_ATTRIB15_4_NV" value="0x866F" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB0_4_NV" value="0x8670" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB1_4_NV" value="0x8671" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB2_4_NV" value="0x8672" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB3_4_NV" value="0x8673" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB4_4_NV" value="0x8674" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB5_4_NV" value="0x8675" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB6_4_NV" value="0x8676" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB7_4_NV" value="0x8677" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB8_4_NV" value="0x8678" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB9_4_NV" value="0x8679" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB10_4_NV" value="0x867A" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB11_4_NV" value="0x867B" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB12_4_NV" value="0x867C" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB13_4_NV" value="0x867D" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB14_4_NV" value="0x867E" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="MAP2_VERTEX_ATTRIB15_4_NV" value="0x867F" >
			<ext name="NV_vertex_program" />
		</enum>
		<enum name="TEXTURE_MAX_CLAMP_S_SGIX" value="0x8369" >
			<ext name="SGIX_texture_coordinate_clamp" />
		</enum>
		<enum name="TEXTURE_MAX_CLAMP_T_SGIX" value="0x836A" >
			<ext name="SGIX_texture_coordinate_clamp" />
		</enum>
		<enum name="TEXTURE_MAX_CLAMP_R_SGIX" value="0x836B" >
			<ext name="SGIX_texture_coordinate_clamp" />
		</enum>
		<enum name="SCALEBIAS_HINT_SGIX" value="0x8322" >
			<ext name="SGIX_scalebias_hint" />
		</enum>
		<enum name="INTERLACE_OML" value="0x8980" >
			<ext name="OML_interlace" />
		</enum>
		<enum name="INTERLACE_READ_OML" value="0x8981" >
			<ext name="OML_interlace" />
		</enum>
		<enum name="FORMAT_SUBSAMPLE_24_24_OML" value="0x8982" >
			<ext name="OML_subsample" />
		</enum>
		<enum name="FORMAT_SUBSAMPLE_244_244_OML" value="0x8983" >
			<ext name="OML_subsample" />
		</enum>
		<enum name="PACK_RESAMPLE_OML" value="0x8984" >
			<ext name="OML_resample" />
		</enum>
		<enum name="UNPACK_RESAMPLE_OML" value="0x8985" >
			<ext name="OML_resample" />
		</enum>
		<enum name="RESAMPLE_REPLICATE_OML" value="0x8986" >
			<ext name="OML_resample" />
		</enum>
		<enum name="RESAMPLE_ZERO_FILL_OML" value="0x8987" >
			<ext name="OML_resample" />
		</enum>
		<enum name="RESAMPLE_AVERAGE_OML" value="0x8988" >
			<ext name="OML_resample" />
		</enum>
		<enum name="RESAMPLE_DECIMATE_OML" value="0x8989" >
			<ext name="OML_resample" />
		</enum>
		<enum name="DEPTH_STENCIL_TO_RGBA_NV" value="0x886E" >
			<ext name="NV_copy_depth_to_color" />
		</enum>
		<enum name="DEPTH_STENCIL_TO_BGRA_NV" value="0x886F" >
			<ext name="NV_copy_depth_to_color" />
		</enum>
		<enum name="BUMP_ROT_MATRIX_ATI" value="0x8775" >
			<ext name="ATI_envmap_bumpmap" />
		</enum>
		<enum name="BUMP_ROT_MATRIX_SIZE_ATI" value="0x8776" >
			<ext name="ATI_envmap_bumpmap" />
		</enum>
		<enum name="BUMP_NUM_TEX_UNITS_ATI" value="0x8777" >
			<ext name="ATI_envmap_bumpmap" />
		</enum>
		<enum name="BUMP_TEX_UNITS_ATI" value="0x8778" >
			<ext name="ATI_envmap_bumpmap" />
		</enum>
		<enum name="DUDV_ATI" value="0x8779" >
			<ext name="ATI_envmap_bumpmap" />
		</enum>
		<enum name="DU8DV8_ATI" value="0x877A" >
			<ext name="ATI_envmap_bumpmap" />
		</enum>
		<enum name="BUMP_ENVMAP_ATI" value="0x877B" >
			<ext name="ATI_envmap_bumpmap" />
		</enum>
		<enum name="BUMP_TARGET_ATI" value="0x877C" >
			<ext name="ATI_envmap_bumpmap" />
		</enum>
		<enum name="FRAGMENT_SHADER_ATI" value="0x8920" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_0_ATI" value="0x8921" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_1_ATI" value="0x8922" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_2_ATI" value="0x8923" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_3_ATI" value="0x8924" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_4_ATI" value="0x8925" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_5_ATI" value="0x8926" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_6_ATI" value="0x8927" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_7_ATI" value="0x8928" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_8_ATI" value="0x8929" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_9_ATI" value="0x892A" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_10_ATI" value="0x892B" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_11_ATI" value="0x892C" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_12_ATI" value="0x892D" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_13_ATI" value="0x892E" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_14_ATI" value="0x892F" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_15_ATI" value="0x8930" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_16_ATI" value="0x8931" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_17_ATI" value="0x8932" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_18_ATI" value="0x8933" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_19_ATI" value="0x8934" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_20_ATI" value="0x8935" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_21_ATI" value="0x8936" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_22_ATI" value="0x8937" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_23_ATI" value="0x8938" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_24_ATI" value="0x8939" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_25_ATI" value="0x893A" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_26_ATI" value="0x893B" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_27_ATI" value="0x893C" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_28_ATI" value="0x893D" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_29_ATI" value="0x893E" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_30_ATI" value="0x893F" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="REG_31_ATI" value="0x8940" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_0_ATI" value="0x8941" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_1_ATI" value="0x8942" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_2_ATI" value="0x8943" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_3_ATI" value="0x8944" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_4_ATI" value="0x8945" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_5_ATI" value="0x8946" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_6_ATI" value="0x8947" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_7_ATI" value="0x8948" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_8_ATI" value="0x8949" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_9_ATI" value="0x894A" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_10_ATI" value="0x894B" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_11_ATI" value="0x894C" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_12_ATI" value="0x894D" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_13_ATI" value="0x894E" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_14_ATI" value="0x894F" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_15_ATI" value="0x8950" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_16_ATI" value="0x8951" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_17_ATI" value="0x8952" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_18_ATI" value="0x8953" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_19_ATI" value="0x8954" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_20_ATI" value="0x8955" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_21_ATI" value="0x8956" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_22_ATI" value="0x8957" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_23_ATI" value="0x8958" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_24_ATI" value="0x8959" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_25_ATI" value="0x895A" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_26_ATI" value="0x895B" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_27_ATI" value="0x895C" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_28_ATI" value="0x895D" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_29_ATI" value="0x895E" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_30_ATI" value="0x895F" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CON_31_ATI" value="0x8960" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="MOV_ATI" value="0x8961" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="ADD_ATI" value="0x8963" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="MUL_ATI" value="0x8964" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SUB_ATI" value="0x8965" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="DOT3_ATI" value="0x8966" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="DOT4_ATI" value="0x8967" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="MAD_ATI" value="0x8968" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="LERP_ATI" value="0x8969" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CND_ATI" value="0x896A" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="CND0_ATI" value="0x896B" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="DOT2_ADD_ATI" value="0x896C" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SECONDARY_INTERPOLATOR_ATI" value="0x896D" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="NUM_FRAGMENT_REGISTERS_ATI" value="0x896E" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="NUM_FRAGMENT_CONSTANTS_ATI" value="0x896F" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="NUM_PASSES_ATI" value="0x8970" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="NUM_INSTRUCTIONS_PER_PASS_ATI" value="0x8971" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="NUM_INSTRUCTIONS_TOTAL_ATI" value="0x8972" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI" value="0x8973" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="NUM_LOOPBACK_COMPONENTS_ATI" value="0x8974" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="COLOR_ALPHA_PAIRING_ATI" value="0x8975" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SWIZZLE_STR_ATI" value="0x8976" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SWIZZLE_STQ_ATI" value="0x8977" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SWIZZLE_STR_DR_ATI" value="0x8978" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SWIZZLE_STQ_DQ_ATI" value="0x8979" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SWIZZLE_STRQ_ATI" value="0x897A" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SWIZZLE_STRQ_DQ_ATI" value="0x897B" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="RED_BIT_ATI" value="0x00000001" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="GREEN_BIT_ATI" value="0x00000002" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="BLUE_BIT_ATI" value="0x00000004" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="2X_BIT_ATI" value="0x00000001" >
			<ext name="ATI_fragment_shader" />
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="4X_BIT_ATI" value="0x00000002" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="8X_BIT_ATI" value="0x00000004" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="HALF_BIT_ATI" value="0x00000008" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="QUARTER_BIT_ATI" value="0x00000010" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="EIGHTH_BIT_ATI" value="0x00000020" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="SATURATE_BIT_ATI" value="0x00000040" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="COMP_BIT_ATI" value="0x00000002" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="NEGATE_BIT_ATI" value="0x00000004" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="BIAS_BIT_ATI" value="0x00000008" >
			<ext name="ATI_fragment_shader" />
		</enum>
		<enum name="PN_TRIANGLES_ATI" value="0x87F0" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI" value="0x87F1" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="PN_TRIANGLES_POINT_MODE_ATI" value="0x87F2" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="PN_TRIANGLES_NORMAL_MODE_ATI" value="0x87F3" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="PN_TRIANGLES_TESSELATION_LEVEL_ATI" value="0x87F4" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="PN_TRIANGLES_POINT_MODE_LINEAR_ATI" value="0x87F5" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="PN_TRIANGLES_POINT_MODE_CUBIC_ATI" value="0x87F6" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI" value="0x87F7" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI" value="0x87F8" >
			<ext name="ATI_pn_triangles" />
		</enum>
		<enum name="STATIC_ATI" value="0x8760" >
			<ext name="ATI_vertex_array_object" />
		</enum>
		<enum name="DYNAMIC_ATI" value="0x8761" >
			<ext name="ATI_vertex_array_object" />
		</enum>
		<enum name="PRESERVE_ATI" value="0x8762" >
			<ext name="ATI_vertex_array_object" />
		</enum>
		<enum name="DISCARD_ATI" value="0x8763" >
			<ext name="ATI_vertex_array_object" />
		</enum>
		<enum name="OBJECT_BUFFER_SIZE_ATI" value="0x8764" >
			<ext name="ATI_vertex_array_object" />
		</enum>
		<enum name="OBJECT_BUFFER_USAGE_ATI" value="0x8765" >
			<ext name="ATI_vertex_array_object" />
		</enum>
		<enum name="ARRAY_OBJECT_BUFFER_ATI" value="0x8766" >
			<ext name="ATI_vertex_array_object" />
		</enum>
		<enum name="ARRAY_OBJECT_OFFSET_ATI" value="0x8767" >
			<ext name="ATI_vertex_array_object" />
		</enum>
		<enum name="VERTEX_SHADER_EXT" value="0x8780" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VERTEX_SHADER_BINDING_EXT" value="0x8781" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_INDEX_EXT" value="0x8782" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_NEGATE_EXT" value="0x8783" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_DOT3_EXT" value="0x8784" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_DOT4_EXT" value="0x8785" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_MUL_EXT" value="0x8786" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_ADD_EXT" value="0x8787" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_MADD_EXT" value="0x8788" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_FRAC_EXT" value="0x8789" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_MAX_EXT" value="0x878A" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_MIN_EXT" value="0x878B" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_SET_GE_EXT" value="0x878C" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_SET_LT_EXT" value="0x878D" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_CLAMP_EXT" value="0x878E" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_FLOOR_EXT" value="0x878F" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_ROUND_EXT" value="0x8790" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_EXP_BASE_2_EXT" value="0x8791" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_LOG_BASE_2_EXT" value="0x8792" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_POWER_EXT" value="0x8793" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_RECIP_EXT" value="0x8794" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_RECIP_SQRT_EXT" value="0x8795" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_SUB_EXT" value="0x8796" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_CROSS_PRODUCT_EXT" value="0x8797" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_MULTIPLY_MATRIX_EXT" value="0x8798" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OP_MOV_EXT" value="0x8799" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_VERTEX_EXT" value="0x879A" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_COLOR0_EXT" value="0x879B" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_COLOR1_EXT" value="0x879C" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD0_EXT" value="0x879D" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD1_EXT" value="0x879E" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD2_EXT" value="0x879F" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD3_EXT" value="0x87A0" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD4_EXT" value="0x87A1" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD5_EXT" value="0x87A2" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD6_EXT" value="0x87A3" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD7_EXT" value="0x87A4" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD8_EXT" value="0x87A5" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD9_EXT" value="0x87A6" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD10_EXT" value="0x87A7" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD11_EXT" value="0x87A8" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD12_EXT" value="0x87A9" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD13_EXT" value="0x87AA" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD14_EXT" value="0x87AB" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD15_EXT" value="0x87AC" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD16_EXT" value="0x87AD" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD17_EXT" value="0x87AE" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD18_EXT" value="0x87AF" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD19_EXT" value="0x87B0" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD20_EXT" value="0x87B1" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD21_EXT" value="0x87B2" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD22_EXT" value="0x87B3" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD23_EXT" value="0x87B4" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD24_EXT" value="0x87B5" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD25_EXT" value="0x87B6" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD26_EXT" value="0x87B7" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD27_EXT" value="0x87B8" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD28_EXT" value="0x87B9" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD29_EXT" value="0x87BA" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD30_EXT" value="0x87BB" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_TEXTURE_COORD31_EXT" value="0x87BC" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="OUTPUT_FOG_EXT" value="0x87BD" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="SCALAR_EXT" value="0x87BE" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VECTOR_EXT" value="0x87BF" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MATRIX_EXT" value="0x87C0" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VARIANT_EXT" value="0x87C1" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="INVARIANT_EXT" value="0x87C2" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="LOCAL_CONSTANT_EXT" value="0x87C3" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="LOCAL_EXT" value="0x87C4" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_VERTEX_SHADER_INSTRUCTIONS_EXT" value="0x87C5" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_VERTEX_SHADER_VARIANTS_EXT" value="0x87C6" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_VERTEX_SHADER_INVARIANTS_EXT" value="0x87C7" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT" value="0x87C8" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_VERTEX_SHADER_LOCALS_EXT" value="0x87C9" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT" value="0x87CA" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT" value="0x87CB" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT" value="0x87CC" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT" value="0x87CD" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT" value="0x87CE" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VERTEX_SHADER_INSTRUCTIONS_EXT" value="0x87CF" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VERTEX_SHADER_VARIANTS_EXT" value="0x87D0" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VERTEX_SHADER_INVARIANTS_EXT" value="0x87D1" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VERTEX_SHADER_LOCAL_CONSTANTS_EXT" value="0x87D2" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VERTEX_SHADER_LOCALS_EXT" value="0x87D3" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VERTEX_SHADER_OPTIMIZED_EXT" value="0x87D4" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="X_EXT" value="0x87D5" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="Y_EXT" value="0x87D6" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="Z_EXT" value="0x87D7" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="W_EXT" value="0x87D8" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="NEGATIVE_X_EXT" value="0x87D9" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="NEGATIVE_Y_EXT" value="0x87DA" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="NEGATIVE_Z_EXT" value="0x87DB" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="NEGATIVE_W_EXT" value="0x87DC" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="ZERO_EXT" value="0x87DD" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="ONE_EXT" value="0x87DE" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="NEGATIVE_ONE_EXT" value="0x87DF" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="NORMALIZED_RANGE_EXT" value="0x87E0" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="FULL_RANGE_EXT" value="0x87E1" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="CURRENT_VERTEX_EXT" value="0x87E2" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MVP_MATRIX_EXT" value="0x87E3" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VARIANT_VALUE_EXT" value="0x87E4" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VARIANT_DATATYPE_EXT" value="0x87E5" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VARIANT_ARRAY_STRIDE_EXT" value="0x87E6" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VARIANT_ARRAY_TYPE_EXT" value="0x87E7" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VARIANT_ARRAY_EXT" value="0x87E8" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="VARIANT_ARRAY_POINTER_EXT" value="0x87E9" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="INVARIANT_VALUE_EXT" value="0x87EA" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="INVARIANT_DATATYPE_EXT" value="0x87EB" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="LOCAL_CONSTANT_VALUE_EXT" value="0x87EC" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="LOCAL_CONSTANT_DATATYPE_EXT" value="0x87ED" >
			<ext name="EXT_vertex_shader" />
		</enum>
		<enum name="MAX_VERTEX_STREAMS_ATI" value="0x876B" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_STREAM0_ATI" value="0x876C" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_STREAM1_ATI" value="0x876D" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_STREAM2_ATI" value="0x876E" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_STREAM3_ATI" value="0x876F" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_STREAM4_ATI" value="0x8770" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_STREAM5_ATI" value="0x8771" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_STREAM6_ATI" value="0x8772" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_STREAM7_ATI" value="0x8773" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="VERTEX_SOURCE_ATI" value="0x8774" >
			<ext name="ATI_vertex_streams" />
		</enum>
		<enum name="ELEMENT_ARRAY_ATI" value="0x8768" >
			<ext name="ATI_element_array" />
		</enum>
		<enum name="ELEMENT_ARRAY_TYPE_ATI" value="0x8769" >
			<ext name="ATI_element_array" />
		</enum>
		<enum name="ELEMENT_ARRAY_POINTER_ATI" value="0x876A" >
			<ext name="ATI_element_array" />
		</enum>
		<enum name="QUAD_MESH_SUN" value="0x8614" >
			<ext name="SUN_mesh_array" />
		</enum>
		<enum name="TRIANGLE_MESH_SUN" value="0x8615" >
			<ext name="SUN_mesh_array" />
		</enum>
		<enum name="SLICE_ACCUM_SUN" value="0x85CC" >
			<ext name="SUN_slice_accum" />
		</enum>
		<enum name="MULTISAMPLE_FILTER_HINT_NV" value="0x8534" >
			<ext name="NV_multisample_filter_hint" />
		</enum>
		<enum name="DEPTH_CLAMP_NV" value="0x864F" >
			<ext name="NV_depth_clamp" />
		</enum>
		<enum name="PIXEL_COUNTER_BITS_NV" value="0x8864" >
			<ext name="NV_occlusion_query" />
		</enum>
		<enum name="CURRENT_OCCLUSION_QUERY_ID_NV" value="0x8865" >
			<ext name="NV_occlusion_query" />
		</enum>
		<enum name="PIXEL_COUNT_NV" value="0x8866" >
			<ext name="NV_occlusion_query" />
		</enum>
		<enum name="PIXEL_COUNT_AVAILABLE_NV" value="0x8867" >
			<ext name="NV_occlusion_query" />
		</enum>
		<enum name="POINT_SPRITE_NV" value="0x8861" >
			<ext name="NV_point_sprite" />
		</enum>
		<enum name="COORD_REPLACE_NV" value="0x8862" >
			<ext name="NV_point_sprite" />
		</enum>
		<enum name="POINT_SPRITE_R_MODE_NV" value="0x8863" >
			<ext name="NV_point_sprite" />
		</enum>
		<enum name="OFFSET_PROJECTIVE_TEXTURE_2D_NV" value="0x8850" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV" value="0x8851" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV" value="0x8852" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV" value="0x8853" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="OFFSET_HILO_TEXTURE_2D_NV" value="0x8854" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="OFFSET_HILO_TEXTURE_RECTANGLE_NV" value="0x8855" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV" value="0x8856" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV" value="0x8857" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="DEPENDENT_HILO_TEXTURE_2D_NV" value="0x8858" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="DEPENDENT_RGB_TEXTURE_3D_NV" value="0x8859" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV" value="0x885A" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="DOT_PRODUCT_PASS_THROUGH_NV" value="0x885B" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="DOT_PRODUCT_TEXTURE_1D_NV" value="0x885C" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV" value="0x885D" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="HILO8_NV" value="0x885E" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="SIGNED_HILO8_NV" value="0x885F" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="FORCE_BLUE_TO_ONE_NV" value="0x8860" >
			<ext name="NV_texture_shader3" />
		</enum>
		<enum name="STENCIL_TEST_TWO_SIDE_EXT" value="0x8910" >
			<ext name="EXT_stencil_two_side" />
		</enum>
		<enum name="ACTIVE_STENCIL_FACE_EXT" value="0x8911" >
			<ext name="EXT_stencil_two_side" />
		</enum>
		<enum name="TEXT_FRAGMENT_SHADER_ATI" value="0x8200" >
			<ext name="ATI_text_fragment_shader" />
		</enum>
		<enum name="UNPACK_CLIENT_STORAGE_APPLE" value="0x85B2" >
			<ext name="APPLE_client_storage" />
		</enum>
		<enum name="ELEMENT_ARRAY_APPLE" value="0x8A0C" >
			<ext name="APPLE_element_array" />
		</enum>
		<enum name="ELEMENT_ARRAY_TYPE_APPLE" value="0x8A0D" >
			<ext name="APPLE_element_array" />
		</enum>
		<enum name="ELEMENT_ARRAY_POINTER_APPLE" value="0x8A0E" >
			<ext name="APPLE_element_array" />
		</enum>
		<enum name="DRAW_PIXELS_APPLE" value="0x8A0A" >
			<ext name="APPLE_fence" />
		</enum>
		<enum name="FENCE_APPLE" value="0x8A0B" >
			<ext name="APPLE_fence" />
		</enum>
		<enum name="VERTEX_ARRAY_BINDING_APPLE" value="0x85B5" >
			<ext name="APPLE_vertex_array_object" />
		</enum>
		<enum name="VERTEX_ARRAY_RANGE_APPLE" value="0x851D" >
			<ext name="APPLE_vertex_array_range" />
		</enum>
		<enum name="VERTEX_ARRAY_RANGE_LENGTH_APPLE" value="0x851E" >
			<ext name="APPLE_vertex_array_range" />
		</enum>
		<enum name="VERTEX_ARRAY_STORAGE_HINT_APPLE" value="0x851F" >
			<ext name="APPLE_vertex_array_range" />
		</enum>
		<enum name="VERTEX_ARRAY_RANGE_POINTER_APPLE" value="0x8521" >
			<ext name="APPLE_vertex_array_range" />
		</enum>
		<enum name="STORAGE_CLIENT_APPLE" value="0x85B4" >
			<ext name="APPLE_vertex_array_range" />
		</enum>
		<enum name="STORAGE_CACHED_APPLE" value="0x85BE" >
			<ext name="APPLE_vertex_array_range" />
			<ext name="APPLE_texture_range" />
		</enum>
		<enum name="STORAGE_SHARED_APPLE" value="0x85BF" >
			<ext name="APPLE_vertex_array_range" />
			<ext name="APPLE_texture_range" />
		</enum>
		<enum name="YCBCR_422_APPLE" value="0x85B9" >
			<ext name="APPLE_ycbcr_422" />
		</enum>
		<enum name="UNSIGNED_SHORT_8_8_APPLE" value="0x85BA" >
			<ext name="APPLE_ycbcr_422" />
			<ext name="APPLE_rgb_422" />
		</enum>
		<enum name="UNSIGNED_SHORT_8_8_REV_APPLE" value="0x85BB" >
			<ext name="APPLE_ycbcr_422" />
			<ext name="APPLE_rgb_422" />
		</enum>
		<enum name="RGB_S3TC" value="0x83A0" >
			<ext name="S3_s3tc" />
		</enum>
		<enum name="RGB4_S3TC" value="0x83A1" >
			<ext name="S3_s3tc" />
		</enum>
		<enum name="RGBA_S3TC" value="0x83A2" >
			<ext name="S3_s3tc" />
		</enum>
		<enum name="RGBA4_S3TC" value="0x83A3" >
			<ext name="S3_s3tc" />
		</enum>
		<enum name="RGBA_DXT5_S3TC" value="0x83A4" >
			<ext name="S3_s3tc" />
		</enum>
		<enum name="RGBA4_DXT5_S3TC" value="0x83A5" >
			<ext name="S3_s3tc" />
		</enum>
		<enum name="MAX_DRAW_BUFFERS_ATI" value="0x8824" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER0_ATI" value="0x8825" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER1_ATI" value="0x8826" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER2_ATI" value="0x8827" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER3_ATI" value="0x8828" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER4_ATI" value="0x8829" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER5_ATI" value="0x882A" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER6_ATI" value="0x882B" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER7_ATI" value="0x882C" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER8_ATI" value="0x882D" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER9_ATI" value="0x882E" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER10_ATI" value="0x882F" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER11_ATI" value="0x8830" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER12_ATI" value="0x8831" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER13_ATI" value="0x8832" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER14_ATI" value="0x8833" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="DRAW_BUFFER15_ATI" value="0x8834" >
			<ext name="ATI_draw_buffers" />
		</enum>
		<enum name="RGBA_FLOAT_MODE_ATI" value="0x8820" >
			<ext name="ATI_pixel_format_float" />
		</enum>
		<enum name="COLOR_CLEAR_UNCLAMPED_VALUE_ATI" value="0x8835" >
			<ext name="ATI_pixel_format_float" />
		</enum>
		<enum name="MODULATE_ADD_ATI" value="0x8744" >
			<ext name="ATI_texture_env_combine3" />
		</enum>
		<enum name="MODULATE_SIGNED_ADD_ATI" value="0x8745" >
			<ext name="ATI_texture_env_combine3" />
		</enum>
		<enum name="MODULATE_SUBTRACT_ATI" value="0x8746" >
			<ext name="ATI_texture_env_combine3" />
		</enum>
		<enum name="RGBA_FLOAT32_ATI" value="0x8814" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="RGB_FLOAT32_ATI" value="0x8815" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="ALPHA_FLOAT32_ATI" value="0x8816" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="INTENSITY_FLOAT32_ATI" value="0x8817" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="LUMINANCE_FLOAT32_ATI" value="0x8818" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="LUMINANCE_ALPHA_FLOAT32_ATI" value="0x8819" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="RGBA_FLOAT16_ATI" value="0x881A" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="RGB_FLOAT16_ATI" value="0x881B" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="ALPHA_FLOAT16_ATI" value="0x881C" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="INTENSITY_FLOAT16_ATI" value="0x881D" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="LUMINANCE_FLOAT16_ATI" value="0x881E" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="LUMINANCE_ALPHA_FLOAT16_ATI" value="0x881F" >
			<ext name="ATI_texture_float" />
		</enum>
		<enum name="FLOAT_R_NV" value="0x8880" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RG_NV" value="0x8881" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RGB_NV" value="0x8882" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RGBA_NV" value="0x8883" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_R16_NV" value="0x8884" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_R32_NV" value="0x8885" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RG16_NV" value="0x8886" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RG32_NV" value="0x8887" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RGB16_NV" value="0x8888" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RGB32_NV" value="0x8889" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RGBA16_NV" value="0x888A" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RGBA32_NV" value="0x888B" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="TEXTURE_FLOAT_COMPONENTS_NV" value="0x888C" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_CLEAR_COLOR_VALUE_NV" value="0x888D" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="FLOAT_RGBA_MODE_NV" value="0x888E" >
			<ext name="NV_float_buffer" />
		</enum>
		<enum name="MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV" value="0x8868" >
			<ext name="NV_fragment_program" />
		</enum>
		<enum name="FRAGMENT_PROGRAM_NV" value="0x8870" >
			<ext name="NV_fragment_program" />
		</enum>
		<enum name="MAX_TEXTURE_COORDS_NV" value="0x8871" >
			<ext name="NV_fragment_program" />
		</enum>
		<enum name="MAX_TEXTURE_IMAGE_UNITS_NV" value="0x8872" >
			<ext name="NV_fragment_program" />
		</enum>
		<enum name="FRAGMENT_PROGRAM_BINDING_NV" value="0x8873" >
			<ext name="NV_fragment_program" />
		</enum>
		<enum name="PROGRAM_ERROR_STRING_NV" value="0x8874" >
			<ext name="NV_fragment_program" />
		</enum>
		<enum name="HALF_FLOAT_NV" value="0x140B" >
			<ext name="NV_half_float" />
		</enum>
		<enum name="WRITE_PIXEL_DATA_RANGE_NV" value="0x8878" >
			<ext name="NV_pixel_data_range" />
		</enum>
		<enum name="READ_PIXEL_DATA_RANGE_NV" value="0x8879" >
			<ext name="NV_pixel_data_range" />
		</enum>
		<enum name="WRITE_PIXEL_DATA_RANGE_LENGTH_NV" value="0x887A" >
			<ext name="NV_pixel_data_range" />
		</enum>
		<enum name="READ_PIXEL_DATA_RANGE_LENGTH_NV" value="0x887B" >
			<ext name="NV_pixel_data_range" />
		</enum>
		<enum name="WRITE_PIXEL_DATA_RANGE_POINTER_NV" value="0x887C" >
			<ext name="NV_pixel_data_range" />
		</enum>
		<enum name="READ_PIXEL_DATA_RANGE_POINTER_NV" value="0x887D" >
			<ext name="NV_pixel_data_range" />
		</enum>
		<enum name="PRIMITIVE_RESTART_NV" value="0x8558" >
			<ext name="NV_primitive_restart" />
		</enum>
		<enum name="PRIMITIVE_RESTART_INDEX_NV" value="0x8559" >
			<ext name="NV_primitive_restart" />
		</enum>
		<enum name="TEXTURE_UNSIGNED_REMAP_MODE_NV" value="0x888F" >
			<ext name="NV_texture_expand_normal" />
		</enum>
		<enum name="STENCIL_BACK_FUNC_ATI" value="0x8800" >
			<ext name="ATI_separate_stencil" />
		</enum>
		<enum name="STENCIL_BACK_FAIL_ATI" value="0x8801" >
			<ext name="ATI_separate_stencil" />
		</enum>
		<enum name="STENCIL_BACK_PASS_DEPTH_FAIL_ATI" value="0x8802" >
			<ext name="ATI_separate_stencil" />
		</enum>
		<enum name="STENCIL_BACK_PASS_DEPTH_PASS_ATI" value="0x8803" >
			<ext name="ATI_separate_stencil" />
		</enum>
		<enum name="IMPLEMENTATION_COLOR_READ_TYPE_OES" value="0x8B9A" >
			<ext name="OES_read_format" />
		</enum>
		<enum name="IMPLEMENTATION_COLOR_READ_FORMAT_OES" value="0x8B9B" >
			<ext name="OES_read_format" />
		</enum>
		<enum name="DEPTH_BOUNDS_TEST_EXT" value="0x8890" >
			<ext name="EXT_depth_bounds_test" />
		</enum>
		<enum name="DEPTH_BOUNDS_EXT" value="0x8891" >
			<ext name="EXT_depth_bounds_test" />
		</enum>
		<enum name="MIRROR_CLAMP_EXT" value="0x8742" >
			<ext name="EXT_texture_mirror_clamp" />
		</enum>
		<enum name="MIRROR_CLAMP_TO_EDGE_EXT" value="0x8743" >
			<ext name="EXT_texture_mirror_clamp" />
		</enum>
		<enum name="MIRROR_CLAMP_TO_BORDER_EXT" value="0x8912" >
			<ext name="EXT_texture_mirror_clamp" />
		</enum>
		<enum name="BLEND_EQUATION_RGB_EXT" value="0x8009" >
			<ext name="EXT_blend_equation_separate" />
		</enum>
		<enum name="BLEND_EQUATION_ALPHA_EXT" value="0x883D" >
			<ext name="EXT_blend_equation_separate" />
		</enum>
		<enum name="PACK_INVERT_MESA" value="0x8758" >
			<ext name="MESA_pack_invert" />
		</enum>
		<enum name="UNSIGNED_SHORT_8_8_MESA" value="0x85BA" >
			<ext name="MESA_ycbcr_texture" />
		</enum>
		<enum name="UNSIGNED_SHORT_8_8_REV_MESA" value="0x85BB" >
			<ext name="MESA_ycbcr_texture" />
		</enum>
		<enum name="YCBCR_MESA" value="0x8757" >
			<ext name="MESA_ycbcr_texture" />
		</enum>
		<enum name="PIXEL_PACK_BUFFER_EXT" value="0x88EB" >
			<ext name="EXT_pixel_buffer_object" />
		</enum>
		<enum name="PIXEL_UNPACK_BUFFER_EXT" value="0x88EC" >
			<ext name="EXT_pixel_buffer_object" />
		</enum>
		<enum name="PIXEL_PACK_BUFFER_BINDING_EXT" value="0x88ED" >
			<ext name="EXT_pixel_buffer_object" />
		</enum>
		<enum name="PIXEL_UNPACK_BUFFER_BINDING_EXT" value="0x88EF" >
			<ext name="EXT_pixel_buffer_object" />
		</enum>
		<enum name="MAX_PROGRAM_EXEC_INSTRUCTIONS_NV" value="0x88F4" >
			<ext name="NV_fragment_program2" />
			<ext name="NV_vertex_program2_option" />
		</enum>
		<enum name="MAX_PROGRAM_CALL_DEPTH_NV" value="0x88F5" >
			<ext name="NV_fragment_program2" />
			<ext name="NV_vertex_program2_option" />
		</enum>
		<enum name="MAX_PROGRAM_IF_DEPTH_NV" value="0x88F6" >
			<ext name="NV_fragment_program2" />
		</enum>
		<enum name="MAX_PROGRAM_LOOP_DEPTH_NV" value="0x88F7" >
			<ext name="NV_fragment_program2" />
		</enum>
		<enum name="MAX_PROGRAM_LOOP_COUNT_NV" value="0x88F8" >
			<ext name="NV_fragment_program2" />
		</enum>
		<enum name="INVALID_FRAMEBUFFER_OPERATION_EXT" value="0x0506" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="MAX_RENDERBUFFER_SIZE_EXT" value="0x84E8" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_BINDING_EXT" value="0x8CA6" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_BINDING_EXT" value="0x8CA7" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT" value="0x8CD0" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT" value="0x8CD1" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT" value="0x8CD2" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT" value="0x8CD3" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT" value="0x8CD4" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_COMPLETE_EXT" value="0x8CD5" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT" value="0x8CD6" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT" value="0x8CD7" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT" value="0x8CD9" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_FORMATS_EXT" value="0x8CDA" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT" value="0x8CDB" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT" value="0x8CDC" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_UNSUPPORTED_EXT" value="0x8CDD" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="MAX_COLOR_ATTACHMENTS_EXT" value="0x8CDF" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT0_EXT" value="0x8CE0" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT1_EXT" value="0x8CE1" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT2_EXT" value="0x8CE2" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT3_EXT" value="0x8CE3" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT4_EXT" value="0x8CE4" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT5_EXT" value="0x8CE5" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT6_EXT" value="0x8CE6" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT7_EXT" value="0x8CE7" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT8_EXT" value="0x8CE8" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT9_EXT" value="0x8CE9" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT10_EXT" value="0x8CEA" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT11_EXT" value="0x8CEB" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT12_EXT" value="0x8CEC" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT13_EXT" value="0x8CED" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT14_EXT" value="0x8CEE" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="COLOR_ATTACHMENT15_EXT" value="0x8CEF" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="DEPTH_ATTACHMENT_EXT" value="0x8D00" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="STENCIL_ATTACHMENT_EXT" value="0x8D20" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="FRAMEBUFFER_EXT" value="0x8D40" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_EXT" value="0x8D41" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_WIDTH_EXT" value="0x8D42" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_HEIGHT_EXT" value="0x8D43" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_INTERNAL_FORMAT_EXT" value="0x8D44" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="STENCIL_INDEX1_EXT" value="0x8D46" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="STENCIL_INDEX4_EXT" value="0x8D47" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="STENCIL_INDEX8_EXT" value="0x8D48" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="STENCIL_INDEX16_EXT" value="0x8D49" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_RED_SIZE_EXT" value="0x8D50" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_GREEN_SIZE_EXT" value="0x8D51" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_BLUE_SIZE_EXT" value="0x8D52" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_ALPHA_SIZE_EXT" value="0x8D53" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_DEPTH_SIZE_EXT" value="0x8D54" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="RENDERBUFFER_STENCIL_SIZE_EXT" value="0x8D55" >
			<ext name="EXT_framebuffer_object" />
		</enum>
		<enum name="DEPTH_STENCIL_EXT" value="0x84F9" >
			<ext name="EXT_packed_depth_stencil" />
		</enum>
		<enum name="UNSIGNED_INT_24_8_EXT" value="0x84FA" >
			<ext name="EXT_packed_depth_stencil" />
		</enum>
		<enum name="DEPTH24_STENCIL8_EXT" value="0x88F0" >
			<ext name="EXT_packed_depth_stencil" />
		</enum>
		<enum name="TEXTURE_STENCIL_SIZE_EXT" value="0x88F1" >
			<ext name="EXT_packed_depth_stencil" />
		</enum>
		<enum name="STENCIL_TAG_BITS_EXT" value="0x88F2" >
			<ext name="EXT_stencil_clear_tag" />
		</enum>
		<enum name="STENCIL_CLEAR_TAG_VALUE_EXT" value="0x88F3" >
			<ext name="EXT_stencil_clear_tag" />
		</enum>
		<enum name="SRGB_EXT" value="0x8C40" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="SRGB8_EXT" value="0x8C41" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="SRGB_ALPHA_EXT" value="0x8C42" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="SRGB8_ALPHA8_EXT" value="0x8C43" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="SLUMINANCE_ALPHA_EXT" value="0x8C44" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="SLUMINANCE8_ALPHA8_EXT" value="0x8C45" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="SLUMINANCE_EXT" value="0x8C46" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="SLUMINANCE8_EXT" value="0x8C47" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="COMPRESSED_SRGB_EXT" value="0x8C48" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="COMPRESSED_SRGB_ALPHA_EXT" value="0x8C49" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="COMPRESSED_SLUMINANCE_EXT" value="0x8C4A" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="COMPRESSED_SLUMINANCE_ALPHA_EXT" value="0x8C4B" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="COMPRESSED_SRGB_S3TC_DXT1_EXT" value="0x8C4C" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT" value="0x8C4D" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT" value="0x8C4E" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT" value="0x8C4F" >
			<ext name="EXT_texture_sRGB" />
		</enum>
		<enum name="READ_FRAMEBUFFER_EXT" value="0x8CA8" >
			<ext name="EXT_framebuffer_blit" />
		</enum>
		<enum name="DRAW_FRAMEBUFFER_EXT" value="0x8CA9" >
			<ext name="EXT_framebuffer_blit" />
		</enum>
		<enum name="DRAW_FRAMEBUFFER_BINDING_EXT" ref="FRAMEBUFFER_BINDING_EXT" >
			<ext name="EXT_framebuffer_blit" />
		</enum>
		<enum name="READ_FRAMEBUFFER_BINDING_EXT" value="0x8CAA" >
			<ext name="EXT_framebuffer_blit" />
		</enum>
		<enum name="RENDERBUFFER_SAMPLES_EXT" value="0x8CAB" >
			<ext name="EXT_framebuffer_multisample" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT" value="0x8D56" >
			<ext name="EXT_framebuffer_multisample" />
		</enum>
		<enum name="MAX_SAMPLES_EXT" value="0x8D57" >
			<ext name="EXT_framebuffer_multisample" />
		</enum>
		<enum name="TEXTURE_1D_STACK_MESAX" value="0x8759" >
			<ext name="MESAX_texture_stack" />
		</enum>
		<enum name="TEXTURE_2D_STACK_MESAX" value="0x875A" >
			<ext name="MESAX_texture_stack" />
		</enum>
		<enum name="PROXY_TEXTURE_1D_STACK_MESAX" value="0x875B" >
			<ext name="MESAX_texture_stack" />
		</enum>
		<enum name="PROXY_TEXTURE_2D_STACK_MESAX" value="0x875C" >
			<ext name="MESAX_texture_stack" />
		</enum>
		<enum name="TEXTURE_1D_STACK_BINDING_MESAX" value="0x875D" >
			<ext name="MESAX_texture_stack" />
		</enum>
		<enum name="TEXTURE_2D_STACK_BINDING_MESAX" value="0x875E" >
			<ext name="MESAX_texture_stack" />
		</enum>
		<enum name="TIME_ELAPSED_EXT" value="0x88BF" >
			<ext name="EXT_timer_query" />
		</enum>
		<enum name="BUFFER_SERIALIZED_MODIFY_APPLE" value="0x8A12" >
			<ext name="APPLE_flush_buffer_range" />
		</enum>
		<enum name="BUFFER_FLUSHING_UNMAP_APPLE" value="0x8A13" >
			<ext name="APPLE_flush_buffer_range" />
		</enum>
		<enum name="MIN_PROGRAM_TEXEL_OFFSET_NV" value="0x8904" >
			<ext name="NV_gpu_program4" />
		</enum>
		<enum name="MAX_PROGRAM_TEXEL_OFFSET_NV" value="0x8905" >
			<ext name="NV_gpu_program4" />
		</enum>
		<enum name="PROGRAM_ATTRIB_COMPONENTS_NV" value="0x8906" >
			<ext name="NV_gpu_program4" />
		</enum>
		<enum name="PROGRAM_RESULT_COMPONENTS_NV" value="0x8907" >
			<ext name="NV_gpu_program4" />
		</enum>
		<enum name="MAX_PROGRAM_ATTRIB_COMPONENTS_NV" value="0x8908" >
			<ext name="NV_gpu_program4" />
		</enum>
		<enum name="MAX_PROGRAM_RESULT_COMPONENTS_NV" value="0x8909" >
			<ext name="NV_gpu_program4" />
		</enum>
		<enum name="MAX_PROGRAM_GENERIC_ATTRIBS_NV" value="0x8DA5" >
			<ext name="NV_gpu_program4" />
		</enum>
		<enum name="MAX_PROGRAM_GENERIC_RESULTS_NV" value="0x8DA6" >
			<ext name="NV_gpu_program4" />
		</enum>
		<enum name="LINES_ADJACENCY_EXT" value="0x000A" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="LINE_STRIP_ADJACENCY_EXT" value="0x000B" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="TRIANGLES_ADJACENCY_EXT" value="0x000C" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="TRIANGLE_STRIP_ADJACENCY_EXT" value="0x000D" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="GEOMETRY_PROGRAM_NV" value="0x8C26" >
			<ext name="NV_geometry_program4" />
		</enum>
		<enum name="MAX_PROGRAM_OUTPUT_VERTICES_NV" value="0x8C27" >
			<ext name="NV_geometry_program4" />
		</enum>
		<enum name="MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV" value="0x8C28" >
			<ext name="NV_geometry_program4" />
		</enum>
		<enum name="GEOMETRY_VERTICES_OUT_EXT" value="0x8DDA" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="GEOMETRY_INPUT_TYPE_EXT" value="0x8DDB" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="GEOMETRY_OUTPUT_TYPE_EXT" value="0x8DDC" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT" value="0x8C29" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_LAYERED_EXT" value="0x8DA7" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT" value="0x8DA8" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT" value="0x8DA9" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT" value="0x8CD4" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="PROGRAM_POINT_SIZE_EXT" value="0x8642" >
			<ext name="NV_geometry_program4" />
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="GEOMETRY_SHADER_EXT" value="0x8DD9" >
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_VARYING_COMPONENTS_EXT" value="0x8DDD" >
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="MAX_VERTEX_VARYING_COMPONENTS_EXT" value="0x8DDE" >
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="MAX_VARYING_COMPONENTS_EXT" value="0x8B4B" >
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT" value="0x8DDF" >
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_OUTPUT_VERTICES_EXT" value="0x8DE0" >
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT" value="0x8DE1" >
			<ext name="EXT_geometry_shader4" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_INTEGER_NV" value="0x88FD" >
			<ext name="NV_vertex_program4" />
		</enum>
		<enum name="SAMPLER_1D_ARRAY_EXT" value="0x8DC0" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="SAMPLER_2D_ARRAY_EXT" value="0x8DC1" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="SAMPLER_BUFFER_EXT" value="0x8DC2" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="SAMPLER_1D_ARRAY_SHADOW_EXT" value="0x8DC3" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="SAMPLER_2D_ARRAY_SHADOW_EXT" value="0x8DC4" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="SAMPLER_CUBE_SHADOW_EXT" value="0x8DC5" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_VEC2_EXT" value="0x8DC6" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_VEC3_EXT" value="0x8DC7" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_VEC4_EXT" value="0x8DC8" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="INT_SAMPLER_1D_EXT" value="0x8DC9" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="INT_SAMPLER_2D_EXT" value="0x8DCA" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="INT_SAMPLER_3D_EXT" value="0x8DCB" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="INT_SAMPLER_CUBE_EXT" value="0x8DCC" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="INT_SAMPLER_2D_RECT_EXT" value="0x8DCD" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="INT_SAMPLER_1D_ARRAY_EXT" value="0x8DCE" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="INT_SAMPLER_2D_ARRAY_EXT" value="0x8DCF" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="INT_SAMPLER_BUFFER_EXT" value="0x8DD0" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_1D_EXT" value="0x8DD1" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_2D_EXT" value="0x8DD2" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_3D_EXT" value="0x8DD3" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_CUBE_EXT" value="0x8DD4" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_2D_RECT_EXT" value="0x8DD5" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT" value="0x8DD6" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT" value="0x8DD7" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_BUFFER_EXT" value="0x8DD8" >
			<ext name="EXT_gpu_shader4" />
		</enum>
		<enum name="R11F_G11F_B10F_EXT" value="0x8C3A" >
			<ext name="EXT_packed_float" />
		</enum>
		<enum name="UNSIGNED_INT_10F_11F_11F_REV_EXT" value="0x8C3B" >
			<ext name="EXT_packed_float" />
		</enum>
		<enum name="RGBA_SIGNED_COMPONENTS_EXT" value="0x8C3C" >
			<ext name="EXT_packed_float" />
		</enum>
		<enum name="TEXTURE_1D_ARRAY_EXT" value="0x8C18" >
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="PROXY_TEXTURE_1D_ARRAY_EXT" value="0x8C19" >
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="TEXTURE_2D_ARRAY_EXT" value="0x8C1A" >
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="PROXY_TEXTURE_2D_ARRAY_EXT" value="0x8C1B" >
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="TEXTURE_BINDING_1D_ARRAY_EXT" value="0x8C1C" >
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="TEXTURE_BINDING_2D_ARRAY_EXT" value="0x8C1D" >
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="MAX_ARRAY_TEXTURE_LAYERS_EXT" value="0x88FF" >
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="COMPARE_REF_DEPTH_TO_TEXTURE_EXT" value="0x884E" >
			<ext name="EXT_texture_array" />
		</enum>
		<enum name="TEXTURE_BUFFER_EXT" value="0x8C2A" >
			<ext name="EXT_texture_buffer_object" />
		</enum>
		<enum name="MAX_TEXTURE_BUFFER_SIZE_EXT" value="0x8C2B" >
			<ext name="EXT_texture_buffer_object" />
		</enum>
		<enum name="TEXTURE_BINDING_BUFFER_EXT" value="0x8C2C" >
			<ext name="EXT_texture_buffer_object" />
		</enum>
		<enum name="TEXTURE_BUFFER_DATA_STORE_BINDING_EXT" value="0x8C2D" >
			<ext name="EXT_texture_buffer_object" />
		</enum>
		<enum name="TEXTURE_BUFFER_FORMAT_EXT" value="0x8C2E" >
			<ext name="EXT_texture_buffer_object" />
		</enum>
		<enum name="COMPRESSED_LUMINANCE_LATC1_EXT" value="0x8C70" >
			<ext name="EXT_texture_compression_latc" />
		</enum>
		<enum name="COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT" value="0x8C71" >
			<ext name="EXT_texture_compression_latc" />
		</enum>
		<enum name="COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT" value="0x8C72" >
			<ext name="EXT_texture_compression_latc" />
		</enum>
		<enum name="COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT" value="0x8C73" >
			<ext name="EXT_texture_compression_latc" />
		</enum>
		<enum name="COMPRESSED_RED_RGTC1_EXT" value="0x8DBB" >
			<ext name="EXT_texture_compression_rgtc" />
		</enum>
		<enum name="COMPRESSED_SIGNED_RED_RGTC1_EXT" value="0x8DBC" >
			<ext name="EXT_texture_compression_rgtc" />
		</enum>
		<enum name="COMPRESSED_RED_GREEN_RGTC2_EXT" value="0x8DBD" >
			<ext name="EXT_texture_compression_rgtc" />
		</enum>
		<enum name="COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT" value="0x8DBE" >
			<ext name="EXT_texture_compression_rgtc" />
		</enum>
		<enum name="RGB9_E5_EXT" value="0x8C3D" >
			<ext name="EXT_texture_shared_exponent" />
		</enum>
		<enum name="UNSIGNED_INT_5_9_9_9_REV_EXT" value="0x8C3E" >
			<ext name="EXT_texture_shared_exponent" />
		</enum>
		<enum name="TEXTURE_SHARED_SIZE_EXT" value="0x8C3F" >
			<ext name="EXT_texture_shared_exponent" />
		</enum>
		<enum name="DEPTH_COMPONENT32F_NV" value="0x8DAB" >
			<ext name="NV_depth_buffer_float" />
		</enum>
		<enum name="DEPTH32F_STENCIL8_NV" value="0x8DAC" >
			<ext name="NV_depth_buffer_float" />
		</enum>
		<enum name="FLOAT_32_UNSIGNED_INT_24_8_REV_NV" value="0x8DAD" >
			<ext name="NV_depth_buffer_float" />
		</enum>
		<enum name="DEPTH_BUFFER_FLOAT_MODE_NV" value="0x8DAF" >
			<ext name="NV_depth_buffer_float" />
		</enum>
		<enum name="RENDERBUFFER_COVERAGE_SAMPLES_NV" value="0x8CAB" >
			<ext name="NV_framebuffer_multisample_coverage" />
		</enum>
		<enum name="RENDERBUFFER_COLOR_SAMPLES_NV" value="0x8E10" >
			<ext name="NV_framebuffer_multisample_coverage" />
		</enum>
		<enum name="MAX_MULTISAMPLE_COVERAGE_MODES_NV" value="0x8E11" >
			<ext name="NV_framebuffer_multisample_coverage" />
		</enum>
		<enum name="MULTISAMPLE_COVERAGE_MODES_NV" value="0x8E12" >
			<ext name="NV_framebuffer_multisample_coverage" />
		</enum>
		<enum name="FRAMEBUFFER_SRGB_EXT" value="0x8DB9" >
			<ext name="EXT_framebuffer_sRGB" />
		</enum>
		<enum name="FRAMEBUFFER_SRGB_CAPABLE_EXT" value="0x8DBA" >
			<ext name="EXT_framebuffer_sRGB" />
		</enum>
		<enum name="MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV" value="0x8DA0" >
			<ext name="NV_parameter_buffer_object" />
		</enum>
		<enum name="MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV" value="0x8DA1" >
			<ext name="NV_parameter_buffer_object" />
		</enum>
		<enum name="VERTEX_PROGRAM_PARAMETER_BUFFER_NV" value="0x8DA2" >
			<ext name="NV_parameter_buffer_object" />
		</enum>
		<enum name="GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV" value="0x8DA3" >
			<ext name="NV_parameter_buffer_object" />
		</enum>
		<enum name="FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV" value="0x8DA4" >
			<ext name="NV_parameter_buffer_object" />
		</enum>
		<enum name="BACK_PRIMARY_COLOR_NV" value="0x8C77" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="BACK_SECONDARY_COLOR_NV" value="0x8C78" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TEXTURE_COORD_NV" value="0x8C79" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="CLIP_DISTANCE_NV" value="0x8C7A" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="VERTEX_ID_NV" value="0x8C7B" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="PRIMITIVE_ID_NV" value="0x8C7C" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="GENERIC_ATTRIB_NV" value="0x8C7D" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_ATTRIBS_NV" value="0x8C7E" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_MODE_NV" value="0x8C7F" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV" value="0x8C80" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="ACTIVE_VARYINGS_NV" value="0x8C81" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="ACTIVE_VARYING_MAX_LENGTH_NV" value="0x8C82" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_VARYINGS_NV" value="0x8C83" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_START_NV" value="0x8C84" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_SIZE_NV" value="0x8C85" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_RECORD_NV" value="0x8C86" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="PRIMITIVES_GENERATED_NV" value="0x8C87" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV" value="0x8C88" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="RASTERIZER_DISCARD_NV" value="0x8C89" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV" value="0x8C8A" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV" value="0x8C8B" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="INTERLEAVED_ATTRIBS_NV" value="0x8C8C" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="SEPARATE_ATTRIBS_NV" value="0x8C8D" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_NV" value="0x8C8E" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_BINDING_NV" value="0x8C8F" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="LAYER_NV" value="0x8DAA" >
			<ext name="NV_transform_feedback" />
		</enum>
		<enum name="MAX_VERTEX_BINDABLE_UNIFORMS_EXT" value="0x8DE2" >
			<ext name="EXT_bindable_uniform" />
		</enum>
		<enum name="MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT" value="0x8DE3" >
			<ext name="EXT_bindable_uniform" />
		</enum>
		<enum name="MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT" value="0x8DE4" >
			<ext name="EXT_bindable_uniform" />
		</enum>
		<enum name="MAX_BINDABLE_UNIFORM_SIZE_EXT" value="0x8DED" >
			<ext name="EXT_bindable_uniform" />
		</enum>
		<enum name="UNIFORM_BUFFER_EXT" value="0x8DEE" >
			<ext name="EXT_bindable_uniform" />
		</enum>
		<enum name="UNIFORM_BUFFER_BINDING_EXT" value="0x8DEF" >
			<ext name="EXT_bindable_uniform" />
		</enum>
		<enum name="RGBA32UI_EXT" value="0x8D70" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGB32UI_EXT" value="0x8D71" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="ALPHA32UI_EXT" value="0x8D72" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="INTENSITY32UI_EXT" value="0x8D73" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE32UI_EXT" value="0x8D74" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE_ALPHA32UI_EXT" value="0x8D75" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGBA16UI_EXT" value="0x8D76" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGB16UI_EXT" value="0x8D77" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="ALPHA16UI_EXT" value="0x8D78" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="INTENSITY16UI_EXT" value="0x8D79" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE16UI_EXT" value="0x8D7A" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE_ALPHA16UI_EXT" value="0x8D7B" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGBA8UI_EXT" value="0x8D7C" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGB8UI_EXT" value="0x8D7D" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="ALPHA8UI_EXT" value="0x8D7E" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="INTENSITY8UI_EXT" value="0x8D7F" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE8UI_EXT" value="0x8D80" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE_ALPHA8UI_EXT" value="0x8D81" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGBA32I_EXT" value="0x8D82" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGB32I_EXT" value="0x8D83" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="ALPHA32I_EXT" value="0x8D84" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="INTENSITY32I_EXT" value="0x8D85" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE32I_EXT" value="0x8D86" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE_ALPHA32I_EXT" value="0x8D87" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGBA16I_EXT" value="0x8D88" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGB16I_EXT" value="0x8D89" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="ALPHA16I_EXT" value="0x8D8A" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="INTENSITY16I_EXT" value="0x8D8B" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE16I_EXT" value="0x8D8C" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE_ALPHA16I_EXT" value="0x8D8D" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGBA8I_EXT" value="0x8D8E" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGB8I_EXT" value="0x8D8F" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="ALPHA8I_EXT" value="0x8D90" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="INTENSITY8I_EXT" value="0x8D91" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE8I_EXT" value="0x8D92" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE_ALPHA8I_EXT" value="0x8D93" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RED_INTEGER_EXT" value="0x8D94" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="GREEN_INTEGER_EXT" value="0x8D95" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="BLUE_INTEGER_EXT" value="0x8D96" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="ALPHA_INTEGER_EXT" value="0x8D97" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGB_INTEGER_EXT" value="0x8D98" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGBA_INTEGER_EXT" value="0x8D99" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="BGR_INTEGER_EXT" value="0x8D9A" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="BGRA_INTEGER_EXT" value="0x8D9B" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE_INTEGER_EXT" value="0x8D9C" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="LUMINANCE_ALPHA_INTEGER_EXT" value="0x8D9D" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="RGBA_INTEGER_MODE_EXT" value="0x8D9E" >
			<ext name="EXT_texture_integer" />
		</enum>
		<enum name="QUERY_WAIT_NV" value="0x8E13" >
			<ext name="NV_conditional_render" />
		</enum>
		<enum name="QUERY_NO_WAIT_NV" value="0x8E14" >
			<ext name="NV_conditional_render" />
		</enum>
		<enum name="QUERY_BY_REGION_WAIT_NV" value="0x8E15" >
			<ext name="NV_conditional_render" />
		</enum>
		<enum name="QUERY_BY_REGION_NO_WAIT_NV" value="0x8E16" >
			<ext name="NV_conditional_render" />
		</enum>
		<enum name="FRAME_NV" value="0x8E26" >
			<ext name="NV_present_video" />
		</enum>
		<enum name="FIELDS_NV" value="0x8E27" >
			<ext name="NV_present_video" />
		</enum>
		<enum name="CURRENT_TIME_NV" value="0x8E28" >
			<ext name="NV_present_video" />
		</enum>
		<enum name="NUM_FILL_STREAMS_NV" value="0x8E29" >
			<ext name="NV_present_video" />
		</enum>
		<enum name="PRESENT_TIME_NV" value="0x8E2A" >
			<ext name="NV_present_video" />
		</enum>
		<enum name="PRESENT_DURATION_NV" value="0x8E2B" >
			<ext name="NV_present_video" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_EXT" value="0x8C8E" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_START_EXT" value="0x8C84" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT" value="0x8C85" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT" value="0x8C8F" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="INTERLEAVED_ATTRIBS_EXT" value="0x8C8C" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="SEPARATE_ATTRIBS_EXT" value="0x8C8D" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="PRIMITIVES_GENERATED_EXT" value="0x8C87" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT" value="0x8C88" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="RASTERIZER_DISCARD_EXT" value="0x8C89" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT" value="0x8C8A" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT" value="0x8C8B" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT" value="0x8C80" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_VARYINGS_EXT" value="0x8C83" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_MODE_EXT" value="0x8C7F" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT" value="0x8C76" >
			<ext name="EXT_transform_feedback" />
		</enum>
		<enum name="PROGRAM_MATRIX_EXT" value="0x8E2D" >
			<ext name="EXT_direct_state_access" />
		</enum>
		<enum name="TRANSPOSE_PROGRAM_MATRIX_EXT" value="0x8E2E" >
			<ext name="EXT_direct_state_access" />
		</enum>
		<enum name="PROGRAM_MATRIX_STACK_DEPTH_EXT" value="0x8E2F" >
			<ext name="EXT_direct_state_access" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_R_EXT" value="0x8E42" >
			<ext name="EXT_texture_swizzle" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_G_EXT" value="0x8E43" >
			<ext name="EXT_texture_swizzle" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_B_EXT" value="0x8E44" >
			<ext name="EXT_texture_swizzle" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_A_EXT" value="0x8E45" >
			<ext name="EXT_texture_swizzle" />
		</enum>
		<enum name="TEXTURE_SWIZZLE_RGBA_EXT" value="0x8E46" >
			<ext name="EXT_texture_swizzle" />
		</enum>
		<enum name="SAMPLE_POSITION_NV" value="0x8E50" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_NV" value="0x8E51" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="SAMPLE_MASK_VALUE_NV" value="0x8E52" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="TEXTURE_BINDING_RENDERBUFFER_NV" value="0x8E53" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV" value="0x8E54" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="TEXTURE_RENDERBUFFER_NV" value="0x8E55" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="SAMPLER_RENDERBUFFER_NV" value="0x8E56" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="INT_SAMPLER_RENDERBUFFER_NV" value="0x8E57" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV" value="0x8E58" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="MAX_SAMPLE_MASK_WORDS_NV" value="0x8E59" >
			<ext name="NV_explicit_multisample" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_NV" value="0x8E22" >
			<ext name="NV_transform_feedback2" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV" value="0x8E23" >
			<ext name="NV_transform_feedback2" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV" value="0x8E24" >
			<ext name="NV_transform_feedback2" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BINDING_NV" value="0x8E25" >
			<ext name="NV_transform_feedback2" />
		</enum>
		<enum name="VBO_FREE_MEMORY_ATI" value="0x87FB" >
			<ext name="ATI_meminfo" />
		</enum>
		<enum name="TEXTURE_FREE_MEMORY_ATI" value="0x87FC" >
			<ext name="ATI_meminfo" />
		</enum>
		<enum name="RENDERBUFFER_FREE_MEMORY_ATI" value="0x87FD" >
			<ext name="ATI_meminfo" />
		</enum>
		<enum name="COUNTER_TYPE_AMD" value="0x8BC0" >
			<ext name="AMD_performance_monitor" />
		</enum>
		<enum name="COUNTER_RANGE_AMD" value="0x8BC1" >
			<ext name="AMD_performance_monitor" />
		</enum>
		<enum name="UNSIGNED_INT64_AMD" value="0x8BC2" >
			<ext name="AMD_performance_monitor" />
		</enum>
		<enum name="PERCENTAGE_AMD" value="0x8BC3" >
			<ext name="AMD_performance_monitor" />
		</enum>
		<enum name="PERFMON_RESULT_AVAILABLE_AMD" value="0x8BC4" >
			<ext name="AMD_performance_monitor" />
		</enum>
		<enum name="PERFMON_RESULT_SIZE_AMD" value="0x8BC5" >
			<ext name="AMD_performance_monitor" />
		</enum>
		<enum name="PERFMON_RESULT_AMD" value="0x8BC6" >
			<ext name="AMD_performance_monitor" />
		</enum>
		<enum name="SAMPLER_BUFFER_AMD" value="0x9001" >
			<ext name="AMD_vertex_shader_tessellator" />
		</enum>
		<enum name="INT_SAMPLER_BUFFER_AMD" value="0x9002" >
			<ext name="AMD_vertex_shader_tessellator" />
		</enum>
		<enum name="UNSIGNED_INT_SAMPLER_BUFFER_AMD" value="0x9003" >
			<ext name="AMD_vertex_shader_tessellator" />
		</enum>
		<enum name="TESSELLATION_MODE_AMD" value="0x9004" >
			<ext name="AMD_vertex_shader_tessellator" />
		</enum>
		<enum name="TESSELLATION_FACTOR_AMD" value="0x9005" >
			<ext name="AMD_vertex_shader_tessellator" />
		</enum>
		<enum name="DISCRETE_AMD" value="0x9006" >
			<ext name="AMD_vertex_shader_tessellator" />
		</enum>
		<enum name="CONTINUOUS_AMD" value="0x9007" >
			<ext name="AMD_vertex_shader_tessellator" />
		</enum>
		<enum name="QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT" value="0x8E4C" >
			<ext name="EXT_provoking_vertex" />
		</enum>
		<enum name="FIRST_VERTEX_CONVENTION_EXT" value="0x8E4D" >
			<ext name="EXT_provoking_vertex" />
		</enum>
		<enum name="LAST_VERTEX_CONVENTION_EXT" value="0x8E4E" >
			<ext name="EXT_provoking_vertex" />
		</enum>
		<enum name="PROVOKING_VERTEX_EXT" value="0x8E4F" >
			<ext name="EXT_provoking_vertex" />
		</enum>
		<enum name="ALPHA_SNORM" value="0x9010" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="LUMINANCE_SNORM" value="0x9011" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="LUMINANCE_ALPHA_SNORM" value="0x9012" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="INTENSITY_SNORM" value="0x9013" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="ALPHA8_SNORM" value="0x9014" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="LUMINANCE8_SNORM" value="0x9015" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="LUMINANCE8_ALPHA8_SNORM" value="0x9016" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="INTENSITY8_SNORM" value="0x9017" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="ALPHA16_SNORM" value="0x9018" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="LUMINANCE16_SNORM" value="0x9019" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="LUMINANCE16_ALPHA16_SNORM" value="0x901A" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="INTENSITY16_SNORM" value="0x901B" >
			<ext name="EXT_texture_snorm" />
		</enum>
		<enum name="TEXTURE_RANGE_LENGTH_APPLE" value="0x85B7" >
			<ext name="APPLE_texture_range" />
		</enum>
		<enum name="TEXTURE_RANGE_POINTER_APPLE" value="0x85B8" >
			<ext name="APPLE_texture_range" />
		</enum>
		<enum name="TEXTURE_STORAGE_HINT_APPLE" value="0x85BC" >
			<ext name="APPLE_texture_range" />
		</enum>
		<enum name="STORAGE_PRIVATE_APPLE" value="0x85BD" >
			<ext name="APPLE_texture_range" />
		</enum>
		<enum name="HALF_APPLE" value="0x140B" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="RGBA_FLOAT32_APPLE" value="0x8814" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="RGB_FLOAT32_APPLE" value="0x8815" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="ALPHA_FLOAT32_APPLE" value="0x8816" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="INTENSITY_FLOAT32_APPLE" value="0x8817" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="LUMINANCE_FLOAT32_APPLE" value="0x8818" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="LUMINANCE_ALPHA_FLOAT32_APPLE" value="0x8819" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="RGBA_FLOAT16_APPLE" value="0x881A" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="RGB_FLOAT16_APPLE" value="0x881B" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="ALPHA_FLOAT16_APPLE" value="0x881C" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="INTENSITY_FLOAT16_APPLE" value="0x881D" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="LUMINANCE_FLOAT16_APPLE" value="0x881E" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="LUMINANCE_ALPHA_FLOAT16_APPLE" value="0x881F" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="COLOR_FLOAT_APPLE" value="0x8A0F" >
			<ext name="APPLE_float_pixels" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP1_APPLE" value="0x8A00" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP2_APPLE" value="0x8A01" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP1_SIZE_APPLE" value="0x8A02" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP1_COEFF_APPLE" value="0x8A03" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP1_ORDER_APPLE" value="0x8A04" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP1_DOMAIN_APPLE" value="0x8A05" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP2_SIZE_APPLE" value="0x8A06" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP2_COEFF_APPLE" value="0x8A07" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP2_ORDER_APPLE" value="0x8A08" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="VERTEX_ATTRIB_MAP2_DOMAIN_APPLE" value="0x8A09" >
			<ext name="APPLE_vertex_program_evaluators" />
		</enum>
		<enum name="AUX_DEPTH_STENCIL_APPLE" value="0x8A14" >
			<ext name="APPLE_aux_depth_stencil" />
		</enum>
		<enum name="BUFFER_OBJECT_APPLE" value="0x85B3" >
			<ext name="APPLE_object_purgeable" />
		</enum>
		<enum name="RELEASED_APPLE" value="0x8A19" >
			<ext name="APPLE_object_purgeable" />
		</enum>
		<enum name="VOLATILE_APPLE" value="0x8A1A" >
			<ext name="APPLE_object_purgeable" />
		</enum>
		<enum name="RETAINED_APPLE" value="0x8A1B" >
			<ext name="APPLE_object_purgeable" />
		</enum>
		<enum name="UNDEFINED_APPLE" value="0x8A1C" >
			<ext name="APPLE_object_purgeable" />
		</enum>
		<enum name="PURGEABLE_APPLE" value="0x8A1D" >
			<ext name="APPLE_object_purgeable" />
		</enum>
		<enum name="PACK_ROW_BYTES_APPLE" value="0x8A15" >
			<ext name="APPLE_row_bytes" />
		</enum>
		<enum name="UNPACK_ROW_BYTES_APPLE" value="0x8A16" >
			<ext name="APPLE_row_bytes" />
		</enum>
		<enum name="RGB_422_APPLE" value="0x8A1F" >
			<ext name="APPLE_rgb_422" />
		</enum>
		<enum name="VIDEO_BUFFER_NV" value="0x9020" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_BUFFER_BINDING_NV" value="0x9021" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="FIELD_UPPER_NV" value="0x9022" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="FIELD_LOWER_NV" value="0x9023" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="NUM_VIDEO_CAPTURE_STREAMS_NV" value="0x9024" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV" value="0x9025" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_CAPTURE_TO_422_SUPPORTED_NV" value="0x9026" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="LAST_VIDEO_CAPTURE_STATUS_NV" value="0x9027" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_BUFFER_PITCH_NV" value="0x9028" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_COLOR_CONVERSION_MATRIX_NV" value="0x9029" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_COLOR_CONVERSION_MAX_NV" value="0x902A" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_COLOR_CONVERSION_MIN_NV" value="0x902B" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_COLOR_CONVERSION_OFFSET_NV" value="0x902C" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_BUFFER_INTERNAL_FORMAT_NV" value="0x902D" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="PARTIAL_SUCCESS_NV" value="0x902E" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="SUCCESS_NV" value="0x902F" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="FAILURE_NV" value="0x9030" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="YCBYCR8_422_NV" value="0x9031" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="YCBAYCR8A_4224_NV" value="0x9032" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="Z6Y10Z6CB10Z6Y10Z6CR10_422_NV" value="0x9033" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV" value="0x9034" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="Z4Y12Z4CB12Z4Y12Z4CR12_422_NV" value="0x9035" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV" value="0x9036" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="Z4Y12Z4CB12Z4CR12_444_NV" value="0x9037" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_CAPTURE_FRAME_WIDTH_NV" value="0x9038" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_CAPTURE_FRAME_HEIGHT_NV" value="0x9039" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV" value="0x903A" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV" value="0x903B" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="VIDEO_CAPTURE_SURFACE_ORIGIN_NV" value="0x903C" >
			<ext name="NV_video_capture" />
		</enum>
		<enum name="ACTIVE_PROGRAM_EXT" value="0x8B8D" >
			<ext name="EXT_separate_shader_objects" />
		</enum>
		<enum name="BUFFER_GPU_ADDRESS_NV" value="0x8F1D" >
			<ext name="NV_shader_buffer_load" />
		</enum>
		<enum name="GPU_ADDRESS_NV" value="0x8F34" >
			<ext name="NV_shader_buffer_load" />
		</enum>
		<enum name="MAX_SHADER_BUFFER_ADDRESS_NV" value="0x8F35" >
			<ext name="NV_shader_buffer_load" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_UNIFIED_NV" value="0x8F1E" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="ELEMENT_ARRAY_UNIFIED_NV" value="0x8F1F" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_ADDRESS_NV" value="0x8F20" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="VERTEX_ARRAY_ADDRESS_NV" value="0x8F21" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="NORMAL_ARRAY_ADDRESS_NV" value="0x8F22" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="COLOR_ARRAY_ADDRESS_NV" value="0x8F23" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="INDEX_ARRAY_ADDRESS_NV" value="0x8F24" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_ADDRESS_NV" value="0x8F25" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_ADDRESS_NV" value="0x8F26" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_ADDRESS_NV" value="0x8F27" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="FOG_COORD_ARRAY_ADDRESS_NV" value="0x8F28" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="ELEMENT_ARRAY_ADDRESS_NV" value="0x8F29" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_LENGTH_NV" value="0x8F2A" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="VERTEX_ARRAY_LENGTH_NV" value="0x8F2B" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="NORMAL_ARRAY_LENGTH_NV" value="0x8F2C" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="COLOR_ARRAY_LENGTH_NV" value="0x8F2D" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="INDEX_ARRAY_LENGTH_NV" value="0x8F2E" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="TEXTURE_COORD_ARRAY_LENGTH_NV" value="0x8F2F" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="EDGE_FLAG_ARRAY_LENGTH_NV" value="0x8F30" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="SECONDARY_COLOR_ARRAY_LENGTH_NV" value="0x8F31" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="FOG_COORD_ARRAY_LENGTH_NV" value="0x8F32" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="ELEMENT_ARRAY_LENGTH_NV" value="0x8F33" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="DRAW_INDIRECT_UNIFIED_NV" value="0x8F40" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="DRAW_INDIRECT_ADDRESS_NV" value="0x8F41" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="DRAW_INDIRECT_LENGTH_NV" value="0x8F42" >
			<ext name="NV_vertex_buffer_unified_memory" />
		</enum>
		<enum name="MAX_IMAGE_UNITS_EXT" value="0x8F38" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT" value="0x8F39" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_NAME_EXT" value="0x8F3A" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_LEVEL_EXT" value="0x8F3B" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_LAYERED_EXT" value="0x8F3C" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_LAYER_EXT" value="0x8F3D" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_ACCESS_EXT" value="0x8F3E" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_1D_EXT" value="0x904C" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_EXT" value="0x904D" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_3D_EXT" value="0x904E" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_RECT_EXT" value="0x904F" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_CUBE_EXT" value="0x9050" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BUFFER_EXT" value="0x9051" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_1D_ARRAY_EXT" value="0x9052" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_ARRAY_EXT" value="0x9053" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_CUBE_MAP_ARRAY_EXT" value="0x9054" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_MULTISAMPLE_EXT" value="0x9055" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_2D_MULTISAMPLE_ARRAY_EXT" value="0x9056" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_1D_EXT" value="0x9057" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_EXT" value="0x9058" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_3D_EXT" value="0x9059" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_RECT_EXT" value="0x905A" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_CUBE_EXT" value="0x905B" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_BUFFER_EXT" value="0x905C" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_1D_ARRAY_EXT" value="0x905D" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_ARRAY_EXT" value="0x905E" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_CUBE_MAP_ARRAY_EXT" value="0x905F" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_MULTISAMPLE_EXT" value="0x9060" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT" value="0x9061" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_1D_EXT" value="0x9062" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_EXT" value="0x9063" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_3D_EXT" value="0x9064" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_RECT_EXT" value="0x9065" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_CUBE_EXT" value="0x9066" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_BUFFER_EXT" value="0x9067" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_1D_ARRAY_EXT" value="0x9068" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_ARRAY_EXT" value="0x9069" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT" value="0x906A" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT" value="0x906B" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT" value="0x906C" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="MAX_IMAGE_SAMPLES_EXT" value="0x906D" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="IMAGE_BINDING_FORMAT_EXT" value="0x906E" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT" value="0x00000001" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="ELEMENT_ARRAY_BARRIER_BIT_EXT" value="0x00000002" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="UNIFORM_BARRIER_BIT_EXT" value="0x00000004" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="TEXTURE_FETCH_BARRIER_BIT_EXT" value="0x00000008" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT" value="0x00000020" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="COMMAND_BARRIER_BIT_EXT" value="0x00000040" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="PIXEL_BUFFER_BARRIER_BIT_EXT" value="0x00000080" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="TEXTURE_UPDATE_BARRIER_BIT_EXT" value="0x00000100" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="BUFFER_UPDATE_BARRIER_BIT_EXT" value="0x00000200" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="FRAMEBUFFER_BARRIER_BIT_EXT" value="0x00000400" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="TRANSFORM_FEEDBACK_BARRIER_BIT_EXT" value="0x00000800" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="ATOMIC_COUNTER_BARRIER_BIT_EXT" value="0x00001000" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="ALL_BARRIER_BITS_EXT" value="0xFFFFFFFF" >
			<ext name="EXT_shader_image_load_store" />
		</enum>
		<enum name="DOUBLE_VEC2_EXT" value="0x8FFC" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_VEC3_EXT" value="0x8FFD" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_VEC4_EXT" value="0x8FFE" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT2_EXT" value="0x8F46" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT3_EXT" value="0x8F47" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT4_EXT" value="0x8F48" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT2x3_EXT" value="0x8F49" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT2x4_EXT" value="0x8F4A" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT3x2_EXT" value="0x8F4B" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT3x4_EXT" value="0x8F4C" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT4x2_EXT" value="0x8F4D" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="DOUBLE_MAT4x3_EXT" value="0x8F4E" >
			<ext name="EXT_vertex_attrib_64bit" />
		</enum>
		<enum name="MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV" value="0x8E5A" >
			<ext name="NV_gpu_program5" />
		</enum>
		<enum name="MIN_FRAGMENT_INTERPOLATION_OFFSET_NV" value="0x8E5B" >
			<ext name="NV_gpu_program5" />
		</enum>
		<enum name="MAX_FRAGMENT_INTERPOLATION_OFFSET_NV" value="0x8E5C" >
			<ext name="NV_gpu_program5" />
		</enum>
		<enum name="FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV" value="0x8E5D" >
			<ext name="NV_gpu_program5" />
		</enum>
		<enum name="MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV" value="0x8E5E" >
			<ext name="NV_gpu_program5" />
		</enum>
		<enum name="MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV" value="0x8E5F" >
			<ext name="NV_gpu_program5" />
		</enum>
		<enum name="MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV" value="0x8F44" >
			<ext name="NV_gpu_program5" />
		</enum>
		<enum name="MAX_PROGRAM_SUBROUTINE_NUM_NV" value="0x8F45" >
			<ext name="NV_gpu_program5" />
		</enum>
		<enum name="INT64_NV" value="0x140E" >
			<ext name="NV_gpu_shader5" />
			<ext name="NV_vertex_attrib_integer_64bit" />
		</enum>
		<enum name="UNSIGNED_INT64_NV" value="0x140F" >
			<ext name="NV_gpu_shader5" />
			<ext name="NV_vertex_attrib_integer_64bit" />
		</enum>
		<enum name="INT8_NV" value="0x8FE0" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT8_VEC2_NV" value="0x8FE1" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT8_VEC3_NV" value="0x8FE2" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT8_VEC4_NV" value="0x8FE3" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT16_NV" value="0x8FE4" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT16_VEC2_NV" value="0x8FE5" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT16_VEC3_NV" value="0x8FE6" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT16_VEC4_NV" value="0x8FE7" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT64_VEC2_NV" value="0x8FE9" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT64_VEC3_NV" value="0x8FEA" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="INT64_VEC4_NV" value="0x8FEB" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT8_NV" value="0x8FEC" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT8_VEC2_NV" value="0x8FED" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT8_VEC3_NV" value="0x8FEE" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT8_VEC4_NV" value="0x8FEF" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT16_NV" value="0x8FF0" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT16_VEC2_NV" value="0x8FF1" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT16_VEC3_NV" value="0x8FF2" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT16_VEC4_NV" value="0x8FF3" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT64_VEC2_NV" value="0x8FF5" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT64_VEC3_NV" value="0x8FF6" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="UNSIGNED_INT64_VEC4_NV" value="0x8FF7" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="FLOAT16_NV" value="0x8FF8" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="FLOAT16_VEC2_NV" value="0x8FF9" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="FLOAT16_VEC3_NV" value="0x8FFA" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="FLOAT16_VEC4_NV" value="0x8FFB" >
			<ext name="NV_gpu_shader5" />
		</enum>
		<enum name="SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV" value="0x00000010" >
			<ext name="NV_shader_buffer_store" />
		</enum>
		<enum name="MAX_PROGRAM_PATCH_ATTRIBS_NV" value="0x86D8" >
			<ext name="NV_tessellation_program5" />
		</enum>
		<enum name="TESS_CONTROL_PROGRAM_NV" value="0x891E" >
			<ext name="NV_tessellation_program5" />
		</enum>
		<enum name="TESS_EVALUATION_PROGRAM_NV" value="0x891F" >
			<ext name="NV_tessellation_program5" />
		</enum>
		<enum name="TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV" value="0x8C74" >
			<ext name="NV_tessellation_program5" />
		</enum>
		<enum name="TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV" value="0x8C75" >
			<ext name="NV_tessellation_program5" />
		</enum>
		<enum name="COVERAGE_SAMPLES_NV" value="0x80A9" >
			<ext name="NV_multisample_coverage" />
		</enum>
		<enum name="COLOR_SAMPLES_NV" value="0x8E20" >
			<ext name="NV_multisample_coverage" />
		</enum>
		<enum name="DATA_BUFFER_AMD" value="0x9151" >
			<ext name="AMD_name_gen_delete" />
		</enum>
		<enum name="PERFORMANCE_MONITOR_AMD" value="0x9152" >
			<ext name="AMD_name_gen_delete" />
		</enum>
		<enum name="QUERY_OBJECT_AMD" value="0x9153" >
			<ext name="AMD_name_gen_delete" />
		</enum>
		<enum name="VERTEX_ARRAY_OBJECT_AMD" value="0x9154" >
			<ext name="AMD_name_gen_delete" />
		</enum>
		<enum name="SAMPLER_OBJECT_AMD" value="0x9155" >
			<ext name="AMD_name_gen_delete" />
		</enum>
		<enum name="MAX_DEBUG_MESSAGE_LENGTH_AMD" value="0x9143" >
			<ext name="AMD_debug_output" />
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="MAX_DEBUG_LOGGED_MESSAGES_AMD" value="0x9144" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_LOGGED_MESSAGES_AMD" value="0x9145" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_SEVERITY_HIGH_AMD" value="0x9146" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_SEVERITY_MEDIUM_AMD" value="0x9147" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_SEVERITY_LOW_AMD" value="0x9148" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_CATEGORY_API_ERROR_AMD" value="0x9149" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_CATEGORY_WINDOW_SYSTEM_AMD" value="0x914A" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_CATEGORY_DEPRECATION_AMD" value="0x914B" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD" value="0x914C" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_CATEGORY_PERFORMANCE_AMD" value="0x914D" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_CATEGORY_SHADER_COMPILER_AMD" value="0x914E" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_CATEGORY_APPLICATION_AMD" value="0x914F" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="DEBUG_CATEGORY_OTHER_AMD" value="0x9150" >
			<ext name="AMD_debug_output" />
		</enum>
		<enum name="SURFACE_STATE_NV" value="0x86EB" >
			<ext name="NV_vdpau_interop" />
		</enum>
		<enum name="SURFACE_REGISTERED_NV" value="0x86FD" >
			<ext name="NV_vdpau_interop" />
		</enum>
		<enum name="SURFACE_MAPPED_NV" value="0x8700" >
			<ext name="NV_vdpau_interop" />
		</enum>
		<enum name="WRITE_DISCARD_NV" value="0x88BE" >
			<ext name="NV_vdpau_interop" />
		</enum>
		<enum name="DEPTH_CLAMP_NEAR_AMD" value="0x901E" >
			<ext name="AMD_depth_clamp_separate" />
		</enum>
		<enum name="DEPTH_CLAMP_FAR_AMD" value="0x901F" >
			<ext name="AMD_depth_clamp_separate" />
		</enum>
		<enum name="TEXTURE_SRGB_DECODE_EXT" value="0x8A48" >
			<ext name="EXT_texture_sRGB_decode" />
		</enum>
		<enum name="DECODE_EXT" value="0x8A49" >
			<ext name="EXT_texture_sRGB_decode" />
		</enum>
		<enum name="SKIP_DECODE_EXT" value="0x8A4A" >
			<ext name="EXT_texture_sRGB_decode" />
		</enum>
		<enum name="TEXTURE_COVERAGE_SAMPLES_NV" value="0x9045" >
			<ext name="NV_texture_multisample" />
		</enum>
		<enum name="TEXTURE_COLOR_SAMPLES_NV" value="0x9046" >
			<ext name="NV_texture_multisample" />
		</enum>
		<enum name="FACTOR_MIN_AMD" value="0x901C" >
			<ext name="AMD_blend_minmax_factor" />
		</enum>
		<enum name="FACTOR_MAX_AMD" value="0x901D" >
			<ext name="AMD_blend_minmax_factor" />
		</enum>
		<enum name="SUBSAMPLE_DISTANCE_AMD" value="0x883F" >
			<ext name="AMD_sample_positions" />
		</enum>
		<enum name="SYNC_X11_FENCE_EXT" value="0x90E1" >
			<ext name="EXT_x11_sync_object" />
		</enum>
		<enum name="SCALED_RESOLVE_FASTEST_EXT" value="0x90BA" >
			<ext name="EXT_framebuffer_multisample_blit_scaled" />
		</enum>
		<enum name="SCALED_RESOLVE_NICEST_EXT" value="0x90BB" >
			<ext name="EXT_framebuffer_multisample_blit_scaled" />
		</enum>
		<enum name="PATH_FORMAT_SVG_NV" value="0x9070" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_FORMAT_PS_NV" value="0x9071" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="STANDARD_FONT_NAME_NV" value="0x9072" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="SYSTEM_FONT_NAME_NV" value="0x9073" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FILE_NAME_NV" value="0x9074" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STROKE_WIDTH_NV" value="0x9075" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_END_CAPS_NV" value="0x9076" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_INITIAL_END_CAP_NV" value="0x9077" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_TERMINAL_END_CAP_NV" value="0x9078" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_JOIN_STYLE_NV" value="0x9079" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_MITER_LIMIT_NV" value="0x907A" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_DASH_CAPS_NV" value="0x907B" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_INITIAL_DASH_CAP_NV" value="0x907C" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_TERMINAL_DASH_CAP_NV" value="0x907D" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_DASH_OFFSET_NV" value="0x907E" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_CLIENT_LENGTH_NV" value="0x907F" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_FILL_MODE_NV" value="0x9080" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_FILL_MASK_NV" value="0x9081" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_FILL_COVER_MODE_NV" value="0x9082" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STROKE_COVER_MODE_NV" value="0x9083" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STROKE_MASK_NV" value="0x9084" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_SAMPLE_QUALITY_NV" value="0x9085" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STROKE_BOUND_NV" value="0x9086" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STROKE_OVERSAMPLE_COUNT_NV" value="0x9087" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="COUNT_UP_NV" value="0x9088" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="COUNT_DOWN_NV" value="0x9089" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_OBJECT_BOUNDING_BOX_NV" value="0x908A" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="CONVEX_HULL_NV" value="0x908B" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="MULTI_HULLS_NV" value="0x908C" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="BOUNDING_BOX_NV" value="0x908D" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRANSLATE_X_NV" value="0x908E" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRANSLATE_Y_NV" value="0x908F" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRANSLATE_2D_NV" value="0x9090" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRANSLATE_3D_NV" value="0x9091" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="AFFINE_2D_NV" value="0x9092" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PROJECTIVE_2D_NV" value="0x9093" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="AFFINE_3D_NV" value="0x9094" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PROJECTIVE_3D_NV" value="0x9095" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRANSPOSE_AFFINE_2D_NV" value="0x9096" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRANSPOSE_PROJECTIVE_2D_NV" value="0x9097" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRANSPOSE_AFFINE_3D_NV" value="0x9098" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRANSPOSE_PROJECTIVE_3D_NV" value="0x9099" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="UTF8_NV" value="0x909A" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="UTF16_NV" value="0x909B" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="BOUNDING_BOX_OF_BOUNDING_BOXES_NV" value="0x909C" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_COMMAND_COUNT_NV" value="0x909D" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_COORD_COUNT_NV" value="0x909E" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_DASH_ARRAY_COUNT_NV" value="0x909F" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_COMPUTED_LENGTH_NV" value="0x90A0" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_FILL_BOUNDING_BOX_NV" value="0x90A1" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STROKE_BOUNDING_BOX_NV" value="0x90A2" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="SQUARE_NV" value="0x90A3" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="ROUND_NV" value="0x90A4" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="TRIANGULAR_NV" value="0x90A5" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="BEVEL_NV" value="0x90A6" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="MITER_REVERT_NV" value="0x90A7" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="MITER_TRUNCATE_NV" value="0x90A8" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="SKIP_MISSING_GLYPH_NV" value="0x90A9" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="USE_MISSING_GLYPH_NV" value="0x90AA" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_ERROR_POSITION_NV" value="0x90AB" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_FOG_GEN_MODE_NV" value="0x90AC" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="ACCUM_ADJACENT_PAIRS_NV" value="0x90AD" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="ADJACENT_PAIRS_NV" value="0x90AE" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FIRST_TO_REST_NV" value="0x90AF" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_GEN_MODE_NV" value="0x90B0" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_GEN_COEFF_NV" value="0x90B1" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_GEN_COLOR_FORMAT_NV" value="0x90B2" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_GEN_COMPONENTS_NV" value="0x90B3" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STENCIL_FUNC_NV" value="0x90B7" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STENCIL_REF_NV" value="0x90B8" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STENCIL_VALUE_MASK_NV" value="0x90B9" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV" value="0x90BD" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_STENCIL_DEPTH_OFFSET_UNITS_NV" value="0x90BE" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_COVER_DEPTH_FUNC_NV" value="0x90BF" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="PATH_DASH_OFFSET_RESET_NV" value="0x90B4" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="MOVE_TO_RESETS_NV" value="0x90B5" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="MOVE_TO_CONTINUES_NV" value="0x90B6" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="CLOSE_PATH_NV" value="0x00" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="MOVE_TO_NV" value="0x02" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_MOVE_TO_NV" value="0x03" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="LINE_TO_NV" value="0x04" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_LINE_TO_NV" value="0x05" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="HORIZONTAL_LINE_TO_NV" value="0x06" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_HORIZONTAL_LINE_TO_NV" value="0x07" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="VERTICAL_LINE_TO_NV" value="0x08" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_VERTICAL_LINE_TO_NV" value="0x09" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="QUADRATIC_CURVE_TO_NV" value="0x0A" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_QUADRATIC_CURVE_TO_NV" value="0x0B" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="CUBIC_CURVE_TO_NV" value="0x0C" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_CUBIC_CURVE_TO_NV" value="0x0D" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="SMOOTH_QUADRATIC_CURVE_TO_NV" value="0x0E" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV" value="0x0F" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="SMOOTH_CUBIC_CURVE_TO_NV" value="0x10" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV" value="0x11" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="SMALL_CCW_ARC_TO_NV" value="0x12" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_SMALL_CCW_ARC_TO_NV" value="0x13" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="SMALL_CW_ARC_TO_NV" value="0x14" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_SMALL_CW_ARC_TO_NV" value="0x15" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="LARGE_CCW_ARC_TO_NV" value="0x16" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_LARGE_CCW_ARC_TO_NV" value="0x17" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="LARGE_CW_ARC_TO_NV" value="0x18" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_LARGE_CW_ARC_TO_NV" value="0x19" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RESTART_PATH_NV" value="0xF0" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="DUP_FIRST_CUBIC_CURVE_TO_NV" value="0xF2" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="DUP_LAST_CUBIC_CURVE_TO_NV" value="0xF4" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RECT_NV" value="0xF6" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="CIRCULAR_CCW_ARC_TO_NV" value="0xF8" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="CIRCULAR_CW_ARC_TO_NV" value="0xFA" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="CIRCULAR_TANGENT_ARC_TO_NV" value="0xFC" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="ARC_TO_NV" value="0xFE" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="RELATIVE_ARC_TO_NV" value="0xFF" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="BOLD_BIT_NV" value="0x01" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="ITALIC_BIT_NV" value="0x02" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_WIDTH_BIT_NV" value="0x01" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_HEIGHT_BIT_NV" value="0x02" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_HORIZONTAL_BEARING_X_BIT_NV" value="0x04" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_HORIZONTAL_BEARING_Y_BIT_NV" value="0x08" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV" value="0x10" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_VERTICAL_BEARING_X_BIT_NV" value="0x20" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_VERTICAL_BEARING_Y_BIT_NV" value="0x40" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV" value="0x80" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="GLYPH_HAS_KERNING_NV" value="0x100" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_X_MIN_BOUNDS_NV" value="0x00010000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_Y_MIN_BOUNDS_NV" value="0x00020000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_X_MAX_BOUNDS_NV" value="0x00040000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_Y_MAX_BOUNDS_NV" value="0x00080000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_UNITS_PER_EM_NV" value="0x00100000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_ASCENDER_NV" value="0x00200000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_DESCENDER_NV" value="0x00400000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_HEIGHT_NV" value="0x00800000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_MAX_ADVANCE_WIDTH_NV" value="0x01000000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_MAX_ADVANCE_HEIGHT_NV" value="0x02000000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_UNDERLINE_POSITION_NV" value="0x04000000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_UNDERLINE_THICKNESS_NV" value="0x08000000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="FONT_HAS_KERNING_NV" value="0x10000000" >
			<ext name="NV_path_rendering" />
		</enum>
		<enum name="EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD" value="0x9160" >
			<ext name="AMD_pinned_memory" />
		</enum>
		<enum name="SET_AMD" value="0x874A" >
			<ext name="AMD_stencil_operation_extended" />
		</enum>
		<enum name="REPLACE_VALUE_AMD" value="0x874B" >
			<ext name="AMD_stencil_operation_extended" />
		</enum>
		<enum name="STENCIL_OP_VALUE_AMD" value="0x874C" >
			<ext name="AMD_stencil_operation_extended" />
		</enum>
		<enum name="STENCIL_BACK_OP_VALUE_AMD" value="0x874D" >
			<ext name="AMD_stencil_operation_extended" />
		</enum>
		<enum name="QUERY_BUFFER_AMD" value="0x9192" >
			<ext name="AMD_query_buffer_object" />
		</enum>
		<enum name="QUERY_BUFFER_BINDING_AMD" value="0x9193" >
			<ext name="AMD_query_buffer_object" />
		</enum>
		<enum name="QUERY_RESULT_NO_WAIT_AMD" value="0x9194" >
			<ext name="AMD_query_buffer_object" />
		</enum>
		<enum name="VIRTUAL_PAGE_SIZE_X_AMD" value="0x9195" >
			<ext name="AMD_sparse_texture" />
		</enum>
		<enum name="VIRTUAL_PAGE_SIZE_Y_AMD" value="0x9196" >
			<ext name="AMD_sparse_texture" />
		</enum>
		<enum name="VIRTUAL_PAGE_SIZE_Z_AMD" value="0x9197" >
			<ext name="AMD_sparse_texture" />
		</enum>
		<enum name="MAX_SPARSE_TEXTURE_SIZE_AMD" value="0x9198" >
			<ext name="AMD_sparse_texture" />
		</enum>
		<enum name="MAX_SPARSE_3D_TEXTURE_SIZE_AMD" value="0x9199" >
			<ext name="AMD_sparse_texture" />
		</enum>
		<enum name="MAX_SPARSE_ARRAY_TEXTURE_LAYERS" value="0x919A" >
			<ext name="AMD_sparse_texture" />
		</enum>
		<enum name="MIN_SPARSE_LEVEL_AMD" value="0x919B" >
			<ext name="AMD_sparse_texture" />
		</enum>
		<enum name="MIN_LOD_WARNING_AMD" value="0x919C" >
			<ext name="AMD_sparse_texture" />
		</enum>
		<enum name="TEXTURE_STORAGE_SPARSE_BIT_AMD" value="0x00000001" >
			<ext name="AMD_sparse_texture" />
		</enum>
	</enumerations>
	<functions >
		<passthru ><![CDATA[#include <stddef.h>
#ifndef GL_VERSION_2_0
/* GL type for program/shader text */
typedef char GLchar;
#endif
#ifndef GL_VERSION_1_5
/* GL types for handling large vertex buffer objects */
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
#endif
#ifndef GL_ARB_vertex_buffer_object
/* GL types for handling large vertex buffer objects */
typedef ptrdiff_t GLintptrARB;
typedef ptrdiff_t GLsizeiptrARB;
#endif
#ifndef GL_ARB_shader_objects
/* GL types for program/shader text and shader object handles */
typedef char GLcharARB;
typedef unsigned int GLhandleARB;
#endif
/* GL type for "half" precision (s10e5) float data in host memory */
#ifndef GL_ARB_half_float_pixel
typedef unsigned short GLhalfARB;
#endif
#ifndef GL_NV_half_float
typedef unsigned short GLhalfNV;
#endif
#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif
#ifndef GL_EXT_timer_query
typedef int64_t GLint64EXT;
typedef uint64_t GLuint64EXT;
#endif
#ifndef GL_ARB_sync
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef struct __GLsync *GLsync;
#endif
#ifndef GL_ARB_cl_event
/* These incomplete types let us declare types compatible with OpenCL's cl_context and cl_event */
struct _cl_context;
struct _cl_event;
#endif
#ifndef GL_ARB_debug_output
typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);
#endif
#ifndef GL_AMD_debug_output
typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);
#endif
#ifndef GL_KHR_debug
typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);
#endif
#ifndef GL_NV_vdpau_interop
typedef GLintptr GLvdpauSurfaceNV;
#endif]]></passthru>
		<property-defs >
			<property name="vectorequiv" any="true" />
			<property name="glxropcode" any="true" />
			<property name="glfflags" any="true" />
			<property name="category" >
				<value >SUNX_constant_data</value>
				<value >SUN_global_alpha</value>
				<value >SUN_mesh_array</value>
				<value >SUN_triangle_list</value>
				<value >SUN_vertex</value>
			</property>
			<property name="required-props" any="true" />
			<property name="dlflags" >
				<value >notlistable</value>
				<value >handcode</value>
				<value >prepad</value>
			</property>
			<property name="subcategory" any="true" />
			<property name="offset" any="true" />
			<property name="extension" >
				<value >future</value>
				<value >not_implemented</value>
				<value >soft</value>
				<value >WINSOFT</value>
				<value >NV10</value>
				<value >NV20</value>
				<value >NV50</value>
			</property>
			<property name="glxsingle" any="true" />
			<property name="deprecated" >
				<value >3.1</value>
			</property>
			<property name="param" >
				<value >retval</value>
				<value >retained</value>
			</property>
			<property name="glxflags" >
				<value >client-intercept</value>
				<value >client-handcode</value>
				<value >server-handcode</value>
				<value >EXT</value>
				<value >SGI</value>
				<value >ignore</value>
				<value >ARB</value>
			</property>
			<property name="glextmask" any="true" />
			<property name="profile" >
				<value >compatibility</value>
			</property>
			<property name="wglflags" >
				<value >client-handcode</value>
				<value >server-handcode</value>
				<value >small-data</value>
				<value >batchable</value>
			</property>
			<property name="version" >
				<value >1.0</value>
				<value >1.1</value>
				<value >1.2</value>
				<value >1.3</value>
				<value >1.4</value>
				<value >1.5</value>
				<value >2.0</value>
				<value >2.1</value>
				<value >3.0</value>
				<value >3.1</value>
				<value >3.2</value>
				<value >3.3</value>
				<value >4.0</value>
				<value >4.1</value>
				<value >4.2</value>
				<value >4.3</value>
			</property>
			<property name="alias" any="true" />
			<property name="beginend" any="true" />
			<property name="glxvectorequiv" any="true" />
			<property name="passthru" any="true" />
			<property name="glxvendorpriv" any="true" />
		</property-defs>
		<function-defs >
			<function name="CullFace" return="void" offset="152" version="1.0" glxropcode="79" category="VERSION_1_0" >
				<param name="mode" kind="value" type="CullFaceMode" input="true" />
			</function>
			<function name="FrontFace" return="void" offset="157" version="1.0" glxropcode="84" category="VERSION_1_0" >
				<param name="mode" kind="value" type="FrontFaceDirection" input="true" />
			</function>
			<function name="Hint" return="void" offset="158" version="1.0" glxropcode="85" category="VERSION_1_0" >
				<param name="target" kind="value" type="HintTarget" input="true" />
				<param name="mode" kind="value" type="HintMode" input="true" />
			</function>
			<function name="LineWidth" return="void" offset="168" version="1.0" glxropcode="95" category="VERSION_1_0" >
				<param name="width" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PointSize" return="void" offset="173" version="1.0" glxropcode="100" category="VERSION_1_0" >
				<param name="size" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PolygonMode" return="void" offset="174" version="1.0" glxropcode="101" category="VERSION_1_0" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="mode" kind="value" type="PolygonMode" input="true" />
			</function>
			<function name="Scissor" return="void" offset="176" version="1.0" glxropcode="103" category="VERSION_1_0" >
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TexParameterf" return="void" offset="178" glxropcode="105" category="VERSION_1_0" wglflags="small-data" version="1.0" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="TexParameterfv" return="void" offset="179" glxropcode="106" category="VERSION_1_0" wglflags="small-data" version="1.0" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexParameteri" return="void" offset="180" glxropcode="107" category="VERSION_1_0" wglflags="small-data" version="1.0" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="TexParameteriv" return="void" offset="181" glxropcode="108" category="VERSION_1_0" wglflags="small-data" version="1.0" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexImage1D" return="void" offset="182" glxropcode="109" dlflags="handcode" version="1.0" category="VERSION_1_0" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureComponentCount" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="TexImage2D" return="void" offset="183" glxropcode="110" dlflags="handcode" version="1.0" category="VERSION_1_0" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureComponentCount" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="DrawBuffer" return="void" offset="202" version="1.0" glxropcode="126" category="VERSION_1_0" >
				<param name="mode" kind="value" type="DrawBufferMode" input="true" />
			</function>
			<function name="Clear" return="void" offset="203" version="1.0" glxropcode="127" category="VERSION_1_0" >
				<param name="mask" kind="value" type="ClearBufferMask" input="true" />
			</function>
			<function name="ClearColor" return="void" offset="206" version="1.0" glxropcode="130" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorF" input="true" />
				<param name="green" kind="value" type="ColorF" input="true" />
				<param name="blue" kind="value" type="ColorF" input="true" />
				<param name="alpha" kind="value" type="ColorF" input="true" />
			</function>
			<function name="ClearStencil" return="void" offset="207" version="1.0" glxropcode="131" category="VERSION_1_0" >
				<param name="s" kind="value" type="StencilValue" input="true" />
			</function>
			<function name="ClearDepth" return="void" offset="208" version="1.0" glxropcode="132" category="VERSION_1_0" >
				<param name="depth" kind="value" type="Float64" input="true" />
			</function>
			<function name="StencilMask" return="void" offset="209" version="1.0" glxropcode="133" category="VERSION_1_0" >
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
			</function>
			<function name="ColorMask" return="void" offset="210" version="1.0" glxropcode="134" category="VERSION_1_0" >
				<param name="red" kind="value" type="Boolean" input="true" />
				<param name="green" kind="value" type="Boolean" input="true" />
				<param name="blue" kind="value" type="Boolean" input="true" />
				<param name="alpha" kind="value" type="Boolean" input="true" />
			</function>
			<function name="DepthMask" return="void" offset="211" version="1.0" glxropcode="135" category="VERSION_1_0" >
				<param name="flag" kind="value" type="Boolean" input="true" />
			</function>
			<function name="Disable" return="void" offset="214" glxropcode="138" version="1.0" category="VERSION_1_0" dlflags="handcode" glxflags="client-handcode" >
				<param name="cap" kind="value" type="EnableCap" input="true" />
			</function>
			<function name="Enable" return="void" offset="215" glxropcode="139" version="1.0" category="VERSION_1_0" dlflags="handcode" glxflags="client-handcode" >
				<param name="cap" kind="value" type="EnableCap" input="true" />
			</function>
			<function name="Finish" return="void" offset="216" glxsingle="108" category="VERSION_1_0" dlflags="notlistable" version="1.0" glxflags="client-handcode" />
			<function name="Flush" return="void" offset="217" glxsingle="142" category="VERSION_1_0" dlflags="notlistable" version="1.0" glxflags="client-handcode" />
			<function name="BlendFunc" return="void" offset="241" version="1.0" glxropcode="160" category="VERSION_1_0" >
				<param name="sfactor" kind="value" type="BlendingFactorSrc" input="true" />
				<param name="dfactor" kind="value" type="BlendingFactorDest" input="true" />
			</function>
			<function name="LogicOp" return="void" offset="242" version="1.0" glxropcode="161" category="VERSION_1_0" >
				<param name="opcode" kind="value" type="LogicOp" input="true" />
			</function>
			<function name="StencilFunc" return="void" offset="243" version="1.0" glxropcode="162" category="VERSION_1_0" >
				<param name="func" kind="value" type="StencilFunction" input="true" />
				<param name="ref" kind="value" type="StencilValue" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
			</function>
			<function name="StencilOp" return="void" offset="244" version="1.0" glxropcode="163" category="VERSION_1_0" >
				<param name="fail" kind="value" type="StencilOp" input="true" />
				<param name="zfail" kind="value" type="StencilOp" input="true" />
				<param name="zpass" kind="value" type="StencilOp" input="true" />
			</function>
			<function name="DepthFunc" return="void" offset="245" version="1.0" glxropcode="164" category="VERSION_1_0" >
				<param name="func" kind="value" type="DepthFunction" input="true" />
			</function>
			<function name="PixelStoref" return="void" offset="249" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="109" wglflags="batchable" glxflags="client-handcode" >
				<param name="pname" kind="value" type="PixelStoreParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PixelStorei" return="void" offset="250" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="110" wglflags="batchable" glxflags="client-handcode" >
				<param name="pname" kind="value" type="PixelStoreParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="ReadBuffer" return="void" offset="254" version="1.0" glxropcode="171" category="VERSION_1_0" >
				<param name="mode" kind="value" type="ReadBufferMode" input="true" />
			</function>
			<function name="ReadPixels" return="void" offset="256" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="111" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="false" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="GetBooleanv" return="void" offset="258" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="112" wglflags="small-data" glxflags="client-handcode" >
				<param name="pname" kind="value" type="GetPName" input="true" />
				<param name="params" kind="array" type="Boolean" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetDoublev" return="void" offset="260" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="114" wglflags="small-data" glxflags="client-handcode" >
				<param name="pname" kind="value" type="GetPName" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetError" return="ErrorCode" offset="261" glxsingle="115" category="VERSION_1_0" dlflags="notlistable" version="1.0" glxflags="client-handcode" />
			<function name="GetFloatv" return="void" offset="262" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="116" wglflags="small-data" glxflags="client-handcode" >
				<param name="pname" kind="value" type="GetPName" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetIntegerv" return="void" offset="263" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="117" wglflags="small-data" glxflags="client-handcode" >
				<param name="pname" kind="value" type="GetPName" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetString" return="String" offset="275" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="129" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="name" kind="value" type="StringName" input="true" />
			</function>
			<function name="GetTexImage" return="void" offset="281" dlflags="notlistable" version="1.0" category="VERSION_1_0" glxsingle="135" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="false" compute="[COMPSIZE(target/level/format/type)]" />
			</function>
			<function name="GetTexParameterfv" return="void" offset="282" glxsingle="136" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexParameteriv" return="void" offset="283" glxsingle="137" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexLevelParameterfv" return="void" offset="284" glxsingle="138" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexLevelParameteriv" return="void" offset="285" glxsingle="139" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="IsEnabled" return="Boolean" offset="286" dlflags="notlistable" category="VERSION_1_0" glxsingle="140" version="1.0" glxflags="client-handcode" >
				<param name="cap" kind="value" type="EnableCap" input="true" />
			</function>
			<function name="DepthRange" return="void" offset="288" version="1.0" glxropcode="174" category="VERSION_1_0" >
				<param name="near" kind="value" type="Float64" input="true" />
				<param name="far" kind="value" type="Float64" input="true" />
			</function>
			<function name="Viewport" return="void" offset="305" version="1.0" glxropcode="191" category="VERSION_1_0" >
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="NewList" return="void" offset="0" deprecated="3.1" profile="compatibility" glxsingle="101" category="VERSION_1_0" version="1.0" wglflags="batchable" dlflags="notlistable" >
				<param name="list" kind="value" type="List" input="true" />
				<param name="mode" kind="value" type="ListMode" input="true" />
			</function>
			<function name="EndList" return="void" offset="1" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" glxsingle="102" wglflags="batchable" dlflags="notlistable" />
			<function name="CallList" return="void" offset="2" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="1" version="1.0" >
				<param name="list" kind="value" type="List" input="true" />
			</function>
			<function name="CallLists" return="void" offset="3" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxropcode="2" glxflags="client-handcode" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="ListNameType" input="true" />
				<param name="lists" kind="array" type="Void" input="true" compute="[COMPSIZE(n/type)]" />
			</function>
			<function name="DeleteLists" return="void" offset="4" deprecated="3.1" profile="compatibility" glxsingle="103" category="VERSION_1_0" version="1.0" wglflags="batchable" dlflags="notlistable" >
				<param name="list" kind="value" type="List" input="true" />
				<param name="range" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GenLists" return="List" offset="5" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxsingle="104" dlflags="notlistable" >
				<param name="range" kind="value" type="SizeI" input="true" />
			</function>
			<function name="ListBase" return="void" offset="6" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="3" version="1.0" >
				<param name="base" kind="value" type="List" input="true" />
			</function>
			<function name="Begin" return="void" offset="7" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="4" version="1.0" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
			</function>
			<function name="Bitmap" return="void" offset="8" deprecated="3.1" dlflags="handcode" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="5" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="xorig" kind="value" type="CoordF" input="true" />
				<param name="yorig" kind="value" type="CoordF" input="true" />
				<param name="xmove" kind="value" type="CoordF" input="true" />
				<param name="ymove" kind="value" type="CoordF" input="true" />
				<param name="bitmap" kind="array" type="UInt8" input="true" compute="[COMPSIZE(width/height)]" />
			</function>
			<function name="Color3b" return="void" offset="9" vectorequiv="Color3bv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorB" input="true" />
				<param name="green" kind="value" type="ColorB" input="true" />
				<param name="blue" kind="value" type="ColorB" input="true" />
			</function>
			<function name="Color3bv" return="void" offset="10" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="6" version="1.0" >
				<param name="v" kind="array" type="ColorB" input="true" compute="[3]" />
			</function>
			<function name="Color3d" return="void" offset="11" vectorequiv="Color3dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorD" input="true" />
				<param name="green" kind="value" type="ColorD" input="true" />
				<param name="blue" kind="value" type="ColorD" input="true" />
			</function>
			<function name="Color3dv" return="void" offset="12" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="7" version="1.0" >
				<param name="v" kind="array" type="ColorD" input="true" compute="[3]" />
			</function>
			<function name="Color3f" return="void" offset="13" vectorequiv="Color3fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorF" input="true" />
				<param name="green" kind="value" type="ColorF" input="true" />
				<param name="blue" kind="value" type="ColorF" input="true" />
			</function>
			<function name="Color3fv" return="void" offset="14" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="8" version="1.0" >
				<param name="v" kind="array" type="ColorF" input="true" compute="[3]" />
			</function>
			<function name="Color3i" return="void" offset="15" vectorequiv="Color3iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorI" input="true" />
				<param name="green" kind="value" type="ColorI" input="true" />
				<param name="blue" kind="value" type="ColorI" input="true" />
			</function>
			<function name="Color3iv" return="void" offset="16" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="9" version="1.0" >
				<param name="v" kind="array" type="ColorI" input="true" compute="[3]" />
			</function>
			<function name="Color3s" return="void" offset="17" vectorequiv="Color3sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorS" input="true" />
				<param name="green" kind="value" type="ColorS" input="true" />
				<param name="blue" kind="value" type="ColorS" input="true" />
			</function>
			<function name="Color3sv" return="void" offset="18" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="10" version="1.0" >
				<param name="v" kind="array" type="ColorS" input="true" compute="[3]" />
			</function>
			<function name="Color3ub" return="void" offset="19" vectorequiv="Color3ubv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorUB" input="true" />
				<param name="green" kind="value" type="ColorUB" input="true" />
				<param name="blue" kind="value" type="ColorUB" input="true" />
			</function>
			<function name="Color3ubv" return="void" offset="20" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="11" version="1.0" >
				<param name="v" kind="array" type="ColorUB" input="true" compute="[3]" />
			</function>
			<function name="Color3ui" return="void" offset="21" vectorequiv="Color3uiv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorUI" input="true" />
				<param name="green" kind="value" type="ColorUI" input="true" />
				<param name="blue" kind="value" type="ColorUI" input="true" />
			</function>
			<function name="Color3uiv" return="void" offset="22" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="12" version="1.0" >
				<param name="v" kind="array" type="ColorUI" input="true" compute="[3]" />
			</function>
			<function name="Color3us" return="void" offset="23" vectorequiv="Color3usv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorUS" input="true" />
				<param name="green" kind="value" type="ColorUS" input="true" />
				<param name="blue" kind="value" type="ColorUS" input="true" />
			</function>
			<function name="Color3usv" return="void" offset="24" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="13" version="1.0" >
				<param name="v" kind="array" type="ColorUS" input="true" compute="[3]" />
			</function>
			<function name="Color4b" return="void" offset="25" vectorequiv="Color4bv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorB" input="true" />
				<param name="green" kind="value" type="ColorB" input="true" />
				<param name="blue" kind="value" type="ColorB" input="true" />
				<param name="alpha" kind="value" type="ColorB" input="true" />
			</function>
			<function name="Color4bv" return="void" offset="26" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="14" version="1.0" >
				<param name="v" kind="array" type="ColorB" input="true" compute="[4]" />
			</function>
			<function name="Color4d" return="void" offset="27" vectorequiv="Color4dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorD" input="true" />
				<param name="green" kind="value" type="ColorD" input="true" />
				<param name="blue" kind="value" type="ColorD" input="true" />
				<param name="alpha" kind="value" type="ColorD" input="true" />
			</function>
			<function name="Color4dv" return="void" offset="28" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="15" version="1.0" >
				<param name="v" kind="array" type="ColorD" input="true" compute="[4]" />
			</function>
			<function name="Color4f" return="void" offset="29" vectorequiv="Color4fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorF" input="true" />
				<param name="green" kind="value" type="ColorF" input="true" />
				<param name="blue" kind="value" type="ColorF" input="true" />
				<param name="alpha" kind="value" type="ColorF" input="true" />
			</function>
			<function name="Color4fv" return="void" offset="30" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="16" version="1.0" >
				<param name="v" kind="array" type="ColorF" input="true" compute="[4]" />
			</function>
			<function name="Color4i" return="void" offset="31" vectorequiv="Color4iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorI" input="true" />
				<param name="green" kind="value" type="ColorI" input="true" />
				<param name="blue" kind="value" type="ColorI" input="true" />
				<param name="alpha" kind="value" type="ColorI" input="true" />
			</function>
			<function name="Color4iv" return="void" offset="32" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="17" version="1.0" >
				<param name="v" kind="array" type="ColorI" input="true" compute="[4]" />
			</function>
			<function name="Color4s" return="void" offset="33" vectorequiv="Color4sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorS" input="true" />
				<param name="green" kind="value" type="ColorS" input="true" />
				<param name="blue" kind="value" type="ColorS" input="true" />
				<param name="alpha" kind="value" type="ColorS" input="true" />
			</function>
			<function name="Color4sv" return="void" offset="34" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="18" version="1.0" >
				<param name="v" kind="array" type="ColorS" input="true" compute="[4]" />
			</function>
			<function name="Color4ub" return="void" offset="35" vectorequiv="Color4ubv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorUB" input="true" />
				<param name="green" kind="value" type="ColorUB" input="true" />
				<param name="blue" kind="value" type="ColorUB" input="true" />
				<param name="alpha" kind="value" type="ColorUB" input="true" />
			</function>
			<function name="Color4ubv" return="void" offset="36" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="19" version="1.0" >
				<param name="v" kind="array" type="ColorUB" input="true" compute="[4]" />
			</function>
			<function name="Color4ui" return="void" offset="37" vectorequiv="Color4uiv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorUI" input="true" />
				<param name="green" kind="value" type="ColorUI" input="true" />
				<param name="blue" kind="value" type="ColorUI" input="true" />
				<param name="alpha" kind="value" type="ColorUI" input="true" />
			</function>
			<function name="Color4uiv" return="void" offset="38" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="20" version="1.0" >
				<param name="v" kind="array" type="ColorUI" input="true" compute="[4]" />
			</function>
			<function name="Color4us" return="void" offset="39" vectorequiv="Color4usv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="red" kind="value" type="ColorUS" input="true" />
				<param name="green" kind="value" type="ColorUS" input="true" />
				<param name="blue" kind="value" type="ColorUS" input="true" />
				<param name="alpha" kind="value" type="ColorUS" input="true" />
			</function>
			<function name="Color4usv" return="void" offset="40" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="21" version="1.0" >
				<param name="v" kind="array" type="ColorUS" input="true" compute="[4]" />
			</function>
			<function name="EdgeFlag" return="void" offset="41" vectorequiv="EdgeFlagv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="flag" kind="value" type="Boolean" input="true" />
			</function>
			<function name="EdgeFlagv" return="void" offset="42" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="22" version="1.0" >
				<param name="flag" kind="reference" type="Boolean" input="true" />
			</function>
			<function name="End" return="void" offset="43" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="23" />
			<function name="Indexd" return="void" offset="44" vectorequiv="Indexdv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="c" kind="value" type="ColorIndexValueD" input="true" />
			</function>
			<function name="Indexdv" return="void" offset="45" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="24" version="1.0" >
				<param name="c" kind="array" type="ColorIndexValueD" input="true" compute="[1]" />
			</function>
			<function name="Indexf" return="void" offset="46" vectorequiv="Indexfv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="c" kind="value" type="ColorIndexValueF" input="true" />
			</function>
			<function name="Indexfv" return="void" offset="47" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="25" version="1.0" >
				<param name="c" kind="array" type="ColorIndexValueF" input="true" compute="[1]" />
			</function>
			<function name="Indexi" return="void" offset="48" vectorequiv="Indexiv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="c" kind="value" type="ColorIndexValueI" input="true" />
			</function>
			<function name="Indexiv" return="void" offset="49" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="26" version="1.0" >
				<param name="c" kind="array" type="ColorIndexValueI" input="true" compute="[1]" />
			</function>
			<function name="Indexs" return="void" offset="50" vectorequiv="Indexsv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="c" kind="value" type="ColorIndexValueS" input="true" />
			</function>
			<function name="Indexsv" return="void" offset="51" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="27" version="1.0" >
				<param name="c" kind="array" type="ColorIndexValueS" input="true" compute="[1]" />
			</function>
			<function name="Normal3b" return="void" offset="52" vectorequiv="Normal3bv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="nx" kind="value" type="Int8" input="true" />
				<param name="ny" kind="value" type="Int8" input="true" />
				<param name="nz" kind="value" type="Int8" input="true" />
			</function>
			<function name="Normal3bv" return="void" offset="53" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="28" version="1.0" >
				<param name="v" kind="array" type="Int8" input="true" compute="[3]" />
			</function>
			<function name="Normal3d" return="void" offset="54" vectorequiv="Normal3dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="nx" kind="value" type="CoordD" input="true" />
				<param name="ny" kind="value" type="CoordD" input="true" />
				<param name="nz" kind="value" type="CoordD" input="true" />
			</function>
			<function name="Normal3dv" return="void" offset="55" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="29" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="Normal3f" return="void" offset="56" vectorequiv="Normal3fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="nx" kind="value" type="CoordF" input="true" />
				<param name="ny" kind="value" type="CoordF" input="true" />
				<param name="nz" kind="value" type="CoordF" input="true" />
			</function>
			<function name="Normal3fv" return="void" offset="57" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="30" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="Normal3i" return="void" offset="58" vectorequiv="Normal3iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="nx" kind="value" type="Int32" input="true" />
				<param name="ny" kind="value" type="Int32" input="true" />
				<param name="nz" kind="value" type="Int32" input="true" />
			</function>
			<function name="Normal3iv" return="void" offset="59" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="31" version="1.0" >
				<param name="v" kind="array" type="Int32" input="true" compute="[3]" />
			</function>
			<function name="Normal3s" return="void" offset="60" vectorequiv="Normal3sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="nx" kind="value" type="Int16" input="true" />
				<param name="ny" kind="value" type="Int16" input="true" />
				<param name="nz" kind="value" type="Int16" input="true" />
			</function>
			<function name="Normal3sv" return="void" offset="61" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="32" version="1.0" >
				<param name="v" kind="array" type="Int16" input="true" compute="[3]" />
			</function>
			<function name="RasterPos2d" return="void" offset="62" vectorequiv="RasterPos2dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
			</function>
			<function name="RasterPos2dv" return="void" offset="63" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="33" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="RasterPos2f" return="void" offset="64" vectorequiv="RasterPos2fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
			</function>
			<function name="RasterPos2fv" return="void" offset="65" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="34" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="RasterPos2i" return="void" offset="66" vectorequiv="RasterPos2iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
			</function>
			<function name="RasterPos2iv" return="void" offset="67" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="35" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="RasterPos2s" return="void" offset="68" vectorequiv="RasterPos2sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
			</function>
			<function name="RasterPos2sv" return="void" offset="69" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="36" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="RasterPos3d" return="void" offset="70" vectorequiv="RasterPos3dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
				<param name="z" kind="value" type="CoordD" input="true" />
			</function>
			<function name="RasterPos3dv" return="void" offset="71" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="37" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="RasterPos3f" return="void" offset="72" vectorequiv="RasterPos3fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
				<param name="z" kind="value" type="CoordF" input="true" />
			</function>
			<function name="RasterPos3fv" return="void" offset="73" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="38" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="RasterPos3i" return="void" offset="74" vectorequiv="RasterPos3iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
				<param name="z" kind="value" type="CoordI" input="true" />
			</function>
			<function name="RasterPos3iv" return="void" offset="75" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="39" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[3]" />
			</function>
			<function name="RasterPos3s" return="void" offset="76" vectorequiv="RasterPos3sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
				<param name="z" kind="value" type="CoordS" input="true" />
			</function>
			<function name="RasterPos3sv" return="void" offset="77" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="40" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[3]" />
			</function>
			<function name="RasterPos4d" return="void" offset="78" vectorequiv="RasterPos4dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
				<param name="z" kind="value" type="CoordD" input="true" />
				<param name="w" kind="value" type="CoordD" input="true" />
			</function>
			<function name="RasterPos4dv" return="void" offset="79" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="41" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[4]" />
			</function>
			<function name="RasterPos4f" return="void" offset="80" vectorequiv="RasterPos4fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
				<param name="z" kind="value" type="CoordF" input="true" />
				<param name="w" kind="value" type="CoordF" input="true" />
			</function>
			<function name="RasterPos4fv" return="void" offset="81" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="42" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[4]" />
			</function>
			<function name="RasterPos4i" return="void" offset="82" vectorequiv="RasterPos4iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
				<param name="z" kind="value" type="CoordI" input="true" />
				<param name="w" kind="value" type="CoordI" input="true" />
			</function>
			<function name="RasterPos4iv" return="void" offset="83" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="43" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[4]" />
			</function>
			<function name="RasterPos4s" return="void" offset="84" vectorequiv="RasterPos4sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
				<param name="z" kind="value" type="CoordS" input="true" />
				<param name="w" kind="value" type="CoordS" input="true" />
			</function>
			<function name="RasterPos4sv" return="void" offset="85" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="44" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[4]" />
			</function>
			<function name="Rectd" return="void" offset="86" vectorequiv="Rectdv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x1" kind="value" type="CoordD" input="true" />
				<param name="y1" kind="value" type="CoordD" input="true" />
				<param name="x2" kind="value" type="CoordD" input="true" />
				<param name="y2" kind="value" type="CoordD" input="true" />
			</function>
			<function name="Rectdv" return="void" offset="87" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="45" version="1.0" >
				<param name="v1" kind="array" type="CoordD" input="true" compute="[2]" />
				<param name="v2" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="Rectf" return="void" offset="88" vectorequiv="Rectfv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x1" kind="value" type="CoordF" input="true" />
				<param name="y1" kind="value" type="CoordF" input="true" />
				<param name="x2" kind="value" type="CoordF" input="true" />
				<param name="y2" kind="value" type="CoordF" input="true" />
			</function>
			<function name="Rectfv" return="void" offset="89" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="46" version="1.0" >
				<param name="v1" kind="array" type="CoordF" input="true" compute="[2]" />
				<param name="v2" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="Recti" return="void" offset="90" vectorequiv="Rectiv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x1" kind="value" type="CoordI" input="true" />
				<param name="y1" kind="value" type="CoordI" input="true" />
				<param name="x2" kind="value" type="CoordI" input="true" />
				<param name="y2" kind="value" type="CoordI" input="true" />
			</function>
			<function name="Rectiv" return="void" offset="91" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="47" version="1.0" >
				<param name="v1" kind="array" type="CoordI" input="true" compute="[2]" />
				<param name="v2" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="Rects" return="void" offset="92" vectorequiv="Rectsv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x1" kind="value" type="CoordS" input="true" />
				<param name="y1" kind="value" type="CoordS" input="true" />
				<param name="x2" kind="value" type="CoordS" input="true" />
				<param name="y2" kind="value" type="CoordS" input="true" />
			</function>
			<function name="Rectsv" return="void" offset="93" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="48" version="1.0" >
				<param name="v1" kind="array" type="CoordS" input="true" compute="[2]" />
				<param name="v2" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="TexCoord1d" return="void" offset="94" vectorequiv="TexCoord1dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordD" input="true" />
			</function>
			<function name="TexCoord1dv" return="void" offset="95" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="49" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[1]" />
			</function>
			<function name="TexCoord1f" return="void" offset="96" vectorequiv="TexCoord1fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordF" input="true" />
			</function>
			<function name="TexCoord1fv" return="void" offset="97" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="50" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[1]" />
			</function>
			<function name="TexCoord1i" return="void" offset="98" vectorequiv="TexCoord1iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordI" input="true" />
			</function>
			<function name="TexCoord1iv" return="void" offset="99" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="51" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[1]" />
			</function>
			<function name="TexCoord1s" return="void" offset="100" vectorequiv="TexCoord1sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordS" input="true" />
			</function>
			<function name="TexCoord1sv" return="void" offset="101" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="52" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[1]" />
			</function>
			<function name="TexCoord2d" return="void" offset="102" vectorequiv="TexCoord2dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
			</function>
			<function name="TexCoord2dv" return="void" offset="103" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="53" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="TexCoord2f" return="void" offset="104" vectorequiv="TexCoord2fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
			</function>
			<function name="TexCoord2fv" return="void" offset="105" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="54" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="TexCoord2i" return="void" offset="106" vectorequiv="TexCoord2iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
			</function>
			<function name="TexCoord2iv" return="void" offset="107" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="55" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="TexCoord2s" return="void" offset="108" vectorequiv="TexCoord2sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
			</function>
			<function name="TexCoord2sv" return="void" offset="109" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="56" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="TexCoord3d" return="void" offset="110" vectorequiv="TexCoord3dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
				<param name="r" kind="value" type="CoordD" input="true" />
			</function>
			<function name="TexCoord3dv" return="void" offset="111" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="57" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="TexCoord3f" return="void" offset="112" vectorequiv="TexCoord3fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
				<param name="r" kind="value" type="CoordF" input="true" />
			</function>
			<function name="TexCoord3fv" return="void" offset="113" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="58" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="TexCoord3i" return="void" offset="114" vectorequiv="TexCoord3iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
				<param name="r" kind="value" type="CoordI" input="true" />
			</function>
			<function name="TexCoord3iv" return="void" offset="115" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="59" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[3]" />
			</function>
			<function name="TexCoord3s" return="void" offset="116" vectorequiv="TexCoord3sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
				<param name="r" kind="value" type="CoordS" input="true" />
			</function>
			<function name="TexCoord3sv" return="void" offset="117" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="60" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[3]" />
			</function>
			<function name="TexCoord4d" return="void" offset="118" vectorequiv="TexCoord4dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
				<param name="r" kind="value" type="CoordD" input="true" />
				<param name="q" kind="value" type="CoordD" input="true" />
			</function>
			<function name="TexCoord4dv" return="void" offset="119" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="61" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[4]" />
			</function>
			<function name="TexCoord4f" return="void" offset="120" vectorequiv="TexCoord4fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
				<param name="r" kind="value" type="CoordF" input="true" />
				<param name="q" kind="value" type="CoordF" input="true" />
			</function>
			<function name="TexCoord4fv" return="void" offset="121" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="62" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[4]" />
			</function>
			<function name="TexCoord4i" return="void" offset="122" vectorequiv="TexCoord4iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
				<param name="r" kind="value" type="CoordI" input="true" />
				<param name="q" kind="value" type="CoordI" input="true" />
			</function>
			<function name="TexCoord4iv" return="void" offset="123" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="63" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[4]" />
			</function>
			<function name="TexCoord4s" return="void" offset="124" vectorequiv="TexCoord4sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
				<param name="r" kind="value" type="CoordS" input="true" />
				<param name="q" kind="value" type="CoordS" input="true" />
			</function>
			<function name="TexCoord4sv" return="void" offset="125" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="64" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[4]" />
			</function>
			<function name="Vertex2d" return="void" offset="126" vectorequiv="Vertex2dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
			</function>
			<function name="Vertex2dv" return="void" offset="127" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="65" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="Vertex2f" return="void" offset="128" vectorequiv="Vertex2fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
			</function>
			<function name="Vertex2fv" return="void" offset="129" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="66" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="Vertex2i" return="void" offset="130" vectorequiv="Vertex2iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
			</function>
			<function name="Vertex2iv" return="void" offset="131" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="67" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="Vertex2s" return="void" offset="132" vectorequiv="Vertex2sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
			</function>
			<function name="Vertex2sv" return="void" offset="133" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="68" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="Vertex3d" return="void" offset="134" vectorequiv="Vertex3dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
				<param name="z" kind="value" type="CoordD" input="true" />
			</function>
			<function name="Vertex3dv" return="void" offset="135" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="69" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="Vertex3f" return="void" offset="136" vectorequiv="Vertex3fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
				<param name="z" kind="value" type="CoordF" input="true" />
			</function>
			<function name="Vertex3fv" return="void" offset="137" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="70" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="Vertex3i" return="void" offset="138" vectorequiv="Vertex3iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
				<param name="z" kind="value" type="CoordI" input="true" />
			</function>
			<function name="Vertex3iv" return="void" offset="139" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="71" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[3]" />
			</function>
			<function name="Vertex3s" return="void" offset="140" vectorequiv="Vertex3sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
				<param name="z" kind="value" type="CoordS" input="true" />
			</function>
			<function name="Vertex3sv" return="void" offset="141" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="72" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[3]" />
			</function>
			<function name="Vertex4d" return="void" offset="142" vectorequiv="Vertex4dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
				<param name="z" kind="value" type="CoordD" input="true" />
				<param name="w" kind="value" type="CoordD" input="true" />
			</function>
			<function name="Vertex4dv" return="void" offset="143" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="73" version="1.0" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[4]" />
			</function>
			<function name="Vertex4f" return="void" offset="144" vectorequiv="Vertex4fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
				<param name="z" kind="value" type="CoordF" input="true" />
				<param name="w" kind="value" type="CoordF" input="true" />
			</function>
			<function name="Vertex4fv" return="void" offset="145" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="74" version="1.0" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[4]" />
			</function>
			<function name="Vertex4i" return="void" offset="146" vectorequiv="Vertex4iv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
				<param name="z" kind="value" type="CoordI" input="true" />
				<param name="w" kind="value" type="CoordI" input="true" />
			</function>
			<function name="Vertex4iv" return="void" offset="147" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="75" version="1.0" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[4]" />
			</function>
			<function name="Vertex4s" return="void" offset="148" vectorequiv="Vertex4sv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
				<param name="z" kind="value" type="CoordS" input="true" />
				<param name="w" kind="value" type="CoordS" input="true" />
			</function>
			<function name="Vertex4sv" return="void" offset="149" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="76" version="1.0" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[4]" />
			</function>
			<function name="ClipPlane" return="void" offset="150" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="77" version="1.0" >
				<param name="plane" kind="value" type="ClipPlaneName" input="true" />
				<param name="equation" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="ColorMaterial" return="void" offset="151" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="78" version="1.0" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="mode" kind="value" type="ColorMaterialParameter" input="true" />
			</function>
			<function name="Fogf" return="void" offset="153" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="80" >
				<param name="pname" kind="value" type="FogParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="Fogfv" return="void" offset="154" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="81" >
				<param name="pname" kind="value" type="FogParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="Fogi" return="void" offset="155" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="82" >
				<param name="pname" kind="value" type="FogParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="Fogiv" return="void" offset="156" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="83" >
				<param name="pname" kind="value" type="FogParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="Lightf" return="void" offset="159" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="86" >
				<param name="light" kind="value" type="LightName" input="true" />
				<param name="pname" kind="value" type="LightParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="Lightfv" return="void" offset="160" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="87" >
				<param name="light" kind="value" type="LightName" input="true" />
				<param name="pname" kind="value" type="LightParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="Lighti" return="void" offset="161" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="88" >
				<param name="light" kind="value" type="LightName" input="true" />
				<param name="pname" kind="value" type="LightParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="Lightiv" return="void" offset="162" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="89" >
				<param name="light" kind="value" type="LightName" input="true" />
				<param name="pname" kind="value" type="LightParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="LightModelf" return="void" offset="163" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="90" >
				<param name="pname" kind="value" type="LightModelParameter" input="true" />
				<param name="param" kind="value" type="Float32" input="true" />
			</function>
			<function name="LightModelfv" return="void" offset="164" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="91" >
				<param name="pname" kind="value" type="LightModelParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="LightModeli" return="void" offset="165" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="92" >
				<param name="pname" kind="value" type="LightModelParameter" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="LightModeliv" return="void" offset="166" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="93" >
				<param name="pname" kind="value" type="LightModelParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="LineStipple" return="void" offset="167" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="94" version="1.0" >
				<param name="factor" kind="value" type="CheckedInt32" input="true" />
				<param name="pattern" kind="value" type="LineStipple" input="true" />
			</function>
			<function name="Materialf" return="void" offset="169" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="96" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="Materialfv" return="void" offset="170" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="97" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="Materiali" return="void" offset="171" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="98" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="Materialiv" return="void" offset="172" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="99" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PolygonStipple" return="void" offset="175" deprecated="3.1" dlflags="handcode" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="102" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="mask" kind="array" type="UInt8" input="true" compute="[COMPSIZE()]" />
			</function>
			<function name="ShadeModel" return="void" offset="177" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="104" version="1.0" >
				<param name="mode" kind="value" type="ShadingModel" input="true" />
			</function>
			<function name="TexEnvf" return="void" offset="184" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="111" >
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="TexEnvfv" return="void" offset="185" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="112" >
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexEnvi" return="void" offset="186" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="113" >
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="TexEnviv" return="void" offset="187" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="114" >
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexGend" return="void" offset="188" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="115" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="param" kind="value" type="Float64" input="true" />
			</function>
			<function name="TexGendv" return="void" offset="189" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="116" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="Float64" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexGenf" return="void" offset="190" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="117" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="TexGenfv" return="void" offset="191" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="118" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexGeni" return="void" offset="192" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="119" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="TexGeniv" return="void" offset="193" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" wglflags="small-data" glxropcode="120" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FeedbackBuffer" return="void" offset="194" deprecated="3.1" dlflags="notlistable" profile="compatibility" version="1.0" category="VERSION_1_0" glxsingle="105" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="size" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="FeedbackType" input="true" />
				<param name="buffer" kind="array" type="FeedbackElement" input="false" compute="[size] retained" />
			</function>
			<function name="SelectBuffer" return="void" offset="195" deprecated="3.1" dlflags="notlistable" profile="compatibility" version="1.0" category="VERSION_1_0" glxsingle="106" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="size" kind="value" type="SizeI" input="true" />
				<param name="buffer" kind="array" type="SelectName" input="false" compute="[size] retained" />
			</function>
			<function name="RenderMode" return="Int32" offset="196" deprecated="3.1" dlflags="notlistable" profile="compatibility" version="1.0" category="VERSION_1_0" glxsingle="107" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="mode" kind="value" type="RenderingMode" input="true" />
			</function>
			<function name="InitNames" return="void" offset="197" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="121" />
			<function name="LoadName" return="void" offset="198" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="122" version="1.0" >
				<param name="name" kind="value" type="SelectName" input="true" />
			</function>
			<function name="PassThrough" return="void" offset="199" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="123" version="1.0" >
				<param name="token" kind="value" type="FeedbackElement" input="true" />
			</function>
			<function name="PopName" return="void" offset="200" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="124" />
			<function name="PushName" return="void" offset="201" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="125" version="1.0" >
				<param name="name" kind="value" type="SelectName" input="true" />
			</function>
			<function name="ClearAccum" return="void" offset="204" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="128" version="1.0" >
				<param name="red" kind="value" type="Float32" input="true" />
				<param name="green" kind="value" type="Float32" input="true" />
				<param name="blue" kind="value" type="Float32" input="true" />
				<param name="alpha" kind="value" type="Float32" input="true" />
			</function>
			<function name="ClearIndex" return="void" offset="205" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="129" version="1.0" >
				<param name="c" kind="value" type="MaskedColorIndexValueF" input="true" />
			</function>
			<function name="IndexMask" return="void" offset="212" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="136" version="1.0" >
				<param name="mask" kind="value" type="MaskedColorIndexValueI" input="true" />
			</function>
			<function name="Accum" return="void" offset="213" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="137" version="1.0" >
				<param name="op" kind="value" type="AccumOp" input="true" />
				<param name="value" kind="value" type="CoordF" input="true" />
			</function>
			<function name="PopAttrib" return="void" offset="218" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="141" />
			<function name="PushAttrib" return="void" offset="219" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="142" version="1.0" >
				<param name="mask" kind="value" type="AttribMask" input="true" />
			</function>
			<function name="Map1d" return="void" offset="220" deprecated="3.1" dlflags="handcode" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="143" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="MapTarget" input="true" />
				<param name="u1" kind="value" type="CoordD" input="true" />
				<param name="u2" kind="value" type="CoordD" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="order" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordD" input="true" compute="[COMPSIZE(target/stride/order)]" />
			</function>
			<function name="Map1f" return="void" offset="221" deprecated="3.1" dlflags="handcode" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="144" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="MapTarget" input="true" />
				<param name="u1" kind="value" type="CoordF" input="true" />
				<param name="u2" kind="value" type="CoordF" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="order" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordF" input="true" compute="[COMPSIZE(target/stride/order)]" />
			</function>
			<function name="Map2d" return="void" offset="222" deprecated="3.1" dlflags="handcode" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="145" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="MapTarget" input="true" />
				<param name="u1" kind="value" type="CoordD" input="true" />
				<param name="u2" kind="value" type="CoordD" input="true" />
				<param name="ustride" kind="value" type="Int32" input="true" />
				<param name="uorder" kind="value" type="CheckedInt32" input="true" />
				<param name="v1" kind="value" type="CoordD" input="true" />
				<param name="v2" kind="value" type="CoordD" input="true" />
				<param name="vstride" kind="value" type="Int32" input="true" />
				<param name="vorder" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordD" input="true" compute="[COMPSIZE(target/ustride/uorder/vstride/vorder)]" />
			</function>
			<function name="Map2f" return="void" offset="223" deprecated="3.1" dlflags="handcode" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="146" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="MapTarget" input="true" />
				<param name="u1" kind="value" type="CoordF" input="true" />
				<param name="u2" kind="value" type="CoordF" input="true" />
				<param name="ustride" kind="value" type="Int32" input="true" />
				<param name="uorder" kind="value" type="CheckedInt32" input="true" />
				<param name="v1" kind="value" type="CoordF" input="true" />
				<param name="v2" kind="value" type="CoordF" input="true" />
				<param name="vstride" kind="value" type="Int32" input="true" />
				<param name="vorder" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordF" input="true" compute="[COMPSIZE(target/ustride/uorder/vstride/vorder)]" />
			</function>
			<function name="MapGrid1d" return="void" offset="224" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="147" version="1.0" >
				<param name="un" kind="value" type="Int32" input="true" />
				<param name="u1" kind="value" type="CoordD" input="true" />
				<param name="u2" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MapGrid1f" return="void" offset="225" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="148" version="1.0" >
				<param name="un" kind="value" type="Int32" input="true" />
				<param name="u1" kind="value" type="CoordF" input="true" />
				<param name="u2" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MapGrid2d" return="void" offset="226" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="149" version="1.0" >
				<param name="un" kind="value" type="Int32" input="true" />
				<param name="u1" kind="value" type="CoordD" input="true" />
				<param name="u2" kind="value" type="CoordD" input="true" />
				<param name="vn" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="CoordD" input="true" />
				<param name="v2" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MapGrid2f" return="void" offset="227" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="150" version="1.0" >
				<param name="un" kind="value" type="Int32" input="true" />
				<param name="u1" kind="value" type="CoordF" input="true" />
				<param name="u2" kind="value" type="CoordF" input="true" />
				<param name="vn" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="CoordF" input="true" />
				<param name="v2" kind="value" type="CoordF" input="true" />
			</function>
			<function name="EvalCoord1d" return="void" offset="228" vectorequiv="EvalCoord1dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="u" kind="value" type="CoordD" input="true" />
			</function>
			<function name="EvalCoord1dv" return="void" offset="229" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="151" version="1.0" >
				<param name="u" kind="array" type="CoordD" input="true" compute="[1]" />
			</function>
			<function name="EvalCoord1f" return="void" offset="230" vectorequiv="EvalCoord1fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="u" kind="value" type="CoordF" input="true" />
			</function>
			<function name="EvalCoord1fv" return="void" offset="231" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="152" version="1.0" >
				<param name="u" kind="array" type="CoordF" input="true" compute="[1]" />
			</function>
			<function name="EvalCoord2d" return="void" offset="232" vectorequiv="EvalCoord2dv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="u" kind="value" type="CoordD" input="true" />
				<param name="v" kind="value" type="CoordD" input="true" />
			</function>
			<function name="EvalCoord2dv" return="void" offset="233" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="153" version="1.0" >
				<param name="u" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="EvalCoord2f" return="void" offset="234" vectorequiv="EvalCoord2fv" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" >
				<param name="u" kind="value" type="CoordF" input="true" />
				<param name="v" kind="value" type="CoordF" input="true" />
			</function>
			<function name="EvalCoord2fv" return="void" offset="235" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="154" version="1.0" >
				<param name="u" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="EvalMesh1" return="void" offset="236" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="155" version="1.0" >
				<param name="mode" kind="value" type="MeshMode1" input="true" />
				<param name="i1" kind="value" type="CheckedInt32" input="true" />
				<param name="i2" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="EvalPoint1" return="void" offset="237" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="156" version="1.0" >
				<param name="i" kind="value" type="Int32" input="true" />
			</function>
			<function name="EvalMesh2" return="void" offset="238" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="157" version="1.0" >
				<param name="mode" kind="value" type="MeshMode2" input="true" />
				<param name="i1" kind="value" type="CheckedInt32" input="true" />
				<param name="i2" kind="value" type="CheckedInt32" input="true" />
				<param name="j1" kind="value" type="CheckedInt32" input="true" />
				<param name="j2" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="EvalPoint2" return="void" offset="239" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="158" version="1.0" >
				<param name="i" kind="value" type="CheckedInt32" input="true" />
				<param name="j" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="AlphaFunc" return="void" offset="240" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="159" version="1.0" >
				<param name="func" kind="value" type="AlphaFunction" input="true" />
				<param name="ref" kind="value" type="Float32" input="true" />
			</function>
			<function name="PixelZoom" return="void" offset="246" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="165" version="1.0" >
				<param name="xfactor" kind="value" type="Float32" input="true" />
				<param name="yfactor" kind="value" type="Float32" input="true" />
			</function>
			<function name="PixelTransferf" return="void" offset="247" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="166" version="1.0" >
				<param name="pname" kind="value" type="PixelTransferParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PixelTransferi" return="void" offset="248" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="167" version="1.0" >
				<param name="pname" kind="value" type="PixelTransferParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="PixelMapfv" return="void" offset="251" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxropcode="168" glxflags="client-handcode" >
				<param name="map" kind="value" type="PixelMap" input="true" />
				<param name="mapsize" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="Float32" input="true" compute="[mapsize]" />
			</function>
			<function name="PixelMapuiv" return="void" offset="252" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxropcode="169" glxflags="client-handcode" >
				<param name="map" kind="value" type="PixelMap" input="true" />
				<param name="mapsize" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="UInt32" input="true" compute="[mapsize]" />
			</function>
			<function name="PixelMapusv" return="void" offset="253" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxropcode="170" glxflags="client-handcode" >
				<param name="map" kind="value" type="PixelMap" input="true" />
				<param name="mapsize" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="UInt16" input="true" compute="[mapsize]" />
			</function>
			<function name="CopyPixels" return="void" offset="255" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="172" version="1.0" >
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="PixelCopyType" input="true" />
			</function>
			<function name="DrawPixels" return="void" offset="257" deprecated="3.1" dlflags="handcode" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="173" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="GetClipPlane" return="void" offset="259" deprecated="3.1" profile="compatibility" dlflags="notlistable" category="VERSION_1_0" glxsingle="113" version="1.0" glxflags="client-handcode" >
				<param name="plane" kind="value" type="ClipPlaneName" input="true" />
				<param name="equation" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="GetLightfv" return="void" offset="264" deprecated="3.1" profile="compatibility" glxsingle="118" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="light" kind="value" type="LightName" input="true" />
				<param name="pname" kind="value" type="LightParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetLightiv" return="void" offset="265" deprecated="3.1" profile="compatibility" glxsingle="119" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="light" kind="value" type="LightName" input="true" />
				<param name="pname" kind="value" type="LightParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMapdv" return="void" offset="266" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxsingle="120" dlflags="notlistable" >
				<param name="target" kind="value" type="MapTarget" input="true" />
				<param name="query" kind="value" type="GetMapQuery" input="true" />
				<param name="v" kind="array" type="Float64" input="false" compute="[COMPSIZE(target/query)]" />
			</function>
			<function name="GetMapfv" return="void" offset="267" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxsingle="121" dlflags="notlistable" >
				<param name="target" kind="value" type="MapTarget" input="true" />
				<param name="query" kind="value" type="GetMapQuery" input="true" />
				<param name="v" kind="array" type="Float32" input="false" compute="[COMPSIZE(target/query)]" />
			</function>
			<function name="GetMapiv" return="void" offset="268" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxsingle="122" dlflags="notlistable" >
				<param name="target" kind="value" type="MapTarget" input="true" />
				<param name="query" kind="value" type="GetMapQuery" input="true" />
				<param name="v" kind="array" type="Int32" input="false" compute="[COMPSIZE(target/query)]" />
			</function>
			<function name="GetMaterialfv" return="void" offset="269" deprecated="3.1" profile="compatibility" glxsingle="123" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMaterialiv" return="void" offset="270" deprecated="3.1" profile="compatibility" glxsingle="124" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetPixelMapfv" return="void" offset="271" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxsingle="125" dlflags="notlistable" >
				<param name="map" kind="value" type="PixelMap" input="true" />
				<param name="values" kind="array" type="Float32" input="false" compute="[COMPSIZE(map)]" />
			</function>
			<function name="GetPixelMapuiv" return="void" offset="272" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxsingle="126" dlflags="notlistable" >
				<param name="map" kind="value" type="PixelMap" input="true" />
				<param name="values" kind="array" type="UInt32" input="false" compute="[COMPSIZE(map)]" />
			</function>
			<function name="GetPixelMapusv" return="void" offset="273" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxsingle="127" dlflags="notlistable" >
				<param name="map" kind="value" type="PixelMap" input="true" />
				<param name="values" kind="array" type="UInt16" input="false" compute="[COMPSIZE(map)]" />
			</function>
			<function name="GetPolygonStipple" return="void" offset="274" deprecated="3.1" dlflags="notlistable" profile="compatibility" version="1.0" category="VERSION_1_0" glxsingle="128" wglflags="client-handcode" glxflags="client-handcode" >
				<param name="mask" kind="array" type="UInt8" input="false" compute="[COMPSIZE()]" />
			</function>
			<function name="GetTexEnvfv" return="void" offset="276" deprecated="3.1" profile="compatibility" glxsingle="130" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexEnviv" return="void" offset="277" deprecated="3.1" profile="compatibility" glxsingle="131" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexGendv" return="void" offset="278" deprecated="3.1" profile="compatibility" glxsingle="132" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexGenfv" return="void" offset="279" deprecated="3.1" profile="compatibility" glxsingle="133" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexGeniv" return="void" offset="280" deprecated="3.1" profile="compatibility" glxsingle="134" category="VERSION_1_0" version="1.0" wglflags="small-data" dlflags="notlistable" >
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="IsList" return="Boolean" offset="287" deprecated="3.1" profile="compatibility" category="VERSION_1_0" version="1.0" glxsingle="141" dlflags="notlistable" >
				<param name="list" kind="value" type="List" input="true" />
			</function>
			<function name="Frustum" return="void" offset="289" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="175" version="1.0" >
				<param name="left" kind="value" type="Float64" input="true" />
				<param name="right" kind="value" type="Float64" input="true" />
				<param name="bottom" kind="value" type="Float64" input="true" />
				<param name="top" kind="value" type="Float64" input="true" />
				<param name="zNear" kind="value" type="Float64" input="true" />
				<param name="zFar" kind="value" type="Float64" input="true" />
			</function>
			<function name="LoadIdentity" return="void" offset="290" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="176" />
			<function name="LoadMatrixf" return="void" offset="291" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="177" version="1.0" >
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="LoadMatrixd" return="void" offset="292" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="178" version="1.0" >
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="MatrixMode" return="void" offset="293" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="179" version="1.0" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
			</function>
			<function name="MultMatrixf" return="void" offset="294" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="180" version="1.0" >
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="MultMatrixd" return="void" offset="295" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="181" version="1.0" >
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="Ortho" return="void" offset="296" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="182" version="1.0" >
				<param name="left" kind="value" type="Float64" input="true" />
				<param name="right" kind="value" type="Float64" input="true" />
				<param name="bottom" kind="value" type="Float64" input="true" />
				<param name="top" kind="value" type="Float64" input="true" />
				<param name="zNear" kind="value" type="Float64" input="true" />
				<param name="zFar" kind="value" type="Float64" input="true" />
			</function>
			<function name="PopMatrix" return="void" offset="297" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="183" />
			<function name="PushMatrix" return="void" offset="298" deprecated="3.1" profile="compatibility" version="1.0" category="VERSION_1_0" glxropcode="184" />
			<function name="Rotated" return="void" offset="299" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="185" version="1.0" >
				<param name="angle" kind="value" type="Float64" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="Rotatef" return="void" offset="300" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="186" version="1.0" >
				<param name="angle" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="Scaled" return="void" offset="301" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="187" version="1.0" >
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="Scalef" return="void" offset="302" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="188" version="1.0" >
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="Translated" return="void" offset="303" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="189" version="1.0" >
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="Translatef" return="void" offset="304" deprecated="3.1" profile="compatibility" category="VERSION_1_0" glxropcode="190" version="1.0" >
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="DrawArrays" return="void" offset="310" glxropcode="193" version="1.1" category="VERSION_1_1" dlflags="handcode" glxflags="client-handcode" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DrawElements" return="void" offset="311" version="1.1" category="VERSION_1_1" dlflags="handcode" glxflags="client-handcode" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
			</function>
			<function name="GetPointerv" return="void" offset="329" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="pname" kind="value" type="GetPointervPName" input="true" />
				<param name="params" kind="reference" type="VoidPointer" input="false" />
			</function>
			<function name="PolygonOffset" return="void" offset="319" version="1.1" glxropcode="192" category="VERSION_1_1" >
				<param name="factor" kind="value" type="Float32" input="true" />
				<param name="units" kind="value" type="Float32" input="true" />
			</function>
			<function name="CopyTexImage1D" return="void" offset="323" glxropcode="4119" category="VERSION_1_1" version="1.1" glxflags="EXT" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="CopyTexImage2D" return="void" offset="324" glxropcode="4120" category="VERSION_1_1" version="1.1" glxflags="EXT" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="CopyTexSubImage1D" return="void" offset="325" glxropcode="4121" category="VERSION_1_1" version="1.1" glxflags="EXT" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="CopyTexSubImage2D" return="void" offset="326" glxropcode="4122" category="VERSION_1_1" version="1.1" glxflags="EXT" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TexSubImage1D" return="void" offset="332" glxropcode="4099" version="1.1" category="VERSION_1_1" dlflags="handcode" glxflags="EXT" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="TexSubImage2D" return="void" offset="333" glxropcode="4100" version="1.1" category="VERSION_1_1" dlflags="handcode" glxflags="EXT" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="BindTexture" return="void" offset="307" glxropcode="4117" category="VERSION_1_1" version="1.1" glxflags="EXT" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
			</function>
			<function name="DeleteTextures" return="void" offset="327" category="VERSION_1_1" version="1.1" glxsingle="144" dlflags="notlistable" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="textures" kind="array" type="Texture" input="true" compute="[n]" />
			</function>
			<function name="GenTextures" return="void" offset="328" category="VERSION_1_1" version="1.1" glxsingle="145" dlflags="notlistable" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="textures" kind="array" type="Texture" input="false" compute="[n]" />
			</function>
			<function name="IsTexture" return="Boolean" offset="330" category="VERSION_1_1" version="1.1" glxsingle="146" dlflags="notlistable" >
				<param name="texture" kind="value" type="Texture" input="true" />
			</function>
			<function name="ArrayElement" return="void" offset="306" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="handcode" glxflags="client-handcode" >
				<param name="i" kind="value" type="Int32" input="true" />
			</function>
			<function name="ColorPointer" return="void" offset="308" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="ColorPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="DisableClientState" return="void" offset="309" deprecated="3.1" profile="compatibility" category="VERSION_1_1" dlflags="notlistable" version="1.1" glxflags="client-handcode" >
				<param name="array" kind="value" type="EnableCap" input="true" />
			</function>
			<function name="EdgeFlagPointer" return="void" offset="312" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(stride)] retained" />
			</function>
			<function name="EnableClientState" return="void" offset="313" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="array" kind="value" type="EnableCap" input="true" />
			</function>
			<function name="IndexPointer" return="void" offset="314" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="type" kind="value" type="IndexPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="InterleavedArrays" return="void" offset="317" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="format" kind="value" type="InterleavedArrayFormat" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(format/stride)] retained" />
			</function>
			<function name="NormalPointer" return="void" offset="318" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="type" kind="value" type="NormalPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="TexCoordPointer" return="void" offset="320" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="TexCoordPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="VertexPointer" return="void" offset="321" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="AreTexturesResident" return="Boolean" offset="322" glxsingle="143" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="textures" kind="array" type="Texture" input="true" compute="[n]" />
				<param name="residences" kind="array" type="Boolean" input="false" compute="[n]" />
			</function>
			<function name="PrioritizeTextures" return="void" offset="331" deprecated="3.1" profile="compatibility" category="VERSION_1_1" glxropcode="4118" version="1.1" glxflags="EXT" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="textures" kind="array" type="Texture" input="true" compute="[n]" />
				<param name="priorities" kind="array" type="Float32" input="true" compute="[n]" />
			</function>
			<function name="Indexub" return="void" offset="315" vectorequiv="Indexubv" profile="compatibility" version="1.1" category="VERSION_1_1" >
				<param name="c" kind="value" type="ColorIndexValueUB" input="true" />
			</function>
			<function name="Indexubv" return="void" offset="316" glxropcode="194" profile="compatibility" category="VERSION_1_1" version="1.1" >
				<param name="c" kind="array" type="ColorIndexValueUB" input="true" compute="[1]" />
			</function>
			<function name="PopClientAttrib" return="void" offset="334" deprecated="3.1" profile="compatibility" version="1.1" category="VERSION_1_1" dlflags="notlistable" glxflags="client-handcode" />
			<function name="PushClientAttrib" return="void" offset="335" deprecated="3.1" profile="compatibility" category="VERSION_1_1" dlflags="notlistable" version="1.1" glxflags="client-handcode" >
				<param name="mask" kind="value" type="ClientAttribMask" input="true" />
			</function>
			<function name="BlendColor" return="void" offset="336" glxropcode="4096" category="VERSION_1_2" version="1.2" glxflags="EXT" >
				<param name="red" kind="value" type="ColorF" input="true" />
				<param name="green" kind="value" type="ColorF" input="true" />
				<param name="blue" kind="value" type="ColorF" input="true" />
				<param name="alpha" kind="value" type="ColorF" input="true" />
			</function>
			<function name="BlendEquation" return="void" offset="337" glxropcode="4097" category="VERSION_1_2" version="1.2" glxflags="EXT" >
				<param name="mode" kind="value" type="BlendEquationMode" input="true" />
			</function>
			<function name="DrawRangeElements" return="void" offset="338" version="1.2" category="VERSION_1_2" dlflags="handcode" glxflags="client-handcode" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="start" kind="value" type="UInt32" input="true" />
				<param name="end" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
			</function>
			<function name="TexImage3D" return="void" offset="371" glxropcode="4114" version="1.2" category="VERSION_1_2" dlflags="handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureComponentCount" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth)]" />
			</function>
			<function name="TexSubImage3D" return="void" offset="372" glxropcode="4115" version="1.2" category="VERSION_1_2" dlflags="handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth)]" />
			</function>
			<function name="CopyTexSubImage3D" return="void" offset="373" glxropcode="4123" category="VERSION_1_2" version="1.2" glxflags="EXT" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="ColorTable" return="void" offset="339" deprecated="3.1" profile="compatibility" dlflags="handcode" version="1.2" category="VERSION_1_2" glxropcode="2053" glxflags="client-handcode" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="table" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="ColorTableParameterfv" return="void" offset="340" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="2054" glxflags="EXT" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="pname" kind="value" type="ColorTableParameterPName" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ColorTableParameteriv" return="void" offset="341" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="2055" glxflags="EXT" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="pname" kind="value" type="ColorTableParameterPName" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="CopyColorTable" return="void" offset="342" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="2056" glxflags="EXT" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetColorTable" return="void" offset="343" deprecated="3.1" profile="compatibility" dlflags="notlistable" version="1.2" category="VERSION_1_2" glxsingle="147" glxflags="client-handcode" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="table" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetColorTableParameterfv" return="void" offset="344" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxsingle="148" dlflags="notlistable" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="pname" kind="value" type="GetColorTableParameterPName" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetColorTableParameteriv" return="void" offset="345" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxsingle="149" dlflags="notlistable" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="pname" kind="value" type="GetColorTableParameterPName" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ColorSubTable" return="void" offset="346" deprecated="3.1" profile="compatibility" dlflags="handcode" version="1.2" category="VERSION_1_2" glxropcode="195" glxflags="client-handcode" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="start" kind="value" type="SizeI" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="data" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/count)]" />
			</function>
			<function name="CopyColorSubTable" return="void" offset="347" deprecated="3.1" profile="compatibility" category="VERSION_1_2" glxropcode="196" version="1.2" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="start" kind="value" type="SizeI" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="ConvolutionFilter1D" return="void" offset="348" deprecated="3.1" profile="compatibility" dlflags="handcode" version="1.2" category="VERSION_1_2" glxropcode="4101" glxflags="client-handcode" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="image" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="ConvolutionFilter2D" return="void" offset="349" deprecated="3.1" profile="compatibility" dlflags="handcode" version="1.2" category="VERSION_1_2" glxropcode="4102" glxflags="client-handcode" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="image" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="ConvolutionParameterf" return="void" offset="350" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4103" glxflags="EXT" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameter" input="true" />
				<param name="params" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="ConvolutionParameterfv" return="void" offset="351" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4104" glxflags="EXT" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ConvolutionParameteri" return="void" offset="352" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4105" glxflags="EXT" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameter" input="true" />
				<param name="params" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="ConvolutionParameteriv" return="void" offset="353" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4106" glxflags="EXT" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="CopyConvolutionFilter1D" return="void" offset="354" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4107" glxflags="EXT" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="CopyConvolutionFilter2D" return="void" offset="355" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4108" glxflags="EXT" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetConvolutionFilter" return="void" offset="356" deprecated="3.1" profile="compatibility" dlflags="notlistable" version="1.2" category="VERSION_1_2" glxsingle="150" glxflags="client-handcode" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="image" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetConvolutionParameterfv" return="void" offset="357" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxsingle="151" dlflags="notlistable" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="pname" kind="value" type="GetConvolutionParameterPName" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetConvolutionParameteriv" return="void" offset="358" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxsingle="152" dlflags="notlistable" >
				<param name="target" kind="value" type="ConvolutionTarget" input="true" />
				<param name="pname" kind="value" type="GetConvolutionParameterPName" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetSeparableFilter" return="void" offset="359" deprecated="3.1" profile="compatibility" dlflags="notlistable" version="1.2" category="VERSION_1_2" glxsingle="153" glxflags="client-handcode" >
				<param name="target" kind="value" type="SeparableTarget" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="row" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
				<param name="column" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
				<param name="span" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="SeparableFilter2D" return="void" offset="360" deprecated="3.1" profile="compatibility" dlflags="handcode" version="1.2" category="VERSION_1_2" glxropcode="4109" glxflags="client-handcode" >
				<param name="target" kind="value" type="SeparableTarget" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="row" kind="array" type="Void" input="true" compute="[COMPSIZE(target/format/type/width)]" />
				<param name="column" kind="array" type="Void" input="true" compute="[COMPSIZE(target/format/type/height)]" />
			</function>
			<function name="GetHistogram" return="void" offset="361" deprecated="3.1" profile="compatibility" dlflags="notlistable" version="1.2" category="VERSION_1_2" glxsingle="154" glxflags="client-handcode" >
				<param name="target" kind="value" type="HistogramTarget" input="true" />
				<param name="reset" kind="value" type="Boolean" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="values" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetHistogramParameterfv" return="void" offset="362" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxsingle="155" dlflags="notlistable" >
				<param name="target" kind="value" type="HistogramTarget" input="true" />
				<param name="pname" kind="value" type="GetHistogramParameterPName" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetHistogramParameteriv" return="void" offset="363" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxsingle="156" dlflags="notlistable" >
				<param name="target" kind="value" type="HistogramTarget" input="true" />
				<param name="pname" kind="value" type="GetHistogramParameterPName" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMinmax" return="void" offset="364" deprecated="3.1" profile="compatibility" dlflags="notlistable" version="1.2" category="VERSION_1_2" glxsingle="157" glxflags="client-handcode" >
				<param name="target" kind="value" type="MinmaxTarget" input="true" />
				<param name="reset" kind="value" type="Boolean" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="values" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetMinmaxParameterfv" return="void" offset="365" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxsingle="158" dlflags="notlistable" >
				<param name="target" kind="value" type="MinmaxTarget" input="true" />
				<param name="pname" kind="value" type="GetMinmaxParameterPName" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMinmaxParameteriv" return="void" offset="366" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxsingle="159" dlflags="notlistable" >
				<param name="target" kind="value" type="MinmaxTarget" input="true" />
				<param name="pname" kind="value" type="GetMinmaxParameterPName" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="Histogram" return="void" offset="367" deprecated="3.1" profile="compatibility" dlflags="handcode" version="1.2" category="VERSION_1_2" glxropcode="4110" glxflags="EXT" >
				<param name="target" kind="value" type="HistogramTarget" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="sink" kind="value" type="Boolean" input="true" />
			</function>
			<function name="Minmax" return="void" offset="368" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4111" glxflags="EXT" >
				<param name="target" kind="value" type="MinmaxTarget" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="sink" kind="value" type="Boolean" input="true" />
			</function>
			<function name="ResetHistogram" return="void" offset="369" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4112" glxflags="EXT" >
				<param name="target" kind="value" type="HistogramTarget" input="true" />
			</function>
			<function name="ResetMinmax" return="void" offset="370" deprecated="3.1" profile="compatibility" category="VERSION_1_2" version="1.2" glxropcode="4113" glxflags="EXT" >
				<param name="target" kind="value" type="MinmaxTarget" input="true" />
			</function>
			<function name="ActiveTexture" return="void" offset="374" glxropcode="197" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="texture" kind="value" type="TextureUnit" input="true" />
			</function>
			<function name="SampleCoverage" return="void" offset="412" glxropcode="229" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="value" kind="value" type="Float32" input="true" />
				<param name="invert" kind="value" type="Boolean" input="true" />
			</function>
			<function name="CompressedTexImage3D" return="void" offset="554" glxropcode="216" dlflags="handcode" version="1.3" category="VERSION_1_3" wglflags="client-handcode" glxflags="ARB" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexImage2D" return="void" offset="555" glxropcode="215" dlflags="handcode" version="1.3" category="VERSION_1_3" wglflags="client-handcode" glxflags="ARB" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexImage1D" return="void" offset="556" glxropcode="214" dlflags="handcode" version="1.3" category="VERSION_1_3" wglflags="client-handcode" glxflags="ARB" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexSubImage3D" return="void" offset="557" glxropcode="219" dlflags="handcode" version="1.3" category="VERSION_1_3" wglflags="client-handcode" glxflags="ARB" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexSubImage2D" return="void" offset="558" glxropcode="218" dlflags="handcode" version="1.3" category="VERSION_1_3" wglflags="client-handcode" glxflags="ARB" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexSubImage1D" return="void" offset="559" glxropcode="217" dlflags="handcode" version="1.3" category="VERSION_1_3" wglflags="client-handcode" glxflags="ARB" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="GetCompressedTexImage" return="void" offset="560" dlflags="notlistable" version="1.3" category="VERSION_1_3" glxsingle="160" wglflags="client-handcode" glxflags="ARB" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="img" kind="array" type="CompressedTextureARB" input="false" compute="[COMPSIZE(target/level)]" />
			</function>
			<function name="ClientActiveTexture" return="void" offset="375" deprecated="3.1" profile="compatibility" version="1.3" category="VERSION_1_3" dlflags="notlistable" glxflags="ARB" >
				<param name="texture" kind="value" type="TextureUnit" input="true" />
			</function>
			<function name="MultiTexCoord1d" return="void" offset="376" vectorequiv="MultiTexCoord1dv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MultiTexCoord1dv" return="void" offset="377" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="198" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordD" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord1f" return="void" offset="378" vectorequiv="MultiTexCoord1fv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MultiTexCoord1fv" return="void" offset="379" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="199" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordF" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord1i" return="void" offset="380" vectorequiv="MultiTexCoord1iv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordI" input="true" />
			</function>
			<function name="MultiTexCoord1iv" return="void" offset="381" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="200" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordI" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord1s" return="void" offset="382" vectorequiv="MultiTexCoord1sv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordS" input="true" />
			</function>
			<function name="MultiTexCoord1sv" return="void" offset="383" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="201" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordS" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord2d" return="void" offset="384" vectorequiv="MultiTexCoord2dv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MultiTexCoord2dv" return="void" offset="385" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="202" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord2f" return="void" offset="386" vectorequiv="MultiTexCoord2fv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MultiTexCoord2fv" return="void" offset="387" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="203" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord2i" return="void" offset="388" vectorequiv="MultiTexCoord2iv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
			</function>
			<function name="MultiTexCoord2iv" return="void" offset="389" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="204" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord2s" return="void" offset="390" vectorequiv="MultiTexCoord2sv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
			</function>
			<function name="MultiTexCoord2sv" return="void" offset="391" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="205" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord3d" return="void" offset="392" vectorequiv="MultiTexCoord3dv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
				<param name="r" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MultiTexCoord3dv" return="void" offset="393" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="206" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord3f" return="void" offset="394" vectorequiv="MultiTexCoord3fv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
				<param name="r" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MultiTexCoord3fv" return="void" offset="395" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="207" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord3i" return="void" offset="396" vectorequiv="MultiTexCoord3iv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
				<param name="r" kind="value" type="CoordI" input="true" />
			</function>
			<function name="MultiTexCoord3iv" return="void" offset="397" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="208" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordI" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord3s" return="void" offset="398" vectorequiv="MultiTexCoord3sv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
				<param name="r" kind="value" type="CoordS" input="true" />
			</function>
			<function name="MultiTexCoord3sv" return="void" offset="399" deprecated="3.1" profile="compatibility" category="VERSION_1_3" glxropcode="209" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordS" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord4d" return="void" offset="400" vectorequiv="MultiTexCoord4dv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
				<param name="r" kind="value" type="CoordD" input="true" />
				<param name="q" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MultiTexCoord4dv" return="void" offset="401" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="210" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordD" input="true" compute="[4]" />
			</function>
			<function name="MultiTexCoord4f" return="void" offset="402" vectorequiv="MultiTexCoord4fv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
				<param name="r" kind="value" type="CoordF" input="true" />
				<param name="q" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MultiTexCoord4fv" return="void" offset="403" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="211" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordF" input="true" compute="[4]" />
			</function>
			<function name="MultiTexCoord4i" return="void" offset="404" vectorequiv="MultiTexCoord4iv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
				<param name="r" kind="value" type="CoordI" input="true" />
				<param name="q" kind="value" type="CoordI" input="true" />
			</function>
			<function name="MultiTexCoord4iv" return="void" offset="405" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="212" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordI" input="true" compute="[4]" />
			</function>
			<function name="MultiTexCoord4s" return="void" offset="406" vectorequiv="MultiTexCoord4sv" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
				<param name="r" kind="value" type="CoordS" input="true" />
				<param name="q" kind="value" type="CoordS" input="true" />
			</function>
			<function name="MultiTexCoord4sv" return="void" offset="407" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxropcode="213" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordS" input="true" compute="[4]" />
			</function>
			<function name="LoadTransposeMatrixf" return="void" offset="408" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="LoadTransposeMatrixd" return="void" offset="409" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="MultTransposeMatrixf" return="void" offset="410" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="MultTransposeMatrixd" return="void" offset="411" deprecated="3.1" profile="compatibility" category="VERSION_1_3" version="1.3" glxflags="ARB" >
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="BlendFuncSeparate" return="void" offset="537" version="1.4" glxropcode="4134" category="VERSION_1_4" >
				<param name="sfactorRGB" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="dfactorRGB" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="sfactorAlpha" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="dfactorAlpha" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
			</function>
			<function name="MultiDrawArrays" return="void" offset="644" version="1.4" glxropcode="?" category="VERSION_1_4" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="array" type="Int32" input="true" compute="[COMPSIZE(count)]" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[COMPSIZE(drawcount)]" />
				<param name="drawcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="MultiDrawElements" return="void" offset="645" version="1.4" glxropcode="?" category="VERSION_1_4" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[COMPSIZE(drawcount)]" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="ConstVoidPointer" input="true" compute="[COMPSIZE(drawcount)]" />
				<param name="drawcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="PointParameterf" return="void" offset="458" version="1.4" glxropcode="2065" category="VERSION_1_4" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PointParameterfv" return="void" offset="459" version="1.4" glxropcode="2066" category="VERSION_1_4" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PointParameteri" return="void" offset="642" extension="soft" glxropcode="4221" category="VERSION_1_4" version="1.4" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="PointParameteriv" return="void" offset="643" extension="soft" glxropcode="4222re" category="VERSION_1_4" version="1.4" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FogCoordf" return="void" offset="545" vectorequiv="FogCoordfv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="coord" kind="value" type="CoordF" input="true" />
			</function>
			<function name="FogCoordfv" return="void" offset="546" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4124" version="1.4" >
				<param name="coord" kind="array" type="CoordF" input="true" compute="[1]" />
			</function>
			<function name="FogCoordd" return="void" offset="547" vectorequiv="FogCoorddv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="coord" kind="value" type="CoordD" input="true" />
			</function>
			<function name="FogCoorddv" return="void" offset="548" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4125" version="1.4" >
				<param name="coord" kind="array" type="CoordD" input="true" compute="[1]" />
			</function>
			<function name="FogCoordPointer" return="void" offset="549" deprecated="3.1" profile="compatibility" category="VERSION_1_4" dlflags="notlistable" version="1.4" glxflags="client-handcode" >
				<param name="type" kind="value" type="FogPointerTypeEXT" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="SecondaryColor3b" return="void" offset="561" vectorequiv="SecondaryColor3bv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="red" kind="value" type="ColorB" input="true" />
				<param name="green" kind="value" type="ColorB" input="true" />
				<param name="blue" kind="value" type="ColorB" input="true" />
			</function>
			<function name="SecondaryColor3bv" return="void" offset="562" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4126" version="1.4" >
				<param name="v" kind="array" type="ColorB" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3d" return="void" offset="563" vectorequiv="SecondaryColor3dv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="red" kind="value" type="ColorD" input="true" />
				<param name="green" kind="value" type="ColorD" input="true" />
				<param name="blue" kind="value" type="ColorD" input="true" />
			</function>
			<function name="SecondaryColor3dv" return="void" offset="564" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4130" version="1.4" >
				<param name="v" kind="array" type="ColorD" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3f" return="void" offset="565" vectorequiv="SecondaryColor3fv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="red" kind="value" type="ColorF" input="true" />
				<param name="green" kind="value" type="ColorF" input="true" />
				<param name="blue" kind="value" type="ColorF" input="true" />
			</function>
			<function name="SecondaryColor3fv" return="void" offset="566" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4129" version="1.4" >
				<param name="v" kind="array" type="ColorF" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3i" return="void" offset="567" vectorequiv="SecondaryColor3iv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="red" kind="value" type="ColorI" input="true" />
				<param name="green" kind="value" type="ColorI" input="true" />
				<param name="blue" kind="value" type="ColorI" input="true" />
			</function>
			<function name="SecondaryColor3iv" return="void" offset="568" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4128" version="1.4" >
				<param name="v" kind="array" type="ColorI" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3s" return="void" offset="569" vectorequiv="SecondaryColor3sv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="red" kind="value" type="ColorS" input="true" />
				<param name="green" kind="value" type="ColorS" input="true" />
				<param name="blue" kind="value" type="ColorS" input="true" />
			</function>
			<function name="SecondaryColor3sv" return="void" offset="570" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4127" version="1.4" >
				<param name="v" kind="array" type="ColorS" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3ub" return="void" offset="571" vectorequiv="SecondaryColor3ubv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="red" kind="value" type="ColorUB" input="true" />
				<param name="green" kind="value" type="ColorUB" input="true" />
				<param name="blue" kind="value" type="ColorUB" input="true" />
			</function>
			<function name="SecondaryColor3ubv" return="void" offset="572" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4131" version="1.4" >
				<param name="v" kind="array" type="ColorUB" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3ui" return="void" offset="573" vectorequiv="SecondaryColor3uiv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="red" kind="value" type="ColorUI" input="true" />
				<param name="green" kind="value" type="ColorUI" input="true" />
				<param name="blue" kind="value" type="ColorUI" input="true" />
			</function>
			<function name="SecondaryColor3uiv" return="void" offset="574" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4133" version="1.4" >
				<param name="v" kind="array" type="ColorUI" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3us" return="void" offset="575" vectorequiv="SecondaryColor3usv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="red" kind="value" type="ColorUS" input="true" />
				<param name="green" kind="value" type="ColorUS" input="true" />
				<param name="blue" kind="value" type="ColorUS" input="true" />
			</function>
			<function name="SecondaryColor3usv" return="void" offset="576" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="4132" version="1.4" >
				<param name="v" kind="array" type="ColorUS" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColorPointer" return="void" offset="577" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="ColorPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="WindowPos2d" return="void" offset="513" vectorequiv="WindowPos2dv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
			</function>
			<function name="WindowPos2dv" return="void" offset="514" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="230" version="1.4" glxflags="client-handcode" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2f" return="void" offset="515" vectorequiv="WindowPos2fv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
			</function>
			<function name="WindowPos2fv" return="void" offset="516" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="230" version="1.4" glxflags="client-handcode" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2i" return="void" offset="517" vectorequiv="WindowPos2iv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
			</function>
			<function name="WindowPos2iv" return="void" offset="518" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="230" version="1.4" glxflags="client-handcode" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2s" return="void" offset="519" vectorequiv="WindowPos2sv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
			</function>
			<function name="WindowPos2sv" return="void" offset="520" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="230" version="1.4" glxflags="client-handcode" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="WindowPos3d" return="void" offset="521" vectorequiv="WindowPos3dv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
				<param name="z" kind="value" type="CoordD" input="true" />
			</function>
			<function name="WindowPos3dv" return="void" offset="522" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="230" version="1.4" glxflags="client-handcode" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3f" return="void" offset="523" vectorequiv="WindowPos3fv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
				<param name="z" kind="value" type="CoordF" input="true" />
			</function>
			<function name="WindowPos3fv" return="void" offset="524" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="230" version="1.4" glxflags="client-handcode" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3i" return="void" offset="525" vectorequiv="WindowPos3iv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
				<param name="z" kind="value" type="CoordI" input="true" />
			</function>
			<function name="WindowPos3iv" return="void" offset="526" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="230" version="1.4" glxflags="client-handcode" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3s" return="void" offset="527" vectorequiv="WindowPos3sv" deprecated="3.1" profile="compatibility" version="1.4" category="VERSION_1_4" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
				<param name="z" kind="value" type="CoordS" input="true" />
			</function>
			<function name="WindowPos3sv" return="void" offset="528" deprecated="3.1" profile="compatibility" category="VERSION_1_4" glxropcode="230" version="1.4" glxflags="client-handcode" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[3]" />
			</function>
			<function name="GenQueries" return="void" offset="700" version="1.5" category="VERSION_1_5" glxsingle="162" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="DeleteQueries" return="void" offset="701" version="1.5" category="VERSION_1_5" glxsingle="161" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="IsQuery" return="Boolean" offset="702" version="1.5" category="VERSION_1_5" glxsingle="163" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BeginQuery" return="void" offset="703" glxropcode="231" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EndQuery" return="void" offset="704" glxropcode="232" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
			</function>
			<function name="GetQueryiv" return="void" offset="705" dlflags="notlistable" category="VERSION_1_5" glxsingle="164" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[pname]" />
			</function>
			<function name="GetQueryObjectiv" return="void" offset="706" dlflags="notlistable" category="VERSION_1_5" glxsingle="165" version="1.5" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[pname]" />
			</function>
			<function name="GetQueryObjectuiv" return="void" offset="707" dlflags="notlistable" category="VERSION_1_5" glxsingle="166" version="1.5" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[pname]" />
			</function>
			<function name="BindBuffer" return="void" offset="688" glxropcode="?" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteBuffers" return="void" offset="691" glxropcode="?" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="buffers" kind="array" type="ConstUInt32" input="true" compute="[n]" />
			</function>
			<function name="GenBuffers" return="void" offset="692" glxropcode="?" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="buffers" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="IsBuffer" return="Boolean" offset="696" glxropcode="?" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BufferData" return="void" offset="689" glxropcode="?" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
				<param name="data" kind="array" type="ConstVoid" input="true" compute="[size]" />
				<param name="usage" kind="value" type="BufferUsageARB" input="true" />
			</function>
			<function name="BufferSubData" return="void" offset="690" glxropcode="?" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
				<param name="data" kind="array" type="ConstVoid" input="true" compute="[size]" />
			</function>
			<function name="GetBufferSubData" return="void" offset="695" dlflags="notlistable" category="VERSION_1_5" glxsingle="?" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
				<param name="data" kind="array" type="Void" input="false" compute="[size]" />
			</function>
			<function name="MapBuffer" return="VoidPointer" offset="697" glxropcode="?" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="access" kind="value" type="BufferAccessARB" input="true" />
			</function>
			<function name="UnmapBuffer" return="Boolean" offset="698" glxropcode="?" category="VERSION_1_5" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
			</function>
			<function name="GetBufferParameteriv" return="void" offset="693" dlflags="notlistable" category="VERSION_1_5" glxsingle="?" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="pname" kind="value" type="BufferPNameARB" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetBufferPointerv" return="void" offset="694" dlflags="notlistable" category="VERSION_1_5" glxsingle="?" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="pname" kind="value" type="BufferPointerNameARB" input="true" />
				<param name="params" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="BlendEquationSeparate" return="void" version="2.0" glxropcode="4228" category="VERSION_2_0" >
				<param name="modeRGB" kind="value" type="BlendEquationModeEXT" input="true" />
				<param name="modeAlpha" kind="value" type="BlendEquationModeEXT" input="true" />
			</function>
			<function name="DrawBuffers" return="void" offset="?" glxropcode="233" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="bufs" kind="array" type="DrawBufferModeATI" input="true" compute="[n]" />
			</function>
			<function name="StencilOpSeparate" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="face" kind="value" type="StencilFaceDirection" input="true" />
				<param name="sfail" kind="value" type="StencilOp" input="true" />
				<param name="dpfail" kind="value" type="StencilOp" input="true" />
				<param name="dppass" kind="value" type="StencilOp" input="true" />
			</function>
			<function name="StencilFuncSeparate" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="face" kind="value" type="StencilFaceDirection" input="true" />
				<param name="func" kind="value" type="StencilFunction" input="true" />
				<param name="ref" kind="value" type="StencilValue" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
			</function>
			<function name="StencilMaskSeparate" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="face" kind="value" type="StencilFaceDirection" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
			</function>
			<function name="AttachShader" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="shader" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindAttribLocation" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[]" />
			</function>
			<function name="CompileShader" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="shader" kind="value" type="UInt32" input="true" />
			</function>
			<function name="CreateProgram" return="UInt32" offset="?" category="VERSION_2_0" glxropcode="?" version="2.0" glxflags="ignore" />
			<function name="CreateShader" return="UInt32" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
			</function>
			<function name="DeleteProgram" return="void" offset="?" glxsingle="202" category="VERSION_2_0" version="2.0" >
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteShader" return="void" offset="?" glxsingle="195" category="VERSION_2_0" version="2.0" >
				<param name="shader" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DetachShader" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="shader" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DisableVertexAttribArray" return="void" offset="666" extension="soft" category="VERSION_2_0" dlflags="notlistable" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EnableVertexAttribArray" return="void" offset="665" extension="soft" category="VERSION_2_0" dlflags="notlistable" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetActiveAttrib" return="void" offset="?" dlflags="notlistable" category="VERSION_2_0" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="size" kind="array" type="Int32" input="false" compute="[1]" />
				<param name="type" kind="array" type="GLenum" input="false" compute="[1]" />
				<param name="name" kind="array" type="Char" input="false" compute="[]" />
			</function>
			<function name="GetActiveUniform" return="void" offset="?" dlflags="notlistable" category="VERSION_2_0" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="size" kind="array" type="Int32" input="false" compute="[1]" />
				<param name="type" kind="array" type="GLenum" input="false" compute="[1]" />
				<param name="name" kind="array" type="Char" input="false" compute="[]" />
			</function>
			<function name="GetAttachedShaders" return="void" offset="?" dlflags="notlistable" category="VERSION_2_0" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="maxCount" kind="value" type="SizeI" input="true" />
				<param name="count" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="obj" kind="array" type="UInt32" input="false" compute="[count]" />
			</function>
			<function name="GetAttribLocation" return="Int32" offset="?" dlflags="notlistable" category="VERSION_2_0" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[]" />
			</function>
			<function name="GetProgramiv" return="void" offset="?" category="VERSION_2_0" version="2.0" glxsingle="199" dlflags="notlistable" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[pname]" />
			</function>
			<function name="GetProgramInfoLog" return="void" offset="?" category="VERSION_2_0" version="2.0" glxsingle="201" dlflags="notlistable" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="infoLog" kind="array" type="Char" input="false" compute="[length]" />
			</function>
			<function name="GetShaderiv" return="void" offset="?" category="VERSION_2_0" version="2.0" glxsingle="198" dlflags="notlistable" >
				<param name="shader" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[pname]" />
			</function>
			<function name="GetShaderInfoLog" return="void" offset="?" category="VERSION_2_0" version="2.0" glxsingle="200" dlflags="notlistable" >
				<param name="shader" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="infoLog" kind="array" type="Char" input="false" compute="[length]" />
			</function>
			<function name="GetShaderSource" return="void" offset="?" dlflags="notlistable" category="VERSION_2_0" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="shader" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="source" kind="array" type="Char" input="false" compute="[length]" />
			</function>
			<function name="GetUniformLocation" return="Int32" offset="?" dlflags="notlistable" category="VERSION_2_0" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[]" />
			</function>
			<function name="GetUniformfv" return="void" offset="?" dlflags="notlistable" category="VERSION_2_0" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(location)]" />
			</function>
			<function name="GetUniformiv" return="void" offset="?" dlflags="notlistable" category="VERSION_2_0" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(location)]" />
			</function>
			<function name="GetVertexAttribdv" return="void" offset="588" extension="soft" category="VERSION_2_0" version="2.0" dlflags="notlistable" glxvendorpriv="1301" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribPropertyARB" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="GetVertexAttribfv" return="void" offset="589" extension="soft" category="VERSION_2_0" version="2.0" dlflags="notlistable" glxvendorpriv="1302" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribPropertyARB" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="GetVertexAttribiv" return="void" offset="590" extension="soft" category="VERSION_2_0" version="2.0" dlflags="notlistable" glxvendorpriv="1303" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribPropertyARB" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[4]" />
			</function>
			<function name="GetVertexAttribPointerv" return="void" offset="591" extension="soft" category="VERSION_2_0" dlflags="notlistable" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribPointerPropertyARB" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="IsProgram" return="Boolean" offset="592" extension="soft" category="VERSION_2_0" version="2.0" glxsingle="197" dlflags="notlistable" >
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="IsShader" return="Boolean" offset="?" extension="soft" category="VERSION_2_0" version="2.0" glxsingle="196" dlflags="notlistable" >
				<param name="shader" kind="value" type="UInt32" input="true" />
			</function>
			<function name="LinkProgram" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ShaderSource" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="shader" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="string" kind="array" type="ConstCharPointer" input="true" compute="[count]" />
				<param name="length" kind="array" type="Int32" input="true" compute="[1]" />
			</function>
			<function name="UseProgram" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform1f" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
			</function>
			<function name="Uniform2f" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
			</function>
			<function name="Uniform3f" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
				<param name="v2" kind="value" type="Float32" input="true" />
			</function>
			<function name="Uniform4f" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
				<param name="v2" kind="value" type="Float32" input="true" />
				<param name="v3" kind="value" type="Float32" input="true" />
			</function>
			<function name="Uniform1i" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
			</function>
			<function name="Uniform2i" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
			</function>
			<function name="Uniform3i" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
				<param name="v2" kind="value" type="Int32" input="true" />
			</function>
			<function name="Uniform4i" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
				<param name="v2" kind="value" type="Int32" input="true" />
				<param name="v3" kind="value" type="Int32" input="true" />
			</function>
			<function name="Uniform1fv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="Uniform2fv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="Uniform3fv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="Uniform4fv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="Uniform1iv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="Uniform2iv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="Uniform3iv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="Uniform4iv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix2fv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix3fv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix4fv" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ValidateProgram" return="void" offset="?" glxropcode="?" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttrib1d" return="void" offset="603" vectorequiv="VertexAttrib1dv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib1dv" return="void" offset="604" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4197" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib1f" return="void" offset="605" vectorequiv="VertexAttrib1fv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib1fv" return="void" offset="606" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4193" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib1s" return="void" offset="607" vectorequiv="VertexAttrib1sv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib1sv" return="void" offset="608" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4189" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib2d" return="void" offset="609" vectorequiv="VertexAttrib2dv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib2dv" return="void" offset="610" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4198" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib2f" return="void" offset="611" vectorequiv="VertexAttrib2fv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib2fv" return="void" offset="612" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4194" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib2s" return="void" offset="613" vectorequiv="VertexAttrib2sv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib2sv" return="void" offset="614" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4190" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib3d" return="void" offset="615" vectorequiv="VertexAttrib3dv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib3dv" return="void" offset="616" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4199" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib3f" return="void" offset="617" vectorequiv="VertexAttrib3fv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib3fv" return="void" offset="618" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4195" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib3s" return="void" offset="619" vectorequiv="VertexAttrib3sv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
				<param name="z" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib3sv" return="void" offset="620" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4191" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib4Nbv" return="void" offset="659" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4Niv" return="void" offset="661" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4Nsv" return="void" offset="660" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4Nub" return="void" offset="627" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt8" input="true" />
				<param name="y" kind="value" type="UInt8" input="true" />
				<param name="z" kind="value" type="UInt8" input="true" />
				<param name="w" kind="value" type="UInt8" input="true" />
			</function>
			<function name="VertexAttrib4Nubv" return="void" offset="628" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4201" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4Nuiv" return="void" offset="663" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4Nusv" return="void" offset="662" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4bv" return="void" offset="654" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4d" return="void" offset="621" vectorequiv="VertexAttrib4dv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib4dv" return="void" offset="622" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4200" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4f" return="void" offset="623" vectorequiv="VertexAttrib4fv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib4fv" return="void" offset="624" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4196" version="2.0" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4iv" return="void" offset="655" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4s" return="void" offset="625" vectorequiv="VertexAttrib4sv" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
				<param name="z" kind="value" type="Int16" input="true" />
				<param name="w" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib4sv" return="void" offset="626" extension="soft" deprecated="3.1" category="VERSION_2_0" glxropcode="4192" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4ubv" return="void" offset="656" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4uiv" return="void" offset="658" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4usv" return="void" offset="657" extension="soft" deprecated="3.1" category="VERSION_2_0" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribPointer" return="void" offset="664" extension="soft" category="VERSION_2_0" dlflags="notlistable" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexAttribPointerTypeARB" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="UniformMatrix2x3fv" return="void" offset="?" glxropcode="305" category="VERSION_2_1" version="2.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[6]" />
			</function>
			<function name="UniformMatrix3x2fv" return="void" offset="?" version="2.1" glxropcode="306" category="VERSION_2_1" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[6]" />
			</function>
			<function name="UniformMatrix2x4fv" return="void" offset="?" version="2.1" glxropcode="307" category="VERSION_2_1" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[8]" />
			</function>
			<function name="UniformMatrix4x2fv" return="void" offset="?" version="2.1" glxropcode="308" category="VERSION_2_1" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[8]" />
			</function>
			<function name="UniformMatrix3x4fv" return="void" offset="?" version="2.1" glxropcode="309" category="VERSION_2_1" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[12]" />
			</function>
			<function name="UniformMatrix4x3fv" return="void" offset="?" version="2.1" glxropcode="310" category="VERSION_2_1" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[12]" />
			</function>
			<function name="ColorMaski" return="void" category="VERSION_3_0" version="3.0" glxflags="ignore" glfflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="r" kind="value" type="Boolean" input="true" />
				<param name="g" kind="value" type="Boolean" input="true" />
				<param name="b" kind="value" type="Boolean" input="true" />
				<param name="a" kind="value" type="Boolean" input="true" />
			</function>
			<function name="GetBooleani_v" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Boolean" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetIntegeri_v" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Int32" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="Enablei" return="void" category="VERSION_3_0" version="3.0" glxflags="ignore" glfflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Disablei" return="void" category="VERSION_3_0" version="3.0" glxflags="ignore" glfflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="IsEnabledi" return="Boolean" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BeginTransformFeedback" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="primitiveMode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="EndTransformFeedback" return="void" dlflags="notlistable" version="3.0" category="VERSION_3_0" glxflags="ignore" glfflags="ignore" />
			<function name="BindBufferRange" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="BindBufferBase" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="TransformFeedbackVaryings" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="varyings" kind="array" type="ConstCharPointer" input="true" compute="[count]" />
				<param name="bufferMode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="GetTransformFeedbackVarying" return="void" glfflags="ignore" category="VERSION_3_0" dlflags="notlistable" version="3.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="size" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="type" kind="array" type="GLenum" input="false" compute="[1]" />
				<param name="name" kind="array" type="Char" input="false" compute="[COMPSIZE(length)]" />
			</function>
			<function name="ClampColor" return="void" offset="?" glxropcode="234" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="ClampColorTargetARB" input="true" />
				<param name="clamp" kind="value" type="ClampColorModeARB" input="true" />
			</function>
			<function name="BeginConditionalRender" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="mode" kind="value" type="TypeEnum" input="true" />
			</function>
			<function name="EndConditionalRender" return="void" category="VERSION_3_0" version="3.0" glxflags="ignore" glfflags="ignore" />
			<function name="VertexAttribIPointer" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexAttribEnum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="GetVertexAttribIiv" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="GetVertexAttribIuiv" return="void" glfflags="ignore" version="3.0" category="VERSION_3_0" dlflags="notlistable" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnum" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[1]" />
			</function>
			<function name="VertexAttribI1i" return="void" vectorequiv="VertexAttribI1iv" glfflags="ignore" version="3.0" category="VERSION_3_0" beginend="allow-inside" glxvectorequiv="VertexAttribI1iv" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI2i" return="void" vectorequiv="VertexAttribI2iv" glfflags="ignore" version="3.0" category="VERSION_3_0" beginend="allow-inside" glxvectorequiv="VertexAttribI2iv" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI3i" return="void" vectorequiv="VertexAttribI3iv" glfflags="ignore" version="3.0" category="VERSION_3_0" beginend="allow-inside" glxvectorequiv="VertexAttribI3iv" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI4i" return="void" vectorequiv="VertexAttribI4iv" glfflags="ignore" version="3.0" category="VERSION_3_0" beginend="allow-inside" glxvectorequiv="VertexAttribI4iv" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
				<param name="w" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI1ui" return="void" vectorequiv="VertexAttribI1uiv" glfflags="ignore" version="3.0" category="VERSION_3_0" beginend="allow-inside" glxvectorequiv="VertexAttribI1uiv" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribI2ui" return="void" vectorequiv="VertexAttribI2uiv" glfflags="ignore" version="3.0" category="VERSION_3_0" beginend="allow-inside" glxvectorequiv="VertexAttribI2uiv" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribI3ui" return="void" vectorequiv="VertexAttribI3uiv" glfflags="ignore" version="3.0" category="VERSION_3_0" beginend="allow-inside" glxvectorequiv="VertexAttribI3uiv" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
				<param name="z" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribI4ui" return="void" vectorequiv="VertexAttribI4uiv" glfflags="ignore" version="3.0" category="VERSION_3_0" beginend="allow-inside" glxvectorequiv="VertexAttribI4uiv" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
				<param name="z" kind="value" type="UInt32" input="true" />
				<param name="w" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribI1iv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribI2iv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[2]" />
			</function>
			<function name="VertexAttribI3iv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[3]" />
			</function>
			<function name="VertexAttribI4iv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI1uiv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribI2uiv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[2]" />
			</function>
			<function name="VertexAttribI3uiv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[3]" />
			</function>
			<function name="VertexAttribI4uiv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI4bv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI4sv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI4ubv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI4usv" return="void" glfflags="ignore" category="VERSION_3_0" beginend="allow-inside" version="3.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt16" input="true" compute="[4]" />
			</function>
			<function name="GetUniformuiv" return="void" glfflags="ignore" category="VERSION_3_0" dlflags="notlistable" version="3.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(program/location)]" />
			</function>
			<function name="BindFragDataLocation" return="void" glfflags="ignore" category="VERSION_3_0" dlflags="notlistable" version="3.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="color" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="GetFragDataLocation" return="Int32" glfflags="ignore" category="VERSION_3_0" dlflags="notlistable" version="3.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="Uniform1ui" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform2ui" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform3ui" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
				<param name="v2" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform4ui" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
				<param name="v2" kind="value" type="UInt32" input="true" />
				<param name="v3" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform1uiv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count]" />
			</function>
			<function name="Uniform2uiv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*2]" />
			</function>
			<function name="Uniform3uiv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*3]" />
			</function>
			<function name="Uniform4uiv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*4]" />
			</function>
			<function name="TexParameterIiv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexParameterIuiv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexParameterIiv" return="void" glfflags="ignore" category="VERSION_3_0" dlflags="notlistable" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexParameterIuiv" return="void" glfflags="ignore" category="VERSION_3_0" dlflags="notlistable" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ClearBufferiv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="buffer" kind="value" type="GLenum" input="true" />
				<param name="drawbuffer" kind="value" type="DrawBufferName" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[COMPSIZE(buffer)]" />
			</function>
			<function name="ClearBufferuiv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="buffer" kind="value" type="GLenum" input="true" />
				<param name="drawbuffer" kind="value" type="DrawBufferName" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[COMPSIZE(buffer)]" />
			</function>
			<function name="ClearBufferfv" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="buffer" kind="value" type="GLenum" input="true" />
				<param name="drawbuffer" kind="value" type="DrawBufferName" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[COMPSIZE(buffer)]" />
			</function>
			<function name="ClearBufferfi" return="void" glfflags="ignore" category="VERSION_3_0" version="3.0" glxflags="ignore" >
				<param name="buffer" kind="value" type="GLenum" input="true" />
				<param name="drawbuffer" kind="value" type="DrawBufferName" input="true" />
				<param name="depth" kind="value" type="Float32" input="true" />
				<param name="stencil" kind="value" type="Int32" input="true" />
			</function>
			<function name="GetStringi" return="String" glfflags="ignore" dlflags="notlistable" version="3.0" category="VERSION_3_0" glxsingle="?" glxflags="client-handcode" >
				<param name="name" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DrawArraysInstanced" return="void" vectorequiv="ArrayElement" glfflags="ignore" version="3.1" category="VERSION_3_1" dlflags="notlistable" glxflags="ignore" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="instancecount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DrawElementsInstanced" return="void" vectorequiv="ArrayElement" glfflags="ignore" version="3.1" category="VERSION_3_1" dlflags="notlistable" glxflags="ignore" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
				<param name="instancecount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TexBuffer" return="void" glfflags="ignore" category="VERSION_3_1" version="3.1" glxflags="ignore" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="PrimitiveRestartIndex" return="void" offset="?" glxropcode="?" category="VERSION_3_1" version="3.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetInteger64i_v" return="void" glfflags="ignore" version="3.2" category="VERSION_3_2" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Int64" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetBufferParameteri64v" return="void" dlflags="notlistable" category="VERSION_3_2" glxsingle="?" version="3.2" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="pname" kind="value" type="BufferPNameARB" input="true" />
				<param name="params" kind="array" type="Int64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FramebufferTexture" return="void" offset="?" glxropcode="?" category="VERSION_3_2" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="attachment" kind="value" type="GLenum" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribDivisor" return="void" glfflags="ignore" category="VERSION_3_3" version="1.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="divisor" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MinSampleShading" return="void" offset="?" glxropcode="?" category="VERSION_4_0" version="1.2" glxflags="ignore" >
				<param name="value" kind="value" type="ColorF" input="true" />
			</function>
			<function name="BlendEquationi" return="void" offset="?" glxropcode="?" category="VERSION_4_0" version="1.2" glxflags="ignore" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="mode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendEquationSeparatei" return="void" offset="?" glxropcode="?" category="VERSION_4_0" version="1.2" glxflags="ignore" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="modeRGB" kind="value" type="GLenum" input="true" />
				<param name="modeAlpha" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendFunci" return="void" offset="?" glxropcode="?" category="VERSION_4_0" version="1.2" glxflags="ignore" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="src" kind="value" type="GLenum" input="true" />
				<param name="dst" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendFuncSeparatei" return="void" offset="?" glxropcode="?" category="VERSION_4_0" version="1.2" glxflags="ignore" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="srcRGB" kind="value" type="GLenum" input="true" />
				<param name="dstRGB" kind="value" type="GLenum" input="true" />
				<param name="srcAlpha" kind="value" type="GLenum" input="true" />
				<param name="dstAlpha" kind="value" type="GLenum" input="true" />
			</function>
			<function name="ActiveTextureARB" return="void" glxropcode="197" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="ActiveTexture" >
				<param name="texture" kind="value" type="TextureUnit" input="true" />
			</function>
			<function name="ClientActiveTextureARB" return="void" dlflags="notlistable" version="1.2" category="ARB_multitexture" glxflags="ARB" alias="ClientActiveTexture" >
				<param name="texture" kind="value" type="TextureUnit" input="true" />
			</function>
			<function name="MultiTexCoord1dARB" return="void" vectorequiv="MultiTexCoord1dv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MultiTexCoord1dvARB" return="void" glxropcode="198" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord1dv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordD" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord1fARB" return="void" vectorequiv="MultiTexCoord1fv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MultiTexCoord1fvARB" return="void" glxropcode="199" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord1fv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordF" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord1iARB" return="void" vectorequiv="MultiTexCoord1iv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordI" input="true" />
			</function>
			<function name="MultiTexCoord1ivARB" return="void" glxropcode="200" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord1iv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordI" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord1sARB" return="void" vectorequiv="MultiTexCoord1sv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordS" input="true" />
			</function>
			<function name="MultiTexCoord1svARB" return="void" glxropcode="201" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord1sv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordS" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord2dARB" return="void" vectorequiv="MultiTexCoord2dv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MultiTexCoord2dvARB" return="void" glxropcode="202" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord2dv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord2fARB" return="void" vectorequiv="MultiTexCoord2fv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MultiTexCoord2fvARB" return="void" glxropcode="203" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord2fv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord2iARB" return="void" vectorequiv="MultiTexCoord2iv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
			</function>
			<function name="MultiTexCoord2ivARB" return="void" glxropcode="204" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord2iv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord2sARB" return="void" vectorequiv="MultiTexCoord2sv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
			</function>
			<function name="MultiTexCoord2svARB" return="void" glxropcode="205" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord2sv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord3dARB" return="void" vectorequiv="MultiTexCoord3dv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
				<param name="r" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MultiTexCoord3dvARB" return="void" glxropcode="206" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord3dv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord3fARB" return="void" vectorequiv="MultiTexCoord3fv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
				<param name="r" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MultiTexCoord3fvARB" return="void" glxropcode="207" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord3fv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord3iARB" return="void" vectorequiv="MultiTexCoord3iv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
				<param name="r" kind="value" type="CoordI" input="true" />
			</function>
			<function name="MultiTexCoord3ivARB" return="void" glxropcode="208" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord3iv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordI" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord3sARB" return="void" vectorequiv="MultiTexCoord3sv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
				<param name="r" kind="value" type="CoordS" input="true" />
			</function>
			<function name="MultiTexCoord3svARB" return="void" glxropcode="209" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord3sv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordS" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord4dARB" return="void" vectorequiv="MultiTexCoord4dv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordD" input="true" />
				<param name="t" kind="value" type="CoordD" input="true" />
				<param name="r" kind="value" type="CoordD" input="true" />
				<param name="q" kind="value" type="CoordD" input="true" />
			</function>
			<function name="MultiTexCoord4dvARB" return="void" glxropcode="210" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord4dv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordD" input="true" compute="[4]" />
			</function>
			<function name="MultiTexCoord4fARB" return="void" vectorequiv="MultiTexCoord4fv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordF" input="true" />
				<param name="t" kind="value" type="CoordF" input="true" />
				<param name="r" kind="value" type="CoordF" input="true" />
				<param name="q" kind="value" type="CoordF" input="true" />
			</function>
			<function name="MultiTexCoord4fvARB" return="void" glxropcode="211" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord4fv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordF" input="true" compute="[4]" />
			</function>
			<function name="MultiTexCoord4iARB" return="void" vectorequiv="MultiTexCoord4iv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordI" input="true" />
				<param name="t" kind="value" type="CoordI" input="true" />
				<param name="r" kind="value" type="CoordI" input="true" />
				<param name="q" kind="value" type="CoordI" input="true" />
			</function>
			<function name="MultiTexCoord4ivARB" return="void" glxropcode="212" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord4iv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordI" input="true" compute="[4]" />
			</function>
			<function name="MultiTexCoord4sARB" return="void" vectorequiv="MultiTexCoord4sv" version="1.2" category="ARB_multitexture" glxflags="ARB" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="CoordS" input="true" />
				<param name="t" kind="value" type="CoordS" input="true" />
				<param name="r" kind="value" type="CoordS" input="true" />
				<param name="q" kind="value" type="CoordS" input="true" />
			</function>
			<function name="MultiTexCoord4svARB" return="void" glxropcode="213" category="ARB_multitexture" glxflags="ARB" version="1.2" alias="MultiTexCoord4sv" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="CoordS" input="true" compute="[4]" />
			</function>
			<function name="LoadTransposeMatrixfARB" return="void" glxflags="ARB" version="1.2" category="ARB_transpose_matrix" alias="LoadTransposeMatrixf" >
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="LoadTransposeMatrixdARB" return="void" glxflags="ARB" version="1.2" category="ARB_transpose_matrix" alias="LoadTransposeMatrixd" >
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="MultTransposeMatrixfARB" return="void" glxflags="ARB" version="1.2" category="ARB_transpose_matrix" alias="MultTransposeMatrixf" >
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="MultTransposeMatrixdARB" return="void" glxflags="ARB" version="1.2" category="ARB_transpose_matrix" alias="MultTransposeMatrixd" >
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="SampleCoverageARB" return="void" glxflags="ARB" version="1.2" category="ARB_multisample" alias="SampleCoverage" >
				<param name="value" kind="value" type="Float32" input="true" />
				<param name="invert" kind="value" type="Boolean" input="true" />
			</function>
			<function name="CompressedTexImage3DARB" return="void" glxropcode="216" dlflags="handcode" version="1.2" category="ARB_texture_compression" glxflags="ARB" wglflags="client-handcode" alias="CompressedTexImage3D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexImage2DARB" return="void" glxropcode="215" dlflags="handcode" version="1.2" category="ARB_texture_compression" glxflags="ARB" wglflags="client-handcode" alias="CompressedTexImage2D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexImage1DARB" return="void" glxropcode="214" dlflags="handcode" version="1.2" category="ARB_texture_compression" glxflags="ARB" wglflags="client-handcode" alias="CompressedTexImage1D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexSubImage3DARB" return="void" glxropcode="219" dlflags="handcode" version="1.2" category="ARB_texture_compression" glxflags="ARB" wglflags="client-handcode" alias="CompressedTexSubImage3D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexSubImage2DARB" return="void" glxropcode="218" dlflags="handcode" version="1.2" category="ARB_texture_compression" glxflags="ARB" wglflags="client-handcode" alias="CompressedTexSubImage2D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTexSubImage1DARB" return="void" glxropcode="217" dlflags="handcode" version="1.2" category="ARB_texture_compression" glxflags="ARB" wglflags="client-handcode" alias="CompressedTexSubImage1D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="CompressedTextureARB" input="true" compute="[imageSize]" />
			</function>
			<function name="GetCompressedTexImageARB" return="void" dlflags="notlistable" glxsingle="160" glxflags="ARB" version="1.2" category="ARB_texture_compression" wglflags="client-handcode" alias="GetCompressedTexImage" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="img" kind="array" type="CompressedTextureARB" input="false" compute="[COMPSIZE(target/level)]" />
			</function>
			<function name="PointParameterfARB" return="void" glxropcode="2065" category="ARB_point_parameters" glxflags="ARB" version="1.0" alias="PointParameterf" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PointParameterfvARB" return="void" glxropcode="2066" category="ARB_point_parameters" glxflags="ARB" version="1.0" alias="PointParameterfv" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="WeightbvARB" return="void" offset="?" glxropcode="220" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="weights" kind="array" type="Int8" input="true" compute="[size]" />
			</function>
			<function name="WeightsvARB" return="void" offset="?" glxropcode="222" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="weights" kind="array" type="Int16" input="true" compute="[size]" />
			</function>
			<function name="WeightivARB" return="void" offset="?" glxropcode="224" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="weights" kind="array" type="Int32" input="true" compute="[size]" />
			</function>
			<function name="WeightfvARB" return="void" offset="?" glxropcode="227" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="weights" kind="array" type="Float32" input="true" compute="[size]" />
			</function>
			<function name="WeightdvARB" return="void" offset="?" glxropcode="228" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="weights" kind="array" type="Float64" input="true" compute="[size]" />
			</function>
			<function name="WeightubvARB" return="void" offset="?" glxropcode="221" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="weights" kind="array" type="UInt8" input="true" compute="[size]" />
			</function>
			<function name="WeightusvARB" return="void" offset="?" glxropcode="223" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="weights" kind="array" type="UInt16" input="true" compute="[size]" />
			</function>
			<function name="WeightuivARB" return="void" offset="?" glxropcode="225" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="weights" kind="array" type="UInt32" input="true" compute="[size]" />
			</function>
			<function name="WeightPointerARB" return="void" offset="?" version="1.1" category="ARB_vertex_blend" dlflags="notlistable" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="WeightPointerTypeARB" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="VertexBlendARB" return="void" offset="?" glxropcode="226" category="ARB_vertex_blend" version="1.1" glxflags="ignore" >
				<param name="count" kind="value" type="Int32" input="true" />
			</function>
			<function name="CurrentPaletteMatrixARB" return="void" offset="?" glxropcode="4329" category="ARB_matrix_palette" version="1.1" glxflags="ignore" >
				<param name="index" kind="value" type="Int32" input="true" />
			</function>
			<function name="MatrixIndexubvARB" return="void" offset="?" glxropcode="4326" category="ARB_matrix_palette" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="indices" kind="array" type="UInt8" input="true" compute="[size]" />
			</function>
			<function name="MatrixIndexusvARB" return="void" offset="?" glxropcode="4327" category="ARB_matrix_palette" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="indices" kind="array" type="UInt16" input="true" compute="[size]" />
			</function>
			<function name="MatrixIndexuivARB" return="void" offset="?" glxropcode="4328" category="ARB_matrix_palette" version="1.1" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="indices" kind="array" type="UInt32" input="true" compute="[size]" />
			</function>
			<function name="MatrixIndexPointerARB" return="void" offset="?" version="1.1" category="ARB_matrix_palette" dlflags="notlistable" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="MatrixIndexPointerTypeARB" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="WindowPos2dARB" return="void" vectorequiv="WindowPos2dvARB" version="1.0" category="ARB_window_pos" alias="WindowPos2d" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
			</function>
			<function name="WindowPos2dvARB" return="void" glxropcode="230" category="ARB_window_pos" glxflags="client-handcode" version="1.0" alias="WindowPos2dv" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2fARB" return="void" vectorequiv="WindowPos2fvARB" version="1.0" category="ARB_window_pos" alias="WindowPos2f" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
			</function>
			<function name="WindowPos2fvARB" return="void" glxropcode="230" category="ARB_window_pos" glxflags="client-handcode" version="1.0" alias="WindowPos2fv" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2iARB" return="void" vectorequiv="WindowPos2ivARB" version="1.0" category="ARB_window_pos" alias="WindowPos2i" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
			</function>
			<function name="WindowPos2ivARB" return="void" glxropcode="230" category="ARB_window_pos" glxflags="client-handcode" version="1.0" alias="WindowPos2iv" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2sARB" return="void" vectorequiv="WindowPos2svARB" version="1.0" category="ARB_window_pos" alias="WindowPos2s" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
			</function>
			<function name="WindowPos2svARB" return="void" glxropcode="230" category="ARB_window_pos" glxflags="client-handcode" version="1.0" alias="WindowPos2sv" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="WindowPos3dARB" return="void" vectorequiv="WindowPos3dvARB" version="1.0" category="ARB_window_pos" alias="WindowPos3d" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
				<param name="z" kind="value" type="CoordD" input="true" />
			</function>
			<function name="WindowPos3dvARB" return="void" glxropcode="230" category="ARB_window_pos" glxflags="client-handcode" version="1.0" alias="WindowPos3dv" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3fARB" return="void" vectorequiv="WindowPos3fvARB" version="1.0" category="ARB_window_pos" alias="WindowPos3f" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
				<param name="z" kind="value" type="CoordF" input="true" />
			</function>
			<function name="WindowPos3fvARB" return="void" glxropcode="230" category="ARB_window_pos" glxflags="client-handcode" version="1.0" alias="WindowPos3fv" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3iARB" return="void" vectorequiv="WindowPos3ivARB" version="1.0" category="ARB_window_pos" alias="WindowPos3i" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
				<param name="z" kind="value" type="CoordI" input="true" />
			</function>
			<function name="WindowPos3ivARB" return="void" glxropcode="230" category="ARB_window_pos" glxflags="client-handcode" version="1.0" alias="WindowPos3iv" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3sARB" return="void" vectorequiv="WindowPos3svARB" version="1.0" category="ARB_window_pos" alias="WindowPos3s" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
				<param name="z" kind="value" type="CoordS" input="true" />
			</function>
			<function name="WindowPos3svARB" return="void" glxropcode="230" category="ARB_window_pos" glxflags="client-handcode" version="1.0" alias="WindowPos3sv" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib1dARB" return="void" vectorequiv="VertexAttrib1dvARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib1d" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib1dvARB" return="void" extension="soft" glxropcode="4197" category="ARB_vertex_program" version="1.3" alias="VertexAttrib1dv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib1fARB" return="void" vectorequiv="VertexAttrib1fvARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib1f" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib1fvARB" return="void" extension="soft" glxropcode="4193" category="ARB_vertex_program" version="1.3" alias="VertexAttrib1fv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib1sARB" return="void" vectorequiv="VertexAttrib1svARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib1s" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib1svARB" return="void" extension="soft" glxropcode="4189" category="ARB_vertex_program" version="1.3" alias="VertexAttrib1sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib2dARB" return="void" vectorequiv="VertexAttrib2dvARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib2d" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib2dvARB" return="void" extension="soft" glxropcode="4198" category="ARB_vertex_program" version="1.3" alias="VertexAttrib2dv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib2fARB" return="void" vectorequiv="VertexAttrib2fvARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib2f" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib2fvARB" return="void" extension="soft" glxropcode="4194" category="ARB_vertex_program" version="1.3" alias="VertexAttrib2fv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib2sARB" return="void" vectorequiv="VertexAttrib2svARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib2s" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib2svARB" return="void" extension="soft" glxropcode="4190" category="ARB_vertex_program" version="1.3" alias="VertexAttrib2sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib3dARB" return="void" vectorequiv="VertexAttrib3dvARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib3d" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib3dvARB" return="void" extension="soft" glxropcode="4199" category="ARB_vertex_program" version="1.3" alias="VertexAttrib3dv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib3fARB" return="void" vectorequiv="VertexAttrib3fvARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib3f" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib3fvARB" return="void" extension="soft" glxropcode="4195" category="ARB_vertex_program" version="1.3" alias="VertexAttrib3fv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib3sARB" return="void" vectorequiv="VertexAttrib3svARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib3s" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
				<param name="z" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib3svARB" return="void" extension="soft" glxropcode="4191" category="ARB_vertex_program" version="1.3" alias="VertexAttrib3sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib4NbvARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4Nbv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4NivARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4Niv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4NsvARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4Nsv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4NubARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4Nub" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt8" input="true" />
				<param name="y" kind="value" type="UInt8" input="true" />
				<param name="z" kind="value" type="UInt8" input="true" />
				<param name="w" kind="value" type="UInt8" input="true" />
			</function>
			<function name="VertexAttrib4NubvARB" return="void" extension="soft" glxropcode="4201" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4Nubv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4NuivARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4Nuiv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4NusvARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4Nusv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4bvARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4bv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4dARB" return="void" vectorequiv="VertexAttrib4dvARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib4d" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib4dvARB" return="void" extension="soft" glxropcode="4200" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4dv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4fARB" return="void" vectorequiv="VertexAttrib4fvARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib4f" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib4fvARB" return="void" extension="soft" glxropcode="4196" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4fv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4ivARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4iv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4sARB" return="void" vectorequiv="VertexAttrib4svARB" extension="soft" version="1.3" category="ARB_vertex_program" alias="VertexAttrib4s" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
				<param name="z" kind="value" type="Int16" input="true" />
				<param name="w" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib4svARB" return="void" extension="soft" glxropcode="4192" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4ubvARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4ubv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4uivARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4uiv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4usvARB" return="void" extension="soft" category="ARB_vertex_program" version="1.3" alias="VertexAttrib4usv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribPointerARB" return="void" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" alias="VertexAttribPointer" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexAttribPointerTypeARB" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="EnableVertexAttribArrayARB" return="void" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" alias="EnableVertexAttribArray" >
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DisableVertexAttribArrayARB" return="void" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" alias="DisableVertexAttribArray" >
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramStringARB" return="void" offset="667" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="format" kind="value" type="ProgramFormatARB" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="string" kind="array" type="Void" input="true" compute="[len]" />
			</function>
			<function name="BindProgramARB" return="void" offset="579" extension="soft" glxropcode="4180" category="ARB_vertex_program" version="1.3" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteProgramsARB" return="void" offset="580" extension="soft" category="ARB_vertex_program" version="1.3" dlflags="notlistable" glxvendorpriv="1294" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="programs" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenProgramsARB" return="void" offset="582" extension="soft" category="ARB_vertex_program" version="1.3" dlflags="notlistable" glxvendorpriv="1295" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="programs" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="ProgramEnvParameter4dARB" return="void" offset="668" vectorequiv="ProgramEnvParameter4dvARB" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramEnvParameter4dvARB" return="void" offset="669" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="ProgramEnvParameter4fARB" return="void" offset="670" vectorequiv="ProgramEnvParameter4fvARB" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramEnvParameter4fvARB" return="void" offset="671" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="ProgramLocalParameter4dARB" return="void" offset="672" vectorequiv="ProgramLocalParameter4dvARB" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramLocalParameter4dvARB" return="void" offset="673" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="ProgramLocalParameter4fARB" return="void" offset="674" vectorequiv="ProgramLocalParameter4fvARB" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramLocalParameter4fvARB" return="void" offset="675" extension="soft" version="1.3" category="ARB_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="GetProgramEnvParameterdvARB" return="void" offset="676" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="GetProgramEnvParameterfvARB" return="void" offset="677" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="GetProgramLocalParameterdvARB" return="void" offset="678" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="GetProgramLocalParameterfvARB" return="void" offset="679" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="GetProgramivARB" return="void" offset="680" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="pname" kind="value" type="ProgramPropertyARB" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="GetProgramStringARB" return="void" offset="681" extension="soft" category="ARB_vertex_program" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="pname" kind="value" type="ProgramStringPropertyARB" input="true" />
				<param name="string" kind="array" type="Void" input="false" compute="[COMPSIZE(target,pname)]" />
			</function>
			<function name="GetVertexAttribdvARB" return="void" extension="soft" dlflags="notlistable" category="ARB_vertex_program" version="1.3" alias="GetVertexAttribdv" glxvendorpriv="1301" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribPropertyARB" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="GetVertexAttribfvARB" return="void" extension="soft" dlflags="notlistable" category="ARB_vertex_program" version="1.3" alias="GetVertexAttribfv" glxvendorpriv="1302" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribPropertyARB" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="GetVertexAttribivARB" return="void" extension="soft" dlflags="notlistable" category="ARB_vertex_program" version="1.3" alias="GetVertexAttribiv" glxvendorpriv="1303" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribPropertyARB" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[4]" />
			</function>
			<function name="GetVertexAttribPointervARB" return="void" extension="soft" dlflags="notlistable" category="ARB_vertex_program" glxflags="ignore" version="1.3" alias="GetVertexAttribPointerv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribPointerPropertyARB" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="IsProgramARB" return="Boolean" extension="soft" dlflags="notlistable" category="ARB_vertex_program" version="1.3" alias="IsProgram" glxvendorpriv="1304" >
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindBufferARB" return="void" version="1.2" category="ARB_vertex_buffer_object" alias="BindBuffer" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteBuffersARB" return="void" version="1.2" category="ARB_vertex_buffer_object" alias="DeleteBuffers" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="buffers" kind="array" type="ConstUInt32" input="true" compute="[n]" />
			</function>
			<function name="GenBuffersARB" return="void" version="1.2" category="ARB_vertex_buffer_object" alias="GenBuffers" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="buffers" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="IsBufferARB" return="Boolean" version="1.2" category="ARB_vertex_buffer_object" alias="IsBuffer" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BufferDataARB" return="void" version="1.2" category="ARB_vertex_buffer_object" alias="BufferData" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="size" kind="value" type="BufferSizeARB" input="true" />
				<param name="data" kind="array" type="ConstVoid" input="true" compute="[size]" />
				<param name="usage" kind="value" type="BufferUsageARB" input="true" />
			</function>
			<function name="BufferSubDataARB" return="void" version="1.2" category="ARB_vertex_buffer_object" alias="BufferSubData" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="offset" kind="value" type="BufferOffsetARB" input="true" />
				<param name="size" kind="value" type="BufferSizeARB" input="true" />
				<param name="data" kind="array" type="ConstVoid" input="true" compute="[size]" />
			</function>
			<function name="GetBufferSubDataARB" return="void" dlflags="notlistable" version="1.2" category="ARB_vertex_buffer_object" alias="GetBufferSubData" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="offset" kind="value" type="BufferOffsetARB" input="true" />
				<param name="size" kind="value" type="BufferSizeARB" input="true" />
				<param name="data" kind="array" type="Void" input="false" compute="[size]" />
			</function>
			<function name="MapBufferARB" return="VoidPointer" version="1.2" category="ARB_vertex_buffer_object" alias="MapBuffer" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="access" kind="value" type="BufferAccessARB" input="true" />
			</function>
			<function name="UnmapBufferARB" return="Boolean" version="1.2" category="ARB_vertex_buffer_object" alias="UnmapBuffer" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
			</function>
			<function name="GetBufferParameterivARB" return="void" dlflags="notlistable" version="1.2" category="ARB_vertex_buffer_object" alias="GetBufferParameteriv" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="pname" kind="value" type="BufferPNameARB" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetBufferPointervARB" return="void" dlflags="notlistable" version="1.2" category="ARB_vertex_buffer_object" alias="GetBufferPointerv" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="pname" kind="value" type="BufferPointerNameARB" input="true" />
				<param name="params" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="GenQueriesARB" return="void" version="1.5" category="ARB_occlusion_query" alias="GenQueries" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="DeleteQueriesARB" return="void" version="1.5" category="ARB_occlusion_query" alias="DeleteQueries" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="IsQueryARB" return="Boolean" version="1.5" category="ARB_occlusion_query" alias="IsQuery" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BeginQueryARB" return="void" version="1.5" category="ARB_occlusion_query" alias="BeginQuery" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EndQueryARB" return="void" version="1.5" category="ARB_occlusion_query" alias="EndQuery" >
				<param name="target" kind="value" type="GLenum" input="true" />
			</function>
			<function name="GetQueryivARB" return="void" dlflags="notlistable" version="1.5" category="ARB_occlusion_query" alias="GetQueryiv" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[pname]" />
			</function>
			<function name="GetQueryObjectivARB" return="void" dlflags="notlistable" version="1.5" category="ARB_occlusion_query" alias="GetQueryObjectiv" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[pname]" />
			</function>
			<function name="GetQueryObjectuivARB" return="void" dlflags="notlistable" version="1.5" category="ARB_occlusion_query" alias="GetQueryObjectuiv" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[pname]" />
			</function>
			<function name="DeleteObjectARB" return="void" offset="?" glxropcode="?" category="ARB_shader_objects" version="1.2" glxflags="ignore" >
				<param name="obj" kind="value" type="handleARB" input="true" />
			</function>
			<function name="GetHandleARB" return="handleARB" offset="?" dlflags="notlistable" category="ARB_shader_objects" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GLenum" input="true" />
			</function>
			<function name="DetachObjectARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="DetachShader" >
				<param name="containerObj" kind="value" type="handleARB" input="true" />
				<param name="attachedObj" kind="value" type="handleARB" input="true" />
			</function>
			<function name="CreateShaderObjectARB" return="handleARB" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="CreateShader" >
				<param name="shaderType" kind="value" type="GLenum" input="true" />
			</function>
			<function name="ShaderSourceARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="ShaderSource" >
				<param name="shaderObj" kind="value" type="handleARB" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="string" kind="array" type="charPointerARB" input="true" compute="[count]" />
				<param name="length" kind="array" type="Int32" input="true" compute="[1]" />
			</function>
			<function name="CompileShaderARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="CompileShader" >
				<param name="shaderObj" kind="value" type="handleARB" input="true" />
			</function>
			<function name="CreateProgramObjectARB" return="handleARB" glxflags="ignore" category="ARB_shader_objects" glxropcode="?" version="1.2" alias="CreateProgram" />
			<function name="AttachObjectARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="AttachShader" >
				<param name="containerObj" kind="value" type="handleARB" input="true" />
				<param name="obj" kind="value" type="handleARB" input="true" />
			</function>
			<function name="LinkProgramARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="LinkProgram" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
			</function>
			<function name="UseProgramObjectARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="UseProgram" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
			</function>
			<function name="ValidateProgramARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="ValidateProgram" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
			</function>
			<function name="Uniform1fARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform1f" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
			</function>
			<function name="Uniform2fARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform2f" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
			</function>
			<function name="Uniform3fARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform3f" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
				<param name="v2" kind="value" type="Float32" input="true" />
			</function>
			<function name="Uniform4fARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform4f" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
				<param name="v2" kind="value" type="Float32" input="true" />
				<param name="v3" kind="value" type="Float32" input="true" />
			</function>
			<function name="Uniform1iARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform1i" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
			</function>
			<function name="Uniform2iARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform2i" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
			</function>
			<function name="Uniform3iARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform3i" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
				<param name="v2" kind="value" type="Int32" input="true" />
			</function>
			<function name="Uniform4iARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform4i" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
				<param name="v2" kind="value" type="Int32" input="true" />
				<param name="v3" kind="value" type="Int32" input="true" />
			</function>
			<function name="Uniform1fvARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform1fv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="Uniform2fvARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform2fv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="Uniform3fvARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform3fv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="Uniform4fvARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform4fv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="Uniform1ivARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform1iv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="Uniform2ivARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform2iv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="Uniform3ivARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform3iv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="Uniform4ivARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="Uniform4iv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix2fvARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="UniformMatrix2fv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix3fvARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="UniformMatrix3fv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix4fvARB" return="void" glxropcode="?" category="ARB_shader_objects" glxflags="ignore" version="1.2" alias="UniformMatrix4fv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="GetObjectParameterfvARB" return="void" offset="?" dlflags="notlistable" category="ARB_shader_objects" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="obj" kind="value" type="handleARB" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[pname]" />
			</function>
			<function name="GetObjectParameterivARB" return="void" offset="?" dlflags="notlistable" category="ARB_shader_objects" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="obj" kind="value" type="handleARB" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[pname]" />
			</function>
			<function name="GetInfoLogARB" return="void" offset="?" dlflags="notlistable" category="ARB_shader_objects" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="obj" kind="value" type="handleARB" input="true" />
				<param name="maxLength" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="infoLog" kind="array" type="charARB" input="false" compute="[length]" />
			</function>
			<function name="GetAttachedObjectsARB" return="void" dlflags="notlistable" glxflags="ignore" category="ARB_shader_objects" version="1.2" glxsingle="?" alias="GetAttachedShaders" >
				<param name="containerObj" kind="value" type="handleARB" input="true" />
				<param name="maxCount" kind="value" type="SizeI" input="true" />
				<param name="count" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="obj" kind="array" type="handleARB" input="false" compute="[count]" />
			</function>
			<function name="GetUniformLocationARB" return="Int32" dlflags="notlistable" glxflags="ignore" category="ARB_shader_objects" version="1.2" glxsingle="?" alias="GetUniformLocation" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
				<param name="name" kind="array" type="charARB" input="true" compute="[]" />
			</function>
			<function name="GetActiveUniformARB" return="void" dlflags="notlistable" glxflags="ignore" category="ARB_shader_objects" version="1.2" glxsingle="?" alias="GetActiveUniform" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="maxLength" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="size" kind="array" type="Int32" input="false" compute="[1]" />
				<param name="type" kind="array" type="GLenum" input="false" compute="[1]" />
				<param name="name" kind="array" type="charARB" input="false" compute="[]" />
			</function>
			<function name="GetUniformfvARB" return="void" dlflags="notlistable" glxflags="ignore" category="ARB_shader_objects" version="1.2" glxsingle="?" alias="GetUniformfv" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(location)]" />
			</function>
			<function name="GetUniformivARB" return="void" dlflags="notlistable" glxflags="ignore" category="ARB_shader_objects" version="1.2" glxsingle="?" alias="GetUniformiv" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(location)]" />
			</function>
			<function name="GetShaderSourceARB" return="void" dlflags="notlistable" glxflags="ignore" category="ARB_shader_objects" version="1.2" glxsingle="?" alias="GetShaderSource" >
				<param name="obj" kind="value" type="handleARB" input="true" />
				<param name="maxLength" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="source" kind="array" type="charARB" input="false" compute="[length]" />
			</function>
			<function name="BindAttribLocationARB" return="void" glxropcode="?" category="ARB_vertex_shader" glxflags="ignore" version="1.2" alias="BindAttribLocation" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="charARB" input="true" compute="[]" />
			</function>
			<function name="GetActiveAttribARB" return="void" dlflags="notlistable" glxflags="ignore" category="ARB_vertex_shader" version="1.2" glxsingle="?" alias="GetActiveAttrib" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="maxLength" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="size" kind="array" type="Int32" input="false" compute="[1]" />
				<param name="type" kind="array" type="GLenum" input="false" compute="[1]" />
				<param name="name" kind="array" type="charARB" input="false" compute="[]" />
			</function>
			<function name="GetAttribLocationARB" return="Int32" dlflags="notlistable" glxflags="ignore" category="ARB_vertex_shader" version="1.2" glxsingle="?" alias="GetAttribLocation" >
				<param name="programObj" kind="value" type="handleARB" input="true" />
				<param name="name" kind="array" type="charARB" input="true" compute="[]" />
			</function>
			<function name="DrawBuffersARB" return="void" version="1.5" category="ARB_draw_buffers" alias="DrawBuffers" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="bufs" kind="array" type="DrawBufferModeATI" input="true" compute="[n]" />
			</function>
			<function name="ClampColorARB" return="void" glxropcode="234" category="ARB_color_buffer_float" glxflags="ignore" version="1.5" alias="ClampColor" >
				<param name="target" kind="value" type="ClampColorTargetARB" input="true" />
				<param name="clamp" kind="value" type="ClampColorModeARB" input="true" />
			</function>
			<function name="DrawArraysInstancedARB" return="void" vectorequiv="ArrayElement" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="ARB_draw_instanced" glxflags="ignore" alias="DrawArraysInstanced" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DrawElementsInstancedARB" return="void" vectorequiv="ArrayElement" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="ARB_draw_instanced" glxflags="ignore" alias="DrawElementsInstanced" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="IsRenderbuffer" return="Boolean" offset="?" version="3.0" category="ARB_framebuffer_object" glxvendorpriv="1422" glxflags="ignore" >
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindRenderbuffer" return="void" offset="?" glxropcode="235" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="RenderbufferTarget" input="true" />
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteRenderbuffers" return="void" offset="?" glxropcode="4317" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="renderbuffers" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenRenderbuffers" return="void" offset="?" version="3.0" category="ARB_framebuffer_object" glxvendorpriv="1423" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="renderbuffers" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="RenderbufferStorage" return="void" offset="?" glxropcode="4318" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="RenderbufferTarget" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetRenderbufferParameteriv" return="void" offset="?" dlflags="notlistable" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" glxvendorpriv="1424" >
				<param name="target" kind="value" type="RenderbufferTarget" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="IsFramebuffer" return="Boolean" offset="?" version="3.0" category="ARB_framebuffer_object" glxvendorpriv="1425" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindFramebuffer" return="void" offset="?" glxropcode="236" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="framebuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteFramebuffers" return="void" offset="?" glxropcode="4320" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="framebuffers" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenFramebuffers" return="void" offset="?" version="3.0" category="ARB_framebuffer_object" glxvendorpriv="1426" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="framebuffers" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="CheckFramebufferStatus" return="GLenum" offset="?" version="3.0" category="ARB_framebuffer_object" glxvendorpriv="1427" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
			</function>
			<function name="FramebufferTexture1D" return="void" offset="?" glxropcode="4321" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="GLenum" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
			</function>
			<function name="FramebufferTexture2D" return="void" offset="?" glxropcode="4322" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="GLenum" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
			</function>
			<function name="FramebufferTexture3D" return="void" offset="?" glxropcode="4323" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="GLenum" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
				<param name="zoffset" kind="value" type="Int32" input="true" />
			</function>
			<function name="FramebufferRenderbuffer" return="void" offset="?" glxropcode="4324" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="renderbuffertarget" kind="value" type="RenderbufferTarget" input="true" />
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetFramebufferAttachmentParameteriv" return="void" offset="?" dlflags="notlistable" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" glxvendorpriv="1428" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GenerateMipmap" return="void" offset="?" glxropcode="4325" category="ARB_framebuffer_object" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlitFramebuffer" return="void" offset="?" version="3.0" glxropcode="4330" category="ARB_framebuffer_object" >
				<param name="srcX0" kind="value" type="Int32" input="true" />
				<param name="srcY0" kind="value" type="Int32" input="true" />
				<param name="srcX1" kind="value" type="Int32" input="true" />
				<param name="srcY1" kind="value" type="Int32" input="true" />
				<param name="dstX0" kind="value" type="Int32" input="true" />
				<param name="dstY0" kind="value" type="Int32" input="true" />
				<param name="dstX1" kind="value" type="Int32" input="true" />
				<param name="dstY1" kind="value" type="Int32" input="true" />
				<param name="mask" kind="value" type="ClearBufferMask" input="true" />
				<param name="filter" kind="value" type="GLenum" input="true" />
			</function>
			<function name="RenderbufferStorageMultisample" return="void" offset="?" version="3.0" glxropcode="4331" category="ARB_framebuffer_object" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="FramebufferTextureLayer" return="void" offset="?" extension="soft" glxropcode="237" glfflags="ignore" version="3.0" category="ARB_framebuffer_object" dlflags="notlistable" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="layer" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="ProgramParameteriARB" return="void" extension="soft" glfflags="ignore" version="3.0" category="ARB_geometry_shader4" glxflags="ignore" alias="ProgramParameteri" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ProgramParameterPName" input="true" />
				<param name="value" kind="value" type="Int32" input="true" />
			</function>
			<function name="FramebufferTextureARB" return="void" extension="soft" glfflags="ignore" version="3.0" category="ARB_geometry_shader4" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="FramebufferTextureLayerARB" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="3.0" category="ARB_geometry_shader4" glxflags="ignore" alias="FramebufferTextureLayer" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="layer" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="FramebufferTextureFaceARB" return="void" extension="soft" glfflags="ignore" version="3.0" category="ARB_geometry_shader4" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="face" kind="value" type="TextureTarget" input="true" />
			</function>
			<function name="VertexAttribDivisorARB" return="void" glfflags="ignore" category="ARB_instanced_arrays" version="2.0" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="divisor" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MapBufferRange" return="VoidPointer" offset="?" glxropcode="?" category="ARB_map_buffer_range" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="length" kind="value" type="BufferSize" input="true" />
				<param name="access" kind="value" type="BufferAccessMask" input="true" />
			</function>
			<function name="FlushMappedBufferRange" return="void" offset="?" glxropcode="?" category="ARB_map_buffer_range" version="3.0" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="length" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="TexBufferARB" return="void" extension="soft" glfflags="ignore" version="3.0" category="ARB_texture_buffer_object" alias="TexBuffer" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindVertexArray" return="void" offset="?" glxropcode="?" category="ARB_vertex_array_object" version="3.0" glxflags="ignore" >
				<param name="array" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteVertexArrays" return="void" offset="?" glxropcode="?" category="ARB_vertex_array_object" version="3.0" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="arrays" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenVertexArrays" return="void" offset="?" glxropcode="?" category="ARB_vertex_array_object" version="3.0" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="arrays" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="IsVertexArray" return="Boolean" offset="?" glxropcode="?" category="ARB_vertex_array_object" version="3.0" glxflags="ignore" >
				<param name="array" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetUniformIndices" return="void" offset="?" dlflags="notlistable" category="ARB_uniform_buffer_object" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="uniformCount" kind="value" type="SizeI" input="true" />
				<param name="uniformNames" kind="array" type="ConstCharPointer" input="true" compute="[COMPSIZE(uniformCount)]" />
				<param name="uniformIndices" kind="array" type="UInt32" input="false" compute="[COMPSIZE(uniformCount)]" />
			</function>
			<function name="GetActiveUniformsiv" return="void" offset="?" dlflags="notlistable" category="ARB_uniform_buffer_object" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="uniformCount" kind="value" type="SizeI" input="true" />
				<param name="uniformIndices" kind="array" type="UInt32" input="true" compute="[COMPSIZE(uniformCount)]" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetActiveUniformName" return="void" offset="?" dlflags="notlistable" category="ARB_uniform_buffer_object" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="uniformIndex" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="uniformName" kind="array" type="Char" input="false" compute="[bufSize]" />
			</function>
			<function name="GetUniformBlockIndex" return="UInt32" offset="?" dlflags="notlistable" category="ARB_uniform_buffer_object" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="uniformBlockName" kind="array" type="Char" input="true" compute="[COMPSIZE()]" />
			</function>
			<function name="GetActiveUniformBlockiv" return="void" offset="?" dlflags="notlistable" category="ARB_uniform_buffer_object" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="uniformBlockIndex" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetActiveUniformBlockName" return="void" offset="?" dlflags="notlistable" category="ARB_uniform_buffer_object" glxsingle="?" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="uniformBlockIndex" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="uniformBlockName" kind="array" type="Char" input="false" compute="[bufSize]" />
			</function>
			<function name="UniformBlockBinding" return="void" offset="?" glxropcode="?" category="ARB_uniform_buffer_object" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="uniformBlockIndex" kind="value" type="UInt32" input="true" />
				<param name="uniformBlockBinding" kind="value" type="UInt32" input="true" />
			</function>
			<function name="CopyBufferSubData" return="void" offset="?" glxropcode="?" category="ARB_copy_buffer" version="3.0" glxflags="ignore" >
				<param name="readTarget" kind="value" type="GLenum" input="true" />
				<param name="writeTarget" kind="value" type="GLenum" input="true" />
				<param name="readOffset" kind="value" type="BufferOffset" input="true" />
				<param name="writeOffset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="DrawElementsBaseVertex" return="void" offset="?" glxropcode="?" category="ARB_draw_elements_base_vertex" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
				<param name="basevertex" kind="value" type="Int32" input="true" />
			</function>
			<function name="DrawRangeElementsBaseVertex" return="void" offset="?" glxropcode="?" category="ARB_draw_elements_base_vertex" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="start" kind="value" type="UInt32" input="true" />
				<param name="end" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
				<param name="basevertex" kind="value" type="Int32" input="true" />
			</function>
			<function name="DrawElementsInstancedBaseVertex" return="void" offset="?" glxropcode="?" category="ARB_draw_elements_base_vertex" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
				<param name="instancecount" kind="value" type="SizeI" input="true" />
				<param name="basevertex" kind="value" type="Int32" input="true" />
			</function>
			<function name="MultiDrawElementsBaseVertex" return="void" offset="?" glxropcode="?" category="ARB_draw_elements_base_vertex" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[COMPSIZE(drawcount)]" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="ConstVoidPointer" input="true" compute="[COMPSIZE(drawcount)]" />
				<param name="drawcount" kind="value" type="SizeI" input="true" />
				<param name="basevertex" kind="array" type="Int32" input="true" compute="[COMPSIZE(drawcount)]" />
			</function>
			<function name="ProvokingVertex" return="void" offset="?" glxropcode="?" category="ARB_provoking_vertex" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="FenceSync" return="sync" offset="?" glxropcode="?" category="ARB_sync" version="1.2" glxflags="ignore" >
				<param name="condition" kind="value" type="GLenum" input="true" />
				<param name="flags" kind="value" type="GLbitfield" input="true" />
			</function>
			<function name="IsSync" return="Boolean" offset="?" glxropcode="?" category="ARB_sync" version="1.2" glxflags="ignore" >
				<param name="sync" kind="value" type="sync" input="true" />
			</function>
			<function name="DeleteSync" return="void" offset="?" glxropcode="?" category="ARB_sync" version="1.2" glxflags="ignore" >
				<param name="sync" kind="value" type="sync" input="true" />
			</function>
			<function name="ClientWaitSync" return="GLenum" offset="?" glxropcode="?" category="ARB_sync" version="1.2" glxflags="ignore" >
				<param name="sync" kind="value" type="sync" input="true" />
				<param name="flags" kind="value" type="GLbitfield" input="true" />
				<param name="timeout" kind="value" type="UInt64" input="true" />
			</function>
			<function name="WaitSync" return="void" offset="?" glxropcode="?" category="ARB_sync" version="1.2" glxflags="ignore" >
				<param name="sync" kind="value" type="sync" input="true" />
				<param name="flags" kind="value" type="GLbitfield" input="true" />
				<param name="timeout" kind="value" type="UInt64" input="true" />
			</function>
			<function name="GetInteger64v" return="void" offset="?" dlflags="notlistable" category="ARB_sync" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetSynciv" return="void" offset="?" dlflags="notlistable" category="ARB_sync" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="sync" kind="value" type="sync" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="values" kind="array" type="Int32" input="false" compute="[length]" />
			</function>
			<function name="TexImage2DMultisample" return="void" offset="?" glxropcode="?" category="ARB_texture_multisample" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="fixedsamplelocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TexImage3DMultisample" return="void" offset="?" glxropcode="?" category="ARB_texture_multisample" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="fixedsamplelocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="GetMultisamplefv" return="void" offset="?" dlflags="notlistable" category="ARB_texture_multisample" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="val" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="SampleMaski" return="void" offset="?" glxropcode="?" category="ARB_texture_multisample" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="mask" kind="value" type="GLbitfield" input="true" />
			</function>
			<function name="BlendEquationiARB" return="void" offset="?" glxropcode="?" category="ARB_draw_buffers_blend" glxflags="ignore" version="1.2" alias="BlendEquationi" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="mode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendEquationSeparateiARB" return="void" offset="?" glxropcode="?" category="ARB_draw_buffers_blend" glxflags="ignore" version="1.2" alias="BlendEquationSeparatei" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="modeRGB" kind="value" type="GLenum" input="true" />
				<param name="modeAlpha" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendFunciARB" return="void" offset="?" glxropcode="?" category="ARB_draw_buffers_blend" glxflags="ignore" version="1.2" alias="BlendFunci" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="src" kind="value" type="GLenum" input="true" />
				<param name="dst" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendFuncSeparateiARB" return="void" offset="?" glxropcode="?" category="ARB_draw_buffers_blend" glxflags="ignore" version="1.2" alias="BlendFuncSeparatei" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="srcRGB" kind="value" type="GLenum" input="true" />
				<param name="dstRGB" kind="value" type="GLenum" input="true" />
				<param name="srcAlpha" kind="value" type="GLenum" input="true" />
				<param name="dstAlpha" kind="value" type="GLenum" input="true" />
			</function>
			<function name="MinSampleShadingARB" return="void" offset="?" glxropcode="?" category="ARB_sample_shading" glxflags="ignore" version="1.2" alias="MinSampleShading" >
				<param name="value" kind="value" type="ColorF" input="true" />
			</function>
			<function name="NamedStringARB" return="void" offset="?" glxropcode="?" category="ARB_shading_language_include" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="namelen" kind="value" type="Int32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[namelen]" />
				<param name="stringlen" kind="value" type="Int32" input="true" />
				<param name="string" kind="array" type="Char" input="true" compute="[stringlen]" />
			</function>
			<function name="DeleteNamedStringARB" return="void" offset="?" glxropcode="?" category="ARB_shading_language_include" version="1.2" glxflags="ignore" >
				<param name="namelen" kind="value" type="Int32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[namelen]" />
			</function>
			<function name="CompileShaderIncludeARB" return="void" offset="?" glxropcode="?" category="ARB_shading_language_include" version="1.2" glxflags="ignore" >
				<param name="shader" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="path" kind="array" type="CharPointer" input="true" compute="[count]" />
				<param name="length" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="IsNamedStringARB" return="Boolean" offset="?" glxropcode="?" category="ARB_shading_language_include" version="1.2" glxflags="ignore" >
				<param name="namelen" kind="value" type="Int32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[namelen]" />
			</function>
			<function name="GetNamedStringARB" return="void" offset="?" dlflags="notlistable" category="ARB_shading_language_include" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="namelen" kind="value" type="Int32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[namelen]" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="stringlen" kind="array" type="Int32" input="false" compute="[1]" />
				<param name="string" kind="array" type="Char" input="false" compute="[bufSize]" />
			</function>
			<function name="GetNamedStringivARB" return="void" offset="?" dlflags="notlistable" category="ARB_shading_language_include" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="namelen" kind="value" type="Int32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[namelen]" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="BindFragDataLocationIndexed" return="void" offset="?" glxropcode="?" category="ARB_blend_func_extended" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="colorNumber" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[]" />
			</function>
			<function name="GetFragDataIndex" return="Int32" offset="?" dlflags="notlistable" category="ARB_blend_func_extended" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[]" />
			</function>
			<function name="GenSamplers" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="samplers" kind="array" type="UInt32" input="false" compute="[count]" />
			</function>
			<function name="DeleteSamplers" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="samplers" kind="array" type="UInt32" input="true" compute="[count]" />
			</function>
			<function name="IsSampler" return="Boolean" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindSampler" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="unit" kind="value" type="UInt32" input="true" />
				<param name="sampler" kind="value" type="UInt32" input="true" />
			</function>
			<function name="SamplerParameteri" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="SamplerParameteriv" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="SamplerParameterf" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="value" type="Float32" input="true" />
			</function>
			<function name="SamplerParameterfv" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="array" type="Float32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="SamplerParameterIiv" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="SamplerParameterIuiv" return="void" offset="?" glxropcode="?" category="ARB_sampler_objects" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="array" type="UInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetSamplerParameteriv" return="void" offset="?" dlflags="notlistable" category="ARB_sampler_objects" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetSamplerParameterIiv" return="void" offset="?" dlflags="notlistable" category="ARB_sampler_objects" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetSamplerParameterfv" return="void" offset="?" dlflags="notlistable" category="ARB_sampler_objects" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetSamplerParameterIuiv" return="void" offset="?" dlflags="notlistable" category="ARB_sampler_objects" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="sampler" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="QueryCounter" return="void" offset="?" glxropcode="?" category="ARB_timer_query" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
			</function>
			<function name="GetQueryObjecti64v" return="void" offset="?" dlflags="notlistable" category="ARB_timer_query" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetQueryObjectui64v" return="void" offset="?" dlflags="notlistable" category="ARB_timer_query" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="VertexP2ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="value" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexP2uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="VertexP3ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="value" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexP3uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="VertexP4ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="value" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexP4uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="TexCoordP1ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="TexCoordP1uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="TexCoordP2ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="TexCoordP2uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="TexCoordP3ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="TexCoordP3uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="TexCoordP4ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="TexCoordP4uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoordP1ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="texture" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MultiTexCoordP1uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="texture" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoordP2ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="texture" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MultiTexCoordP2uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="texture" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoordP3ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="texture" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MultiTexCoordP3uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="texture" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoordP4ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="texture" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MultiTexCoordP4uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="texture" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="NormalP3ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="value" type="UInt32" input="true" />
			</function>
			<function name="NormalP3uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="coords" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="ColorP3ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="color" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ColorP3uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="color" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="ColorP4ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="color" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ColorP4uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="color" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="SecondaryColorP3ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="color" kind="value" type="UInt32" input="true" />
			</function>
			<function name="SecondaryColorP3uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="color" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribP1ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="value" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribP1uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribP2ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="value" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribP2uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribP3ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="value" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribP3uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribP4ui" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="value" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribP4uiv" return="void" offset="?" glxropcode="?" category="ARB_vertex_type_2_10_10_10_rev" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="DrawArraysIndirect" return="void" offset="?" glxropcode="?" category="ARB_draw_indirect" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="indirect" kind="array" type="Void" input="true" compute="[]" />
			</function>
			<function name="DrawElementsIndirect" return="void" offset="?" glxropcode="?" category="ARB_draw_indirect" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="indirect" kind="array" type="Void" input="true" compute="[]" />
			</function>
			<function name="Uniform1d" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
			</function>
			<function name="Uniform2d" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
			</function>
			<function name="Uniform3d" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="Uniform4d" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="Uniform1dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="Uniform2dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="Uniform3dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="Uniform4dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix2dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix3dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix4dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix2x3dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix2x4dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix3x2dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix3x4dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix4x2dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="UniformMatrix4x3dv" return="void" offset="?" glxropcode="?" category="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="GetUniformdv" return="void" offset="?" dlflags="notlistable" category="ARB_gpu_shader_fp64" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[COMPSIZE(location)]" />
			</function>
			<function name="GetSubroutineUniformLocation" return="Int32" offset="?" dlflags="notlistable" category="ARB_shader_subroutine" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[]" />
			</function>
			<function name="GetSubroutineIndex" return="UInt32" offset="?" dlflags="notlistable" category="ARB_shader_subroutine" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[]" />
			</function>
			<function name="GetActiveSubroutineUniformiv" return="void" offset="?" dlflags="notlistable" category="ARB_shader_subroutine" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="values" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetActiveSubroutineUniformName" return="void" offset="?" dlflags="notlistable" category="ARB_shader_subroutine" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="bufsize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="name" kind="array" type="Char" input="false" compute="[bufsize]" />
			</function>
			<function name="GetActiveSubroutineName" return="void" offset="?" dlflags="notlistable" category="ARB_shader_subroutine" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="bufsize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="name" kind="array" type="Char" input="false" compute="[bufsize]" />
			</function>
			<function name="UniformSubroutinesuiv" return="void" offset="?" glxropcode="?" category="ARB_shader_subroutine" version="1.2" glxflags="ignore" >
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="indices" kind="array" type="UInt32" input="true" compute="[count]" />
			</function>
			<function name="GetUniformSubroutineuiv" return="void" offset="?" dlflags="notlistable" category="ARB_shader_subroutine" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[1]" />
			</function>
			<function name="GetProgramStageiv" return="void" offset="?" dlflags="notlistable" category="ARB_shader_subroutine" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="values" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="PatchParameteri" return="void" offset="?" glxropcode="?" category="ARB_tessellation_shader" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="value" kind="value" type="Int32" input="true" />
			</function>
			<function name="PatchParameterfv" return="void" offset="?" glxropcode="?" category="ARB_tessellation_shader" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="values" kind="array" type="Float32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="BindTransformFeedback" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback2" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteTransformFeedbacks" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback2" version="1.2" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenTransformFeedbacks" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback2" version="1.2" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="IsTransformFeedback" return="Boolean" offset="?" glxropcode="?" category="ARB_transform_feedback2" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="PauseTransformFeedback" return="void" offset="?" category="ARB_transform_feedback2" glxropcode="?" version="1.2" glxflags="ignore" />
			<function name="ResumeTransformFeedback" return="void" offset="?" category="ARB_transform_feedback2" glxropcode="?" version="1.2" glxflags="ignore" />
			<function name="DrawTransformFeedback" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback2" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DrawTransformFeedbackStream" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback3" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BeginQueryIndexed" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback3" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EndQueryIndexed" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback3" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetQueryIndexediv" return="void" offset="?" dlflags="notlistable" category="ARB_transform_feedback3" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ReleaseShaderCompiler" return="void" offset="?" category="ARB_ES2_compatibility" glxropcode="?" version="4.1" glxflags="ignore" />
			<function name="ShaderBinary" return="void" offset="?" glxropcode="?" category="ARB_ES2_compatibility" version="4.1" glxflags="ignore" >
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="shaders" kind="array" type="UInt32" input="true" compute="[count]" />
				<param name="binaryformat" kind="value" type="GLenum" input="true" />
				<param name="binary" kind="array" type="Void" input="true" compute="[length]" />
				<param name="length" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetShaderPrecisionFormat" return="void" offset="?" dlflags="notlistable" category="ARB_ES2_compatibility" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="shadertype" kind="value" type="GLenum" input="true" />
				<param name="precisiontype" kind="value" type="GLenum" input="true" />
				<param name="range" kind="array" type="Int32" input="false" compute="[2]" />
				<param name="precision" kind="array" type="Int32" input="false" compute="[2]" />
			</function>
			<function name="DepthRangef" return="void" offset="?" glxropcode="?" category="ARB_ES2_compatibility" version="4.1" glxflags="ignore" >
				<param name="n" kind="value" type="Float32" input="true" />
				<param name="f" kind="value" type="Float32" input="true" />
			</function>
			<function name="ClearDepthf" return="void" offset="?" glxropcode="?" category="ARB_ES2_compatibility" version="4.1" glxflags="ignore" >
				<param name="d" kind="value" type="Float32" input="true" />
			</function>
			<function name="GetProgramBinary" return="void" offset="?" dlflags="notlistable" category="ARB_get_program_binary" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="binaryFormat" kind="array" type="GLenum" input="false" compute="[1]" />
				<param name="binary" kind="array" type="Void" input="false" compute="[COMPSIZE(length)]" />
			</function>
			<function name="ProgramBinary" return="void" offset="?" glxropcode="?" category="ARB_get_program_binary" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="binaryFormat" kind="value" type="GLenum" input="true" />
				<param name="binary" kind="array" type="Void" input="true" compute="[length]" />
				<param name="length" kind="value" type="SizeI" input="true" />
			</function>
			<function name="ProgramParameteri" return="void" extension="soft" glfflags="ignore" version="3.0" category="ARB_get_program_binary" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ProgramParameterPName" input="true" />
				<param name="value" kind="value" type="Int32" input="true" />
			</function>
			<function name="UseProgramStages" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="pipeline" kind="value" type="UInt32" input="true" />
				<param name="stages" kind="value" type="GLbitfield" input="true" />
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ActiveShaderProgram" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="pipeline" kind="value" type="UInt32" input="true" />
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="CreateShaderProgramv" return="UInt32" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="strings" kind="array" type="ConstCharPointer" input="true" compute="[count]" />
			</function>
			<function name="BindProgramPipeline" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="pipeline" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteProgramPipelines" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="pipelines" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenProgramPipelines" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="pipelines" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="IsProgramPipeline" return="Boolean" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="pipeline" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetProgramPipelineiv" return="void" offset="?" dlflags="notlistable" category="ARB_separate_shader_objects" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="pipeline" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ProgramUniform1i" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramUniform1iv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[1]" />
			</function>
			<function name="ProgramUniform1f" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramUniform1fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[1]" />
			</function>
			<function name="ProgramUniform1d" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramUniform1dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[1]" />
			</function>
			<function name="ProgramUniform1ui" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform1uiv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="ProgramUniform2i" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramUniform2iv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[2]" />
			</function>
			<function name="ProgramUniform2f" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramUniform2fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[2]" />
			</function>
			<function name="ProgramUniform2d" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float64" input="true" />
				<param name="v1" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramUniform2dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[2]" />
			</function>
			<function name="ProgramUniform2ui" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform2uiv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[2]" />
			</function>
			<function name="ProgramUniform3i" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
				<param name="v2" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramUniform3iv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[3]" />
			</function>
			<function name="ProgramUniform3f" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
				<param name="v2" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramUniform3fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ProgramUniform3d" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float64" input="true" />
				<param name="v1" kind="value" type="Float64" input="true" />
				<param name="v2" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramUniform3dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="ProgramUniform3ui" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
				<param name="v2" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform3uiv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[3]" />
			</function>
			<function name="ProgramUniform4i" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
				<param name="v2" kind="value" type="Int32" input="true" />
				<param name="v3" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramUniform4iv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="ProgramUniform4f" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
				<param name="v2" kind="value" type="Float32" input="true" />
				<param name="v3" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramUniform4fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="ProgramUniform4d" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float64" input="true" />
				<param name="v1" kind="value" type="Float64" input="true" />
				<param name="v2" kind="value" type="Float64" input="true" />
				<param name="v3" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramUniform4dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="ProgramUniform4ui" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
				<param name="v2" kind="value" type="UInt32" input="true" />
				<param name="v3" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform4uiv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="ProgramUniformMatrix2fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[2]" />
			</function>
			<function name="ProgramUniformMatrix3fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ProgramUniformMatrix4fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="ProgramUniformMatrix2dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[2]" />
			</function>
			<function name="ProgramUniformMatrix3dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="ProgramUniformMatrix4dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="ProgramUniformMatrix2x3fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix3x2fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix2x4fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix4x2fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix3x4fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix4x3fv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix2x3dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix3x2dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix2x4dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix4x2dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix3x4dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix4x3dv" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ValidateProgramPipeline" return="void" offset="?" glxropcode="?" category="ARB_separate_shader_objects" version="4.1" glxflags="ignore" >
				<param name="pipeline" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetProgramPipelineInfoLog" return="void" offset="?" dlflags="notlistable" category="ARB_separate_shader_objects" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="pipeline" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="infoLog" kind="array" type="Char" input="false" compute="[COMPSIZE(length)]" />
			</function>
			<function name="VertexAttribL1d" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttribL2d" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttribL3d" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttribL4d" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttribL1dv" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribL2dv" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[2]" />
			</function>
			<function name="VertexAttribL3dv" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="VertexAttribL4dv" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribLPointer" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[size]" />
			</function>
			<function name="GetVertexAttribLdv" return="void" offset="?" dlflags="notlistable" category="ARB_vertex_attrib_64bit" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ViewportArrayv" return="void" offset="?" glxropcode="?" category="ARB_viewport_array" version="4.1" glxflags="ignore" >
				<param name="first" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[COMPSIZE(count)]" />
			</function>
			<function name="ViewportIndexedf" return="void" offset="?" glxropcode="?" category="ARB_viewport_array" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
				<param name="h" kind="value" type="Float32" input="true" />
			</function>
			<function name="ViewportIndexedfv" return="void" offset="?" glxropcode="?" category="ARB_viewport_array" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="ScissorArrayv" return="void" offset="?" glxropcode="?" category="ARB_viewport_array" version="4.1" glxflags="ignore" >
				<param name="first" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[COMPSIZE(count)]" />
			</function>
			<function name="ScissorIndexed" return="void" offset="?" glxropcode="?" category="ARB_viewport_array" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="left" kind="value" type="Int32" input="true" />
				<param name="bottom" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="ScissorIndexedv" return="void" offset="?" glxropcode="?" category="ARB_viewport_array" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="DepthRangeArrayv" return="void" offset="?" glxropcode="?" category="ARB_viewport_array" version="4.1" glxflags="ignore" >
				<param name="first" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[COMPSIZE(count)]" />
			</function>
			<function name="DepthRangeIndexed" return="void" offset="?" glxropcode="?" category="ARB_viewport_array" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="n" kind="value" type="Float64" input="true" />
				<param name="f" kind="value" type="Float64" input="true" />
			</function>
			<function name="GetFloati_v" return="void" offset="?" dlflags="notlistable" category="ARB_viewport_array" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Float32" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetDoublei_v" return="void" offset="?" dlflags="notlistable" category="ARB_viewport_array" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Float64" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="CreateSyncFromCLeventARB" return="sync" offset="?" glxropcode="?" category="ARB_cl_event" version="4.1" glxflags="ignore" >
				<param name="context" kind="value" type="cl_context" input="true" />
				<param name="event" kind="value" type="cl_event" input="true" />
				<param name="flags" kind="value" type="GLbitfield" input="true" />
			</function>
			<function name="DebugMessageControlARB" return="void" offset="?" glxropcode="?" category="ARB_debug_output" version="4.1" glxflags="ignore" >
				<param name="source" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="severity" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="true" compute="[count]" />
				<param name="enabled" kind="value" type="Boolean" input="true" />
			</function>
			<function name="DebugMessageInsertARB" return="void" offset="?" glxropcode="?" category="ARB_debug_output" version="4.1" glxflags="ignore" >
				<param name="source" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="severity" kind="value" type="GLenum" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="buf" kind="array" type="Char" input="true" compute="[length]" />
			</function>
			<function name="DebugMessageCallbackARB" return="void" offset="?" glxropcode="?" category="ARB_debug_output" version="4.1" glxflags="ignore" >
				<param name="callback" kind="value" type="GLDEBUGPROCARB" input="true" />
				<param name="userParam" kind="array" type="Void" input="true" compute="[COMPSIZE(callback)]" />
			</function>
			<function name="GetDebugMessageLogARB" return="UInt32" offset="?" dlflags="notlistable" category="ARB_debug_output" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="count" kind="value" type="UInt32" input="true" />
				<param name="bufsize" kind="value" type="SizeI" input="true" />
				<param name="sources" kind="array" type="GLenum" input="false" compute="[count]" />
				<param name="types" kind="array" type="GLenum" input="false" compute="[count]" />
				<param name="ids" kind="array" type="UInt32" input="false" compute="[count]" />
				<param name="severities" kind="array" type="GLenum" input="false" compute="[count]" />
				<param name="lengths" kind="array" type="SizeI" input="false" compute="[count]" />
				<param name="messageLog" kind="array" type="Char" input="false" compute="[COMPSIZE(lengths)]" />
			</function>
			<function name="GetGraphicsResetStatusARB" return="GLenum" offset="?" glxsingle="?" version="4.1" category="ARB_robustness" dlflags="notlistable" glxflags="ignore" />
			<function name="GetnMapdvARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="query" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float64" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnMapfvARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="query" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnMapivARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="query" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Int32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnPixelMapfvARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="map" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="Float32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnPixelMapuivARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="map" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="UInt32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnPixelMapusvARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="map" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="UInt16" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnPolygonStippleARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="pattern" kind="array" type="UInt8" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnColorTableARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="table" kind="array" type="Void" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnConvolutionFilterARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="image" kind="array" type="Void" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnSeparableFilterARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="rowBufSize" kind="value" type="SizeI" input="true" />
				<param name="row" kind="array" type="Void" input="false" compute="[rowBufSize]" />
				<param name="columnBufSize" kind="value" type="SizeI" input="true" />
				<param name="column" kind="array" type="Void" input="false" compute="[columnBufSize]" />
				<param name="span" kind="array" type="Void" input="false" compute="[0]" />
			</function>
			<function name="GetnHistogramARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="reset" kind="value" type="Boolean" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="Void" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnMinmaxARB" return="void" offset="?" profile="compatibility" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="reset" kind="value" type="Boolean" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="Void" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnTexImageARB" return="void" offset="?" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="img" kind="array" type="Void" input="false" compute="[bufSize]" />
			</function>
			<function name="ReadnPixelsARB" return="void" offset="?" glxropcode="?" category="ARB_robustness" version="4.1" glxflags="ignore" >
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="Void" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnCompressedTexImageARB" return="void" offset="?" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="lod" kind="value" type="Int32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="img" kind="array" type="Void" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnUniformfvARB" return="void" offset="?" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnUniformivARB" return="void" offset="?" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnUniformuivARB" return="void" offset="?" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetnUniformdvARB" return="void" offset="?" dlflags="notlistable" category="ARB_robustness" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[bufSize]" />
			</function>
			<function name="DrawArraysInstancedBaseInstance" return="void" offset="?" glxropcode="?" category="ARB_base_instance" version="4.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="instancecount" kind="value" type="SizeI" input="true" />
				<param name="baseinstance" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DrawElementsInstancedBaseInstance" return="void" offset="?" glxropcode="?" category="ARB_base_instance" version="4.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="indices" kind="array" type="void" input="true" compute="[count]" />
				<param name="instancecount" kind="value" type="SizeI" input="true" />
				<param name="baseinstance" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DrawElementsInstancedBaseVertexBaseInstance" return="void" offset="?" glxropcode="?" category="ARB_base_instance" version="4.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="indices" kind="array" type="void" input="true" compute="[count]" />
				<param name="instancecount" kind="value" type="SizeI" input="true" />
				<param name="basevertex" kind="value" type="Int32" input="true" />
				<param name="baseinstance" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DrawTransformFeedbackInstanced" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback_instanced" version="4.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="instancecount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DrawTransformFeedbackStreamInstanced" return="void" offset="?" glxropcode="?" category="ARB_transform_feedback_instanced" version="4.2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="instancecount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetInternalformativ" return="void" offset="?" dlflags="notlistable" category="ARB_internalformat_query" glxsingle="?" version="4.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetActiveAtomicCounterBufferiv" return="void" offset="?" dlflags="notlistable" category="ARB_shader_atomic_counters" glxsingle="?" version="4.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="bufferIndex" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="BindImageTexture" return="void" offset="?" glxropcode="?" category="ARB_shader_image_load_store" version="4.2" glxflags="ignore" >
				<param name="unit" kind="value" type="UInt32" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
				<param name="layered" kind="value" type="Boolean" input="true" />
				<param name="layer" kind="value" type="Int32" input="true" />
				<param name="access" kind="value" type="GLenum" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
			</function>
			<function name="MemoryBarrier" return="void" offset="?" glxropcode="?" category="ARB_shader_image_load_store" version="4.2" glxflags="ignore" >
				<param name="barriers" kind="value" type="GLbitfield" input="true" />
			</function>
			<function name="TexStorage1D" return="void" offset="?" glxropcode="?" category="ARB_texture_storage" version="4.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="levels" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TexStorage2D" return="void" offset="?" glxropcode="?" category="ARB_texture_storage" version="4.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="levels" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TexStorage3D" return="void" offset="?" glxropcode="?" category="ARB_texture_storage" version="4.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="levels" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TextureStorage1DEXT" return="void" offset="?" glxropcode="?" category="ARB_texture_storage" version="4.2" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="levels" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TextureStorage2DEXT" return="void" offset="?" glxropcode="?" category="ARB_texture_storage" version="4.2" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="levels" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TextureStorage3DEXT" return="void" offset="?" glxropcode="?" category="ARB_texture_storage" version="4.2" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="levels" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DebugMessageControl" return="void" offset="?" glxropcode="?" category="KHR_debug" version="4.3" glxflags="ignore" >
				<param name="source" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="severity" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="true" compute="[count]" />
				<param name="enabled" kind="value" type="Boolean" input="true" />
			</function>
			<function name="DebugMessageInsert" return="void" offset="?" glxropcode="?" category="KHR_debug" version="4.3" glxflags="ignore" >
				<param name="source" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="severity" kind="value" type="GLenum" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="buf" kind="array" type="Char" input="true" compute="[COMPSIZE(buf/length)]" />
			</function>
			<function name="DebugMessageCallback" return="void" offset="?" glxropcode="?" category="KHR_debug" version="4.3" glxflags="ignore" >
				<param name="callback" kind="value" type="GLDEBUGPROC" input="true" />
				<param name="userParam" kind="reference" type="void" input="true" />
			</function>
			<function name="GetDebugMessageLog" return="UInt32" offset="?" dlflags="notlistable" category="KHR_debug" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="count" kind="value" type="UInt32" input="true" />
				<param name="bufsize" kind="value" type="SizeI" input="true" />
				<param name="sources" kind="array" type="GLenum" input="false" compute="[COMPSIZE(count)]" />
				<param name="types" kind="array" type="GLenum" input="false" compute="[COMPSIZE(count)]" />
				<param name="ids" kind="array" type="UInt32" input="false" compute="[COMPSIZE(count)]" />
				<param name="severities" kind="array" type="GLenum" input="false" compute="[COMPSIZE(count)]" />
				<param name="lengths" kind="array" type="SizeI" input="false" compute="[COMPSIZE(count)]" />
				<param name="messageLog" kind="array" type="Char" input="false" compute="[COMPSIZE(bufsize)]" />
			</function>
			<function name="PushDebugGroup" return="void" offset="?" glxropcode="?" category="KHR_debug" version="4.3" glxflags="ignore" >
				<param name="source" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="message" kind="array" type="Char" input="true" compute="[COMPSIZE(message/length)]" />
			</function>
			<function name="PopDebugGroup" return="void" offset="?" category="KHR_debug" glxropcode="?" version="4.3" glxflags="ignore" />
			<function name="ObjectLabel" return="void" offset="?" glxropcode="?" category="KHR_debug" version="4.3" glxflags="ignore" >
				<param name="identifier" kind="value" type="GLenum" input="true" />
				<param name="name" kind="value" type="UInt32" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="label" kind="array" type="Char" input="true" compute="[COMPSIZE(label/length)]" />
			</function>
			<function name="GetObjectLabel" return="void" offset="?" dlflags="notlistable" category="KHR_debug" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="identifier" kind="value" type="GLenum" input="true" />
				<param name="name" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="reference" type="SizeI" input="false" />
				<param name="label" kind="array" type="Char" input="false" compute="[bufSize]" />
			</function>
			<function name="ObjectPtrLabel" return="void" offset="?" glxropcode="?" category="KHR_debug" version="4.3" glxflags="ignore" >
				<param name="ptr" kind="reference" type="void" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="label" kind="array" type="Char" input="true" compute="[COMPSIZE(label/length)]" />
			</function>
			<function name="GetObjectPtrLabel" return="void" offset="?" dlflags="notlistable" category="KHR_debug" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="ptr" kind="reference" type="void" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="reference" type="SizeI" input="false" />
				<param name="label" kind="array" type="Char" input="false" compute="[bufSize]" />
			</function>
			<function name="ClearBufferData" return="void" offset="?" glxropcode="?" category="ARB_clear_buffer_object" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="data" kind="array" type="void" input="true" compute="[COMPSIZE(format/type)]" />
			</function>
			<function name="ClearBufferSubData" return="void" offset="?" glxropcode="?" category="ARB_clear_buffer_object" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="data" kind="array" type="void" input="true" compute="[COMPSIZE(format/type)]" />
			</function>
			<function name="ClearNamedBufferDataEXT" return="void" offset="?" glxropcode="?" category="ARB_clear_buffer_object" version="4.3" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="data" kind="array" type="void" input="true" compute="[COMPSIZE(format/type)]" />
			</function>
			<function name="ClearNamedBufferSubDataEXT" return="void" offset="?" glxropcode="?" category="ARB_clear_buffer_object" version="4.3" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="offset" kind="value" type="BufferSize" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
				<param name="data" kind="array" type="void" input="true" compute="[COMPSIZE(format/type)]" />
			</function>
			<function name="DispatchCompute" return="void" offset="?" glxropcode="?" category="ARB_compute_shader" version="4.3" glxflags="ignore" >
				<param name="num_groups_x" kind="value" type="UInt32" input="true" />
				<param name="num_groups_y" kind="value" type="UInt32" input="true" />
				<param name="num_groups_z" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DispatchComputeIndirect" return="void" offset="?" glxropcode="?" category="ARB_compute_shader" version="4.3" glxflags="ignore" >
				<param name="indirect" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="CopyImageSubData" return="void" offset="?" glxropcode="?" category="ARB_copy_image" version="4.3" glxflags="ignore" >
				<param name="srcName" kind="value" type="UInt32" input="true" />
				<param name="srcTarget" kind="value" type="GLenum" input="true" />
				<param name="srcLevel" kind="value" type="Int32" input="true" />
				<param name="srcX" kind="value" type="Int32" input="true" />
				<param name="srcY" kind="value" type="Int32" input="true" />
				<param name="srcZ" kind="value" type="Int32" input="true" />
				<param name="dstName" kind="value" type="UInt32" input="true" />
				<param name="dstTarget" kind="value" type="GLenum" input="true" />
				<param name="dstLevel" kind="value" type="Int32" input="true" />
				<param name="dstX" kind="value" type="Int32" input="true" />
				<param name="dstY" kind="value" type="Int32" input="true" />
				<param name="dstZ" kind="value" type="Int32" input="true" />
				<param name="srcWidth" kind="value" type="SizeI" input="true" />
				<param name="srcHeight" kind="value" type="SizeI" input="true" />
				<param name="srcDepth" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TextureView" return="void" offset="?" glxropcode="?" category="ARB_texture_view" version="4.3" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="origtexture" kind="value" type="UInt32" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="minlevel" kind="value" type="UInt32" input="true" />
				<param name="numlevels" kind="value" type="UInt32" input="true" />
				<param name="minlayer" kind="value" type="UInt32" input="true" />
				<param name="numlayers" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindVertexBuffer" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="bindingindex" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="VertexAttribFormat" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="attribindex" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="relativeoffset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribIFormat" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="attribindex" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="relativeoffset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribLFormat" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="attribindex" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="relativeoffset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribBinding" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="attribindex" kind="value" type="UInt32" input="true" />
				<param name="bindingindex" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexBindingDivisor" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="bindingindex" kind="value" type="UInt32" input="true" />
				<param name="divisor" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexArrayBindVertexBufferEXT" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="bindingindex" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="VertexArrayVertexAttribFormatEXT" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="attribindex" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="relativeoffset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexArrayVertexAttribIFormatEXT" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="attribindex" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="relativeoffset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexArrayVertexAttribLFormatEXT" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="attribindex" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="relativeoffset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexArrayVertexAttribBindingEXT" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="attribindex" kind="value" type="UInt32" input="true" />
				<param name="bindingindex" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexArrayVertexBindingDivisorEXT" return="void" offset="?" glxropcode="?" category="ARB_vertex_attrib_binding" version="4.3" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="bindingindex" kind="value" type="UInt32" input="true" />
				<param name="divisor" kind="value" type="UInt32" input="true" />
			</function>
			<function name="FramebufferParameteri" return="void" offset="?" glxropcode="?" category="ARB_framebuffer_no_attachments" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="GetFramebufferParameteriv" return="void" offset="?" dlflags="notlistable" category="ARB_framebuffer_no_attachments" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="NamedFramebufferParameteriEXT" return="void" offset="?" glxropcode="?" category="ARB_framebuffer_no_attachments" version="4.3" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="GetNamedFramebufferParameterivEXT" return="void" offset="?" dlflags="notlistable" category="ARB_framebuffer_no_attachments" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetInternalformati64v" return="void" offset="?" dlflags="notlistable" category="ARB_internalformat_query2" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Int64" input="false" compute="[bufSize]" />
			</function>
			<function name="InvalidateTexSubImage" return="void" offset="?" glxropcode="?" category="ARB_invalidate_subdata" version="4.3" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
				<param name="xoffset" kind="value" type="Int32" input="true" />
				<param name="yoffset" kind="value" type="Int32" input="true" />
				<param name="zoffset" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
			</function>
			<function name="InvalidateTexImage" return="void" offset="?" glxropcode="?" category="ARB_invalidate_subdata" version="4.3" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
			</function>
			<function name="InvalidateBufferSubData" return="void" offset="?" glxropcode="?" category="ARB_invalidate_subdata" version="4.3" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="length" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="InvalidateBufferData" return="void" offset="?" glxropcode="?" category="ARB_invalidate_subdata" version="4.3" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="InvalidateFramebuffer" return="void" offset="?" glxropcode="?" category="ARB_invalidate_subdata" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="numAttachments" kind="value" type="SizeI" input="true" />
				<param name="attachments" kind="array" type="GLenum" input="true" compute="[numAttachments]" />
			</function>
			<function name="InvalidateSubFramebuffer" return="void" offset="?" glxropcode="?" category="ARB_invalidate_subdata" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="numAttachments" kind="value" type="SizeI" input="true" />
				<param name="attachments" kind="array" type="GLenum" input="true" compute="[numAttachments]" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="MultiDrawArraysIndirect" return="void" offset="?" glxropcode="?" category="ARB_multi_draw_indirect" version="4.3" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="indirect" kind="array" type="void" input="true" compute="[COMPSIZE(drawcount/stride)]" />
				<param name="drawcount" kind="value" type="SizeI" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="MultiDrawElementsIndirect" return="void" offset="?" glxropcode="?" category="ARB_multi_draw_indirect" version="4.3" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="indirect" kind="array" type="void" input="true" compute="[COMPSIZE(drawcount/stride)]" />
				<param name="drawcount" kind="value" type="SizeI" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetProgramInterfaceiv" return="void" offset="?" dlflags="notlistable" category="ARB_program_interface_query" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="programInterface" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetProgramResourceIndex" return="UInt32" offset="?" dlflags="notlistable" category="ARB_program_interface_query" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="programInterface" kind="value" type="GLenum" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="GetProgramResourceName" return="void" offset="?" dlflags="notlistable" category="ARB_program_interface_query" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="programInterface" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="reference" type="SizeI" input="false" />
				<param name="name" kind="array" type="Char" input="false" compute="[bufSize]" />
			</function>
			<function name="GetProgramResourceiv" return="void" offset="?" dlflags="notlistable" category="ARB_program_interface_query" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="programInterface" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="propCount" kind="value" type="SizeI" input="true" />
				<param name="props" kind="array" type="GLenum" input="true" compute="[propCount]" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="reference" type="SizeI" input="false" />
				<param name="params" kind="array" type="Int32" input="false" compute="[bufSize]" />
			</function>
			<function name="GetProgramResourceLocation" return="Int32" offset="?" dlflags="notlistable" category="ARB_program_interface_query" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="programInterface" kind="value" type="GLenum" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="GetProgramResourceLocationIndex" return="Int32" offset="?" dlflags="notlistable" category="ARB_program_interface_query" glxsingle="?" version="4.3" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="programInterface" kind="value" type="GLenum" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="ShaderStorageBlockBinding" return="void" offset="?" glxropcode="?" category="ARB_shader_storage_buffer_object" version="4.3" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="storageBlockIndex" kind="value" type="UInt32" input="true" />
				<param name="storageBlockBinding" kind="value" type="UInt32" input="true" />
			</function>
			<function name="TexBufferRange" return="void" offset="?" glxropcode="?" category="ARB_texture_buffer_range" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="TextureBufferRangeEXT" return="void" offset="?" glxropcode="?" category="ARB_texture_buffer_range" version="4.3" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="TexStorage2DMultisample" return="void" offset="?" glxropcode="?" category="ARB_texture_storage_multisample" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="fixedsamplelocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TexStorage3DMultisample" return="void" offset="?" glxropcode="?" category="ARB_texture_storage_multisample" version="4.3" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="fixedsamplelocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TextureStorage2DMultisampleEXT" return="void" offset="?" glxropcode="?" category="ARB_texture_storage_multisample" version="4.3" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="fixedsamplelocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TextureStorage3DMultisampleEXT" return="void" offset="?" glxropcode="?" category="ARB_texture_storage_multisample" version="4.3" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="fixedsamplelocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="BlendColorEXT" return="void" extension="soft" glxropcode="4096" category="EXT_blend_color" glxflags="EXT" version="1.0" alias="BlendColor" >
				<param name="red" kind="value" type="ColorF" input="true" />
				<param name="green" kind="value" type="ColorF" input="true" />
				<param name="blue" kind="value" type="ColorF" input="true" />
				<param name="alpha" kind="value" type="ColorF" input="true" />
			</function>
			<function name="PolygonOffsetEXT" return="void" offset="414" extension="soft" glxropcode="4098" category="EXT_polygon_offset" version="1.0" glxflags="EXT" >
				<param name="factor" kind="value" type="Float32" input="true" />
				<param name="bias" kind="value" type="Float32" input="true" />
			</function>
			<function name="TexImage3DEXT" return="void" glxropcode="4114" dlflags="handcode" version="1.0" category="EXT_texture3D" glxflags="client-handcode" alias="TexImage3D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth)]" />
			</function>
			<function name="TexSubImage3DEXT" return="void" glxropcode="4115" dlflags="handcode" version="1.0" category="EXT_texture3D" glxflags="client-handcode" alias="TexSubImage3D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth)]" />
			</function>
			<function name="GetTexFilterFuncSGIS" return="void" offset="415" dlflags="notlistable" category="SGIS_texture_filter4" version="1.0" glxflags="SGI" glxvendorpriv="4101" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="filter" kind="value" type="TextureFilterSGIS" input="true" />
				<param name="weights" kind="array" type="Float32" input="false" compute="[COMPSIZE(target/filter)]" />
			</function>
			<function name="TexFilterFuncSGIS" return="void" offset="416" glxropcode="2064" category="SGIS_texture_filter4" version="1.0" glxflags="SGI" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="filter" kind="value" type="TextureFilterSGIS" input="true" />
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="weights" kind="array" type="Float32" input="true" compute="[n]" />
			</function>
			<function name="TexSubImage1DEXT" return="void" glxropcode="4099" dlflags="handcode" version="1.0" category="EXT_subtexture" glxflags="client-handcode" alias="TexSubImage1D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="TexSubImage2DEXT" return="void" glxropcode="4100" dlflags="handcode" version="1.0" category="EXT_subtexture" glxflags="client-handcode" alias="TexSubImage2D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="CopyTexImage1DEXT" return="void" glxropcode="4119" category="EXT_copy_texture" glxflags="EXT" version="1.0" alias="CopyTexImage1D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="CopyTexImage2DEXT" return="void" glxropcode="4120" category="EXT_copy_texture" glxflags="EXT" version="1.0" alias="CopyTexImage2D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="CopyTexSubImage1DEXT" return="void" glxropcode="4121" category="EXT_copy_texture" glxflags="EXT" version="1.0" alias="CopyTexSubImage1D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="CopyTexSubImage2DEXT" return="void" glxropcode="4122" category="EXT_copy_texture" glxflags="EXT" version="1.0" alias="CopyTexSubImage2D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="CopyTexSubImage3DEXT" return="void" glxropcode="4123" category="EXT_copy_texture" glxflags="EXT" version="1.0" alias="CopyTexSubImage3D" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetHistogramEXT" return="void" offset="417" dlflags="notlistable" version="1.0" category="EXT_histogram" glxflags="client-handcode" glxvendorpriv="5" >
				<param name="target" kind="value" type="HistogramTargetEXT" input="true" />
				<param name="reset" kind="value" type="Boolean" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="values" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetHistogramParameterfvEXT" return="void" offset="418" dlflags="notlistable" category="EXT_histogram" version="1.0" glxflags="EXT" glxvendorpriv="6" >
				<param name="target" kind="value" type="HistogramTargetEXT" input="true" />
				<param name="pname" kind="value" type="GetHistogramParameterPNameEXT" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetHistogramParameterivEXT" return="void" offset="419" dlflags="notlistable" category="EXT_histogram" version="1.0" glxflags="EXT" glxvendorpriv="7" >
				<param name="target" kind="value" type="HistogramTargetEXT" input="true" />
				<param name="pname" kind="value" type="GetHistogramParameterPNameEXT" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMinmaxEXT" return="void" offset="420" dlflags="notlistable" version="1.0" category="EXT_histogram" glxflags="client-handcode" glxvendorpriv="8" >
				<param name="target" kind="value" type="MinmaxTargetEXT" input="true" />
				<param name="reset" kind="value" type="Boolean" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="values" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetMinmaxParameterfvEXT" return="void" offset="421" dlflags="notlistable" category="EXT_histogram" version="1.0" glxflags="EXT" glxvendorpriv="9" >
				<param name="target" kind="value" type="MinmaxTargetEXT" input="true" />
				<param name="pname" kind="value" type="GetMinmaxParameterPNameEXT" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMinmaxParameterivEXT" return="void" offset="422" dlflags="notlistable" category="EXT_histogram" version="1.0" glxflags="EXT" glxvendorpriv="10" >
				<param name="target" kind="value" type="MinmaxTargetEXT" input="true" />
				<param name="pname" kind="value" type="GetMinmaxParameterPNameEXT" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="HistogramEXT" return="void" glxropcode="4110" category="EXT_histogram" glxflags="EXT" version="1.0" alias="Histogram" >
				<param name="target" kind="value" type="HistogramTargetEXT" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="sink" kind="value" type="Boolean" input="true" />
			</function>
			<function name="MinmaxEXT" return="void" glxropcode="4111" category="EXT_histogram" glxflags="EXT" version="1.0" alias="Minmax" >
				<param name="target" kind="value" type="MinmaxTargetEXT" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="sink" kind="value" type="Boolean" input="true" />
			</function>
			<function name="ResetHistogramEXT" return="void" glxropcode="4112" category="EXT_histogram" glxflags="EXT" version="1.0" alias="ResetHistogram" >
				<param name="target" kind="value" type="HistogramTargetEXT" input="true" />
			</function>
			<function name="ResetMinmaxEXT" return="void" glxropcode="4113" category="EXT_histogram" glxflags="EXT" version="1.0" alias="ResetMinmax" >
				<param name="target" kind="value" type="MinmaxTargetEXT" input="true" />
			</function>
			<function name="ConvolutionFilter1DEXT" return="void" glxropcode="4101" dlflags="handcode" version="1.0" category="EXT_convolution" glxflags="client-handcode" alias="ConvolutionFilter1D" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="image" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="ConvolutionFilter2DEXT" return="void" glxropcode="4102" dlflags="handcode" version="1.0" category="EXT_convolution" glxflags="client-handcode" alias="ConvolutionFilter2D" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="image" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="ConvolutionParameterfEXT" return="void" glxropcode="4103" category="EXT_convolution" glxflags="EXT" version="1.0" alias="ConvolutionParameterf" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameterEXT" input="true" />
				<param name="params" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="ConvolutionParameterfvEXT" return="void" glxropcode="4104" category="EXT_convolution" glxflags="EXT" version="1.0" alias="ConvolutionParameterfv" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameterEXT" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ConvolutionParameteriEXT" return="void" glxropcode="4105" category="EXT_convolution" glxflags="EXT" version="1.0" alias="ConvolutionParameteri" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameterEXT" input="true" />
				<param name="params" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="ConvolutionParameterivEXT" return="void" glxropcode="4106" category="EXT_convolution" glxflags="EXT" version="1.0" alias="ConvolutionParameteriv" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameterEXT" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="CopyConvolutionFilter1DEXT" return="void" glxropcode="4107" category="EXT_convolution" glxflags="EXT" version="1.0" alias="CopyConvolutionFilter1D" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="CopyConvolutionFilter2DEXT" return="void" glxropcode="4108" category="EXT_convolution" glxflags="EXT" version="1.0" alias="CopyConvolutionFilter2D" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetConvolutionFilterEXT" return="void" offset="423" dlflags="notlistable" version="1.0" category="EXT_convolution" glxflags="client-handcode" glxvendorpriv="1" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="image" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetConvolutionParameterfvEXT" return="void" offset="424" dlflags="notlistable" category="EXT_convolution" version="1.0" glxflags="EXT" glxvendorpriv="2" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameterEXT" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetConvolutionParameterivEXT" return="void" offset="425" dlflags="notlistable" category="EXT_convolution" version="1.0" glxflags="EXT" glxvendorpriv="3" >
				<param name="target" kind="value" type="ConvolutionTargetEXT" input="true" />
				<param name="pname" kind="value" type="ConvolutionParameterEXT" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetSeparableFilterEXT" return="void" offset="426" dlflags="notlistable" version="1.0" category="EXT_convolution" glxflags="client-handcode" glxvendorpriv="4" >
				<param name="target" kind="value" type="SeparableTargetEXT" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="row" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
				<param name="column" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
				<param name="span" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="SeparableFilter2DEXT" return="void" glxropcode="4109" dlflags="handcode" version="1.0" category="EXT_convolution" glxflags="client-handcode" alias="SeparableFilter2D" >
				<param name="target" kind="value" type="SeparableTargetEXT" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="row" kind="array" type="Void" input="true" compute="[COMPSIZE(target/format/type/width)]" />
				<param name="column" kind="array" type="Void" input="true" compute="[COMPSIZE(target/format/type/height)]" />
			</function>
			<function name="ColorTableSGI" return="void" glxropcode="2053" dlflags="handcode" version="1.0" category="SGI_color_table" glxflags="client-handcode" alias="ColorTable" >
				<param name="target" kind="value" type="ColorTableTargetSGI" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="table" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="ColorTableParameterfvSGI" return="void" glxropcode="2054" category="SGI_color_table" glxflags="SGI" version="1.0" alias="ColorTableParameterfv" >
				<param name="target" kind="value" type="ColorTableTargetSGI" input="true" />
				<param name="pname" kind="value" type="ColorTableParameterPNameSGI" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ColorTableParameterivSGI" return="void" glxropcode="2055" category="SGI_color_table" glxflags="SGI" version="1.0" alias="ColorTableParameteriv" >
				<param name="target" kind="value" type="ColorTableTargetSGI" input="true" />
				<param name="pname" kind="value" type="ColorTableParameterPNameSGI" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="CopyColorTableSGI" return="void" glxropcode="2056" category="SGI_color_table" glxflags="SGI" version="1.0" alias="CopyColorTable" >
				<param name="target" kind="value" type="ColorTableTargetSGI" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetColorTableSGI" return="void" offset="427" dlflags="notlistable" version="1.0" category="SGI_color_table" glxflags="client-handcode" glxvendorpriv="4098" >
				<param name="target" kind="value" type="ColorTableTargetSGI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="table" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetColorTableParameterfvSGI" return="void" offset="428" dlflags="notlistable" category="SGI_color_table" version="1.0" glxflags="SGI" glxvendorpriv="4099" >
				<param name="target" kind="value" type="ColorTableTargetSGI" input="true" />
				<param name="pname" kind="value" type="GetColorTableParameterPNameSGI" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetColorTableParameterivSGI" return="void" offset="429" dlflags="notlistable" category="SGI_color_table" version="1.0" glxflags="SGI" glxvendorpriv="4100" >
				<param name="target" kind="value" type="ColorTableTargetSGI" input="true" />
				<param name="pname" kind="value" type="GetColorTableParameterPNameSGI" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PixelTexGenSGIX" return="void" offset="430" glxropcode="2059" category="SGIX_pixel_texture" version="1.0" glxflags="SGI" >
				<param name="mode" kind="value" type="PixelTexGenModeSGIX" input="true" />
			</function>
			<function name="PixelTexGenParameteriSGIS" return="void" offset="431" glxropcode="?" category="SGIS_pixel_texture" version="1.0" glxflags="ignore" >
				<param name="pname" kind="value" type="PixelTexGenParameterNameSGIS" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="PixelTexGenParameterivSGIS" return="void" offset="432" glxropcode="?" category="SGIS_pixel_texture" version="1.0" glxflags="ignore" >
				<param name="pname" kind="value" type="PixelTexGenParameterNameSGIS" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PixelTexGenParameterfSGIS" return="void" offset="433" glxropcode="?" category="SGIS_pixel_texture" version="1.0" glxflags="ignore" >
				<param name="pname" kind="value" type="PixelTexGenParameterNameSGIS" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PixelTexGenParameterfvSGIS" return="void" offset="434" glxropcode="?" category="SGIS_pixel_texture" version="1.0" glxflags="ignore" >
				<param name="pname" kind="value" type="PixelTexGenParameterNameSGIS" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetPixelTexGenParameterivSGIS" return="void" offset="435" dlflags="notlistable" category="SGIS_pixel_texture" version="1.0" glxflags="ignore" glxvendorpriv="?" >
				<param name="pname" kind="value" type="PixelTexGenParameterNameSGIS" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetPixelTexGenParameterfvSGIS" return="void" offset="436" dlflags="notlistable" category="SGIS_pixel_texture" version="1.0" glxflags="ignore" glxvendorpriv="?" >
				<param name="pname" kind="value" type="PixelTexGenParameterNameSGIS" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexImage4DSGIS" return="void" offset="437" glxropcode="2057" version="1.0" category="SGIS_texture4D" dlflags="handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="size4d" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth/size4d)]" />
			</function>
			<function name="TexSubImage4DSGIS" return="void" offset="438" glxropcode="2058" version="1.0" category="SGIS_texture4D" dlflags="handcode" glxflags="client-handcode" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="woffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="size4d" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth/size4d)]" />
			</function>
			<function name="AreTexturesResidentEXT" return="Boolean" offset="439" glxflags="EXT" version="1.0" category="EXT_texture_object" dlflags="notlistable" glxvendorpriv="11" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="textures" kind="array" type="Texture" input="true" compute="[n]" />
				<param name="residences" kind="array" type="Boolean" input="false" compute="[n]" />
			</function>
			<function name="BindTextureEXT" return="void" glxropcode="4117" category="EXT_texture_object" glxflags="EXT" version="1.0" alias="BindTexture" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
			</function>
			<function name="DeleteTexturesEXT" return="void" offset="561" dlflags="notlistable" category="EXT_texture_object" version="1.0" glxflags="EXT" glxvendorpriv="12" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="textures" kind="array" type="Texture" input="true" compute="[n]" />
			</function>
			<function name="GenTexturesEXT" return="void" offset="440" dlflags="notlistable" category="EXT_texture_object" version="1.0" glxflags="EXT" glxvendorpriv="13" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="textures" kind="array" type="Texture" input="false" compute="[n]" />
			</function>
			<function name="IsTextureEXT" return="Boolean" offset="441" dlflags="notlistable" category="EXT_texture_object" version="1.0" glxflags="EXT" glxvendorpriv="14" >
				<param name="texture" kind="value" type="Texture" input="true" />
			</function>
			<function name="PrioritizeTexturesEXT" return="void" glxropcode="4118" category="EXT_texture_object" glxflags="EXT" version="1.0" alias="PrioritizeTextures" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="textures" kind="array" type="Texture" input="true" compute="[n]" />
				<param name="priorities" kind="array" type="ClampedFloat32" input="true" compute="[n]" />
			</function>
			<function name="DetailTexFuncSGIS" return="void" offset="442" glxropcode="2051" category="SGIS_detail_texture" version="1.0" glxflags="SGI" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="points" kind="array" type="Float32" input="true" compute="[n*2]" />
			</function>
			<function name="GetDetailTexFuncSGIS" return="void" offset="443" dlflags="notlistable" category="SGIS_detail_texture" version="1.0" glxflags="SGI" glxvendorpriv="4096" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="points" kind="array" type="Float32" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="SharpenTexFuncSGIS" return="void" offset="444" glxropcode="2052" category="SGIS_sharpen_texture" version="1.0" glxflags="SGI" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="points" kind="array" type="Float32" input="true" compute="[n*2]" />
			</function>
			<function name="GetSharpenTexFuncSGIS" return="void" offset="445" dlflags="notlistable" category="SGIS_sharpen_texture" version="1.0" glxflags="SGI" glxvendorpriv="4097" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="points" kind="array" type="Float32" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="SampleMaskSGIS" return="void" glxropcode="2048" category="SGIS_multisample" glxflags="SGI" version="1.1" alias="SampleMaskEXT" >
				<param name="value" kind="value" type="ClampedFloat32" input="true" />
				<param name="invert" kind="value" type="Boolean" input="true" />
			</function>
			<function name="SamplePatternSGIS" return="void" glxropcode="2049" category="SGIS_multisample" glxflags="SGI" version="1.0" alias="SamplePatternEXT" >
				<param name="pattern" kind="value" type="SamplePatternSGIS" input="true" />
			</function>
			<function name="ArrayElementEXT" return="void" dlflags="handcode" version="1.0" category="EXT_vertex_array" glxflags="client-handcode" alias="ArrayElement" >
				<param name="i" kind="value" type="Int32" input="true" />
			</function>
			<function name="ColorPointerEXT" return="void" offset="448" version="1.0" category="EXT_vertex_array" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="ColorPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride/count)] retained" />
			</function>
			<function name="DrawArraysEXT" return="void" glxropcode="4116" dlflags="handcode" version="1.0" category="EXT_vertex_array" glxflags="client-handcode" alias="DrawArrays" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
			</function>
			<function name="EdgeFlagPointerEXT" return="void" offset="449" version="1.0" category="EXT_vertex_array" dlflags="notlistable" glxflags="client-handcode" >
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Boolean" input="true" compute="[COMPSIZE(stride/count)] retained" />
			</function>
			<function name="GetPointervEXT" return="void" dlflags="notlistable" version="1.0" category="EXT_vertex_array" glxflags="client-handcode" alias="GetPointerv" >
				<param name="pname" kind="value" type="GetPointervPName" input="true" />
				<param name="params" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="IndexPointerEXT" return="void" offset="450" version="1.0" category="EXT_vertex_array" dlflags="notlistable" glxflags="client-handcode" >
				<param name="type" kind="value" type="IndexPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride/count)] retained" />
			</function>
			<function name="NormalPointerEXT" return="void" offset="451" version="1.0" category="EXT_vertex_array" dlflags="notlistable" glxflags="client-handcode" >
				<param name="type" kind="value" type="NormalPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride/count)] retained" />
			</function>
			<function name="TexCoordPointerEXT" return="void" offset="452" version="1.0" category="EXT_vertex_array" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="TexCoordPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride/count)] retained" />
			</function>
			<function name="VertexPointerEXT" return="void" offset="453" version="1.0" category="EXT_vertex_array" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride/count)] retained" />
			</function>
			<function name="BlendEquationEXT" return="void" extension="soft" glxropcode="4097" category="EXT_blend_minmax" glxflags="EXT" version="1.0" alias="BlendEquation" >
				<param name="mode" kind="value" type="BlendEquationModeEXT" input="true" />
			</function>
			<function name="SpriteParameterfSGIX" return="void" offset="454" glxropcode="2060" category="SGIX_sprite" version="1.0" glxflags="SGI" >
				<param name="pname" kind="value" type="SpriteParameterNameSGIX" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="SpriteParameterfvSGIX" return="void" offset="455" glxropcode="2061" category="SGIX_sprite" version="1.0" glxflags="SGI" >
				<param name="pname" kind="value" type="SpriteParameterNameSGIX" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="SpriteParameteriSGIX" return="void" offset="456" glxropcode="2062" category="SGIX_sprite" version="1.0" glxflags="SGI" >
				<param name="pname" kind="value" type="SpriteParameterNameSGIX" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="SpriteParameterivSGIX" return="void" offset="457" glxropcode="2063" category="SGIX_sprite" version="1.0" glxflags="SGI" >
				<param name="pname" kind="value" type="SpriteParameterNameSGIX" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PointParameterfEXT" return="void" glxflags="SGI" category="EXT_point_parameters" version="1.0" alias="PointParameterfARB" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PointParameterfvEXT" return="void" glxflags="SGI" category="EXT_point_parameters" version="1.0" alias="PointParameterfvARB" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PointParameterfSGIS" return="void" glxflags="SGI" category="SGIS_point_parameters" version="1.0" alias="PointParameterfARB" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="PointParameterfvSGIS" return="void" glxflags="SGI" category="SGIS_point_parameters" version="1.0" alias="PointParameterfvARB" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetInstrumentsSGIX" return="Int32" offset="460" version="1.0" category="SGIX_instruments" dlflags="notlistable" glxflags="SGI" glxvendorpriv="4102" />
			<function name="InstrumentsBufferSGIX" return="void" offset="461" dlflags="notlistable" category="SGIX_instruments" version="1.0" glxflags="SGI" glxvendorpriv="4103" >
				<param name="size" kind="value" type="SizeI" input="true" />
				<param name="buffer" kind="array" type="Int32" input="false" compute="[size] retained" />
			</function>
			<function name="PollInstrumentsSGIX" return="Int32" offset="462" dlflags="notlistable" category="SGIX_instruments" version="1.0" glxflags="SGI" glxvendorpriv="4104" >
				<param name="marker_p" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="ReadInstrumentsSGIX" return="void" offset="463" glxropcode="2077" category="SGIX_instruments" version="1.0" glxflags="SGI" >
				<param name="marker" kind="value" type="Int32" input="true" />
			</function>
			<function name="StartInstrumentsSGIX" return="void" offset="464" category="SGIX_instruments" glxropcode="2069" version="1.0" glxflags="SGI" />
			<function name="StopInstrumentsSGIX" return="void" offset="465" glxropcode="2070" category="SGIX_instruments" version="1.0" glxflags="SGI" >
				<param name="marker" kind="value" type="Int32" input="true" />
			</function>
			<function name="FrameZoomSGIX" return="void" offset="466" glxropcode="2072" category="SGIX_framezoom" version="1.0" glxflags="SGI" >
				<param name="factor" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="TagSampleBufferSGIX" return="void" offset="467" category="SGIX_tag_sample_buffer" glxropcode="2050" version="1.0" glxflags="SGI" />
			<function name="DeformationMap3dSGIX" return="void" offset="?" glxropcode="2073" category="SGIX_polynomial_ffd" dlflags="handcode" version="1.0" glxflags="SGI" >
				<param name="target" kind="value" type="FfdTargetSGIX" input="true" />
				<param name="u1" kind="value" type="CoordD" input="true" />
				<param name="u2" kind="value" type="CoordD" input="true" />
				<param name="ustride" kind="value" type="Int32" input="true" />
				<param name="uorder" kind="value" type="CheckedInt32" input="true" />
				<param name="v1" kind="value" type="CoordD" input="true" />
				<param name="v2" kind="value" type="CoordD" input="true" />
				<param name="vstride" kind="value" type="Int32" input="true" />
				<param name="vorder" kind="value" type="CheckedInt32" input="true" />
				<param name="w1" kind="value" type="CoordD" input="true" />
				<param name="w2" kind="value" type="CoordD" input="true" />
				<param name="wstride" kind="value" type="Int32" input="true" />
				<param name="worder" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordD" input="true" compute="[COMPSIZE(target/ustride/uorder/vstride/vorder/wstride/worder)]" />
			</function>
			<function name="DeformationMap3fSGIX" return="void" offset="?" glxropcode="2074" category="SGIX_polynomial_ffd" dlflags="handcode" version="1.0" glxflags="SGI" >
				<param name="target" kind="value" type="FfdTargetSGIX" input="true" />
				<param name="u1" kind="value" type="CoordF" input="true" />
				<param name="u2" kind="value" type="CoordF" input="true" />
				<param name="ustride" kind="value" type="Int32" input="true" />
				<param name="uorder" kind="value" type="CheckedInt32" input="true" />
				<param name="v1" kind="value" type="CoordF" input="true" />
				<param name="v2" kind="value" type="CoordF" input="true" />
				<param name="vstride" kind="value" type="Int32" input="true" />
				<param name="vorder" kind="value" type="CheckedInt32" input="true" />
				<param name="w1" kind="value" type="CoordF" input="true" />
				<param name="w2" kind="value" type="CoordF" input="true" />
				<param name="wstride" kind="value" type="Int32" input="true" />
				<param name="worder" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordF" input="true" compute="[COMPSIZE(target/ustride/uorder/vstride/vorder/wstride/worder)]" />
			</function>
			<function name="DeformSGIX" return="void" offset="?" glxropcode="2075" category="SGIX_polynomial_ffd" version="1.0" glxflags="SGI" >
				<param name="mask" kind="value" type="FfdMaskSGIX" input="true" />
			</function>
			<function name="LoadIdentityDeformationMapSGIX" return="void" offset="?" glxropcode="2076" category="SGIX_polynomial_ffd" version="1.0" glxflags="SGI" >
				<param name="mask" kind="value" type="FfdMaskSGIX" input="true" />
			</function>
			<function name="ReferencePlaneSGIX" return="void" offset="468" glxropcode="2071" category="SGIX_reference_plane" version="1.0" glxflags="SGI" >
				<param name="equation" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="FlushRasterSGIX" return="void" offset="469" version="1.0" category="SGIX_flush_raster" dlflags="notlistable" glxflags="SGI" glxvendorpriv="4105" />
			<function name="FogFuncSGIS" return="void" version="1.1" glxropcode="2067" category="SGIS_fog_function" glxflags="SGI" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="points" kind="array" type="Float32" input="true" compute="[n*2]" />
			</function>
			<function name="GetFogFuncSGIS" return="void" dlflags="notlistable" category="SGIS_fog_function" version="1.1" glxflags="ignore" >
				<param name="points" kind="array" type="Float32" input="false" compute="[COMPSIZE()]" />
			</function>
			<function name="ImageTransformParameteriHP" return="void" offset="?" version="1.1" glxropcode="?" category="HP_image_transform" >
				<param name="target" kind="value" type="ImageTransformTargetHP" input="true" />
				<param name="pname" kind="value" type="ImageTransformPNameHP" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="ImageTransformParameterfHP" return="void" offset="?" version="1.1" glxropcode="?" category="HP_image_transform" >
				<param name="target" kind="value" type="ImageTransformTargetHP" input="true" />
				<param name="pname" kind="value" type="ImageTransformPNameHP" input="true" />
				<param name="param" kind="value" type="Float32" input="true" />
			</function>
			<function name="ImageTransformParameterivHP" return="void" offset="?" version="1.1" glxropcode="?" category="HP_image_transform" >
				<param name="target" kind="value" type="ImageTransformTargetHP" input="true" />
				<param name="pname" kind="value" type="ImageTransformPNameHP" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ImageTransformParameterfvHP" return="void" offset="?" version="1.1" glxropcode="?" category="HP_image_transform" >
				<param name="target" kind="value" type="ImageTransformTargetHP" input="true" />
				<param name="pname" kind="value" type="ImageTransformPNameHP" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetImageTransformParameterivHP" return="void" offset="?" glxropcode="?" category="HP_image_transform" version="1.1" dlflags="notlistable" >
				<param name="target" kind="value" type="ImageTransformTargetHP" input="true" />
				<param name="pname" kind="value" type="ImageTransformPNameHP" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetImageTransformParameterfvHP" return="void" offset="?" version="1.1" glxropcode="?" category="HP_image_transform" >
				<param name="target" kind="value" type="ImageTransformTargetHP" input="true" />
				<param name="pname" kind="value" type="ImageTransformPNameHP" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ColorSubTableEXT" return="void" version="1.2" category="EXT_color_subtable" alias="ColorSubTable" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="start" kind="value" type="SizeI" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="data" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/count)]" />
			</function>
			<function name="CopyColorSubTableEXT" return="void" version="1.2" category="EXT_color_subtable" alias="CopyColorSubTable" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="start" kind="value" type="SizeI" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="HintPGI" return="void" offset="544" version="1.1" category="PGI_misc_hints" >
				<param name="target" kind="value" type="HintTargetPGI" input="true" />
				<param name="mode" kind="value" type="Int32" input="true" />
			</function>
			<function name="ColorTableEXT" return="void" version="1.1" category="EXT_paletted_texture" alias="ColorTable" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="internalFormat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="table" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="GetColorTableEXT" return="void" offset="550" version="1.1" category="EXT_paletted_texture" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="data" kind="array" type="Void" input="false" compute="[COMPSIZE(target/format/type)]" />
			</function>
			<function name="GetColorTableParameterivEXT" return="void" offset="551" version="1.1" category="EXT_paletted_texture" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="pname" kind="value" type="GetColorTableParameterPName" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetColorTableParameterfvEXT" return="void" offset="552" version="1.1" category="EXT_paletted_texture" >
				<param name="target" kind="value" type="ColorTableTarget" input="true" />
				<param name="pname" kind="value" type="GetColorTableParameterPName" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetListParameterfvSGIX" return="void" offset="470" dlflags="notlistable" version="1.0" category="SGIX_list_priority" glxflags="ignore" glxvendorpriv="?" >
				<param name="list" kind="value" type="List" input="true" />
				<param name="pname" kind="value" type="ListParameterName" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetListParameterivSGIX" return="void" offset="471" dlflags="notlistable" version="1.0" category="SGIX_list_priority" glxflags="ignore" glxvendorpriv="?" >
				<param name="list" kind="value" type="List" input="true" />
				<param name="pname" kind="value" type="ListParameterName" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ListParameterfSGIX" return="void" offset="472" glxropcode="2078" version="1.0" category="SGIX_list_priority" dlflags="notlistable" glxflags="ignore" >
				<param name="list" kind="value" type="List" input="true" />
				<param name="pname" kind="value" type="ListParameterName" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="ListParameterfvSGIX" return="void" offset="473" glxropcode="2079" version="1.0" category="SGIX_list_priority" dlflags="notlistable" glxflags="ignore" >
				<param name="list" kind="value" type="List" input="true" />
				<param name="pname" kind="value" type="ListParameterName" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ListParameteriSGIX" return="void" offset="474" glxropcode="2080" version="1.0" category="SGIX_list_priority" dlflags="notlistable" glxflags="ignore" >
				<param name="list" kind="value" type="List" input="true" />
				<param name="pname" kind="value" type="ListParameterName" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="ListParameterivSGIX" return="void" offset="475" glxropcode="2081" version="1.0" category="SGIX_list_priority" dlflags="notlistable" glxflags="ignore" >
				<param name="list" kind="value" type="List" input="true" />
				<param name="pname" kind="value" type="ListParameterName" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="IndexMaterialEXT" return="void" offset="538" extension="soft" version="1.1" category="EXT_index_material" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="mode" kind="value" type="IndexMaterialParameterEXT" input="true" />
			</function>
			<function name="IndexFuncEXT" return="void" offset="539" extension="soft" version="1.1" category="EXT_index_func" glxflags="ignore" >
				<param name="func" kind="value" type="IndexFunctionEXT" input="true" />
				<param name="ref" kind="value" type="ClampedFloat32" input="true" />
			</function>
			<function name="LockArraysEXT" return="void" offset="540" extension="soft" version="1.1" category="EXT_compiled_vertex_array" dlflags="notlistable" glxflags="ignore" >
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
			</function>
			<function name="UnlockArraysEXT" return="void" offset="541" extension="soft" version="1.1" category="EXT_compiled_vertex_array" dlflags="notlistable" glxflags="ignore" />
			<function name="CullParameterdvEXT" return="void" offset="542" extension="soft" version="1.1" category="EXT_cull_vertex" dlflags="notlistable" glxflags="ignore" >
				<param name="pname" kind="value" type="CullParameterEXT" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="CullParameterfvEXT" return="void" offset="543" extension="soft" version="1.1" category="EXT_cull_vertex" dlflags="notlistable" glxflags="ignore" >
				<param name="pname" kind="value" type="CullParameterEXT" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="FragmentColorMaterialSGIX" return="void" offset="476" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="mode" kind="value" type="MaterialParameter" input="true" />
			</function>
			<function name="FragmentLightfSGIX" return="void" offset="477" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="light" kind="value" type="FragmentLightNameSGIX" input="true" />
				<param name="pname" kind="value" type="FragmentLightParameterSGIX" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="FragmentLightfvSGIX" return="void" offset="478" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="light" kind="value" type="FragmentLightNameSGIX" input="true" />
				<param name="pname" kind="value" type="FragmentLightParameterSGIX" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FragmentLightiSGIX" return="void" offset="479" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="light" kind="value" type="FragmentLightNameSGIX" input="true" />
				<param name="pname" kind="value" type="FragmentLightParameterSGIX" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="FragmentLightivSGIX" return="void" offset="480" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="light" kind="value" type="FragmentLightNameSGIX" input="true" />
				<param name="pname" kind="value" type="FragmentLightParameterSGIX" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FragmentLightModelfSGIX" return="void" offset="481" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="pname" kind="value" type="FragmentLightModelParameterSGIX" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="FragmentLightModelfvSGIX" return="void" offset="482" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="pname" kind="value" type="FragmentLightModelParameterSGIX" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FragmentLightModeliSGIX" return="void" offset="483" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="pname" kind="value" type="FragmentLightModelParameterSGIX" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="FragmentLightModelivSGIX" return="void" offset="484" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="pname" kind="value" type="FragmentLightModelParameterSGIX" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FragmentMaterialfSGIX" return="void" offset="485" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="FragmentMaterialfvSGIX" return="void" offset="486" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FragmentMaterialiSGIX" return="void" offset="487" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="FragmentMaterialivSGIX" return="void" offset="488" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetFragmentLightfvSGIX" return="void" offset="489" version="1.0" category="SGIX_fragment_lighting" dlflags="notlistable" glxflags="ignore" >
				<param name="light" kind="value" type="FragmentLightNameSGIX" input="true" />
				<param name="pname" kind="value" type="FragmentLightParameterSGIX" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetFragmentLightivSGIX" return="void" offset="490" version="1.0" category="SGIX_fragment_lighting" dlflags="notlistable" glxflags="ignore" >
				<param name="light" kind="value" type="FragmentLightNameSGIX" input="true" />
				<param name="pname" kind="value" type="FragmentLightParameterSGIX" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetFragmentMaterialfvSGIX" return="void" offset="491" version="1.0" category="SGIX_fragment_lighting" dlflags="notlistable" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetFragmentMaterialivSGIX" return="void" offset="492" version="1.0" category="SGIX_fragment_lighting" dlflags="notlistable" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="pname" kind="value" type="MaterialParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="LightEnviSGIX" return="void" offset="493" version="1.0" category="SGIX_fragment_lighting" glxflags="ignore" >
				<param name="pname" kind="value" type="LightEnvParameterSGIX" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="DrawRangeElementsEXT" return="void" dlflags="handcode" version="1.1" category="EXT_draw_range_elements" glxflags="client-handcode" alias="DrawRangeElements" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="start" kind="value" type="UInt32" input="true" />
				<param name="end" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
			</function>
			<function name="ApplyTextureEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_light_texture" >
				<param name="mode" kind="value" type="LightTextureModeEXT" input="true" />
			</function>
			<function name="TextureLightEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_light_texture" >
				<param name="pname" kind="value" type="LightTexturePNameEXT" input="true" />
			</function>
			<function name="TextureMaterialEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_light_texture" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="mode" kind="value" type="MaterialParameter" input="true" />
			</function>
			<function name="AsyncMarkerSGIX" return="void" offset="?" version="1.0" category="SGIX_async" glxflags="ignore" >
				<param name="marker" kind="value" type="UInt32" input="true" />
			</function>
			<function name="FinishAsyncSGIX" return="Int32" offset="?" version="1.0" category="SGIX_async" dlflags="notlistable" glxflags="ignore" >
				<param name="markerp" kind="array" type="UInt32" input="false" compute="[1]" />
			</function>
			<function name="PollAsyncSGIX" return="Int32" offset="?" version="1.0" category="SGIX_async" dlflags="notlistable" glxflags="ignore" >
				<param name="markerp" kind="array" type="UInt32" input="false" compute="[1]" />
			</function>
			<function name="GenAsyncMarkersSGIX" return="UInt32" offset="?" version="1.0" category="SGIX_async" dlflags="notlistable" glxflags="ignore" >
				<param name="range" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DeleteAsyncMarkersSGIX" return="void" offset="?" version="1.0" category="SGIX_async" dlflags="notlistable" glxflags="ignore" >
				<param name="marker" kind="value" type="UInt32" input="true" />
				<param name="range" kind="value" type="SizeI" input="true" />
			</function>
			<function name="IsAsyncMarkerSGIX" return="Boolean" offset="?" version="1.0" category="SGIX_async" dlflags="notlistable" glxflags="ignore" >
				<param name="marker" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexPointervINTEL" return="void" offset="?" version="1.1" category="INTEL_parallel_arrays" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexPointerType" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[4] retained" />
			</function>
			<function name="NormalPointervINTEL" return="void" offset="?" version="1.1" category="INTEL_parallel_arrays" dlflags="notlistable" glxflags="client-handcode" >
				<param name="type" kind="value" type="NormalPointerType" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[4] retained" />
			</function>
			<function name="ColorPointervINTEL" return="void" offset="?" version="1.1" category="INTEL_parallel_arrays" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexPointerType" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[4] retained" />
			</function>
			<function name="TexCoordPointervINTEL" return="void" offset="?" version="1.1" category="INTEL_parallel_arrays" dlflags="notlistable" glxflags="client-handcode" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexPointerType" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[4] retained" />
			</function>
			<function name="PixelTransformParameteriEXT" return="void" offset="?" version="1.1" glxropcode="16386" category="EXT_pixel_transform" >
				<param name="target" kind="value" type="PixelTransformTargetEXT" input="true" />
				<param name="pname" kind="value" type="PixelTransformPNameEXT" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="PixelTransformParameterfEXT" return="void" offset="?" version="1.1" glxropcode="16385" category="EXT_pixel_transform" >
				<param name="target" kind="value" type="PixelTransformTargetEXT" input="true" />
				<param name="pname" kind="value" type="PixelTransformPNameEXT" input="true" />
				<param name="param" kind="value" type="Float32" input="true" />
			</function>
			<function name="PixelTransformParameterivEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_pixel_transform" >
				<param name="target" kind="value" type="PixelTransformTargetEXT" input="true" />
				<param name="pname" kind="value" type="PixelTransformPNameEXT" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[1]" />
			</function>
			<function name="PixelTransformParameterfvEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_pixel_transform" >
				<param name="target" kind="value" type="PixelTransformTargetEXT" input="true" />
				<param name="pname" kind="value" type="PixelTransformPNameEXT" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[1]" />
			</function>
			<function name="GetPixelTransformParameterivEXT" return="void" offset="?" dlflags="notlistable" category="EXT_pixel_transform" version="1.1" glxflags="ignore" glxvendorpriv="2052" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetPixelTransformParameterfvEXT" return="void" offset="?" dlflags="notlistable" category="EXT_pixel_transform" version="1.1" glxflags="ignore" glxvendorpriv="2051" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="SecondaryColor3bEXT" return="void" vectorequiv="SecondaryColor3bvEXT" version="1.1" category="EXT_secondary_color" alias="SecondaryColor3b" >
				<param name="red" kind="value" type="ColorB" input="true" />
				<param name="green" kind="value" type="ColorB" input="true" />
				<param name="blue" kind="value" type="ColorB" input="true" />
			</function>
			<function name="SecondaryColor3bvEXT" return="void" version="1.1" glxropcode="4126" category="EXT_secondary_color" alias="SecondaryColor3bv" >
				<param name="v" kind="array" type="ColorB" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3dEXT" return="void" vectorequiv="SecondaryColor3dvEXT" version="1.1" category="EXT_secondary_color" alias="SecondaryColor3d" >
				<param name="red" kind="value" type="ColorD" input="true" />
				<param name="green" kind="value" type="ColorD" input="true" />
				<param name="blue" kind="value" type="ColorD" input="true" />
			</function>
			<function name="SecondaryColor3dvEXT" return="void" version="1.1" glxropcode="4130" category="EXT_secondary_color" alias="SecondaryColor3dv" >
				<param name="v" kind="array" type="ColorD" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3fEXT" return="void" vectorequiv="SecondaryColor3fvEXT" version="1.1" category="EXT_secondary_color" alias="SecondaryColor3f" >
				<param name="red" kind="value" type="ColorF" input="true" />
				<param name="green" kind="value" type="ColorF" input="true" />
				<param name="blue" kind="value" type="ColorF" input="true" />
			</function>
			<function name="SecondaryColor3fvEXT" return="void" version="1.1" glxropcode="4129" category="EXT_secondary_color" alias="SecondaryColor3fv" >
				<param name="v" kind="array" type="ColorF" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3iEXT" return="void" vectorequiv="SecondaryColor3ivEXT" version="1.1" category="EXT_secondary_color" alias="SecondaryColor3i" >
				<param name="red" kind="value" type="ColorI" input="true" />
				<param name="green" kind="value" type="ColorI" input="true" />
				<param name="blue" kind="value" type="ColorI" input="true" />
			</function>
			<function name="SecondaryColor3ivEXT" return="void" offset="568" glxropcode="4128" category="EXT_secondary_color" version="1.1" alias="SecondaryColor3iv" >
				<param name="v" kind="array" type="ColorI" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3sEXT" return="void" vectorequiv="SecondaryColor3svEXT" version="1.1" category="EXT_secondary_color" alias="SecondaryColor3s" >
				<param name="red" kind="value" type="ColorS" input="true" />
				<param name="green" kind="value" type="ColorS" input="true" />
				<param name="blue" kind="value" type="ColorS" input="true" />
			</function>
			<function name="SecondaryColor3svEXT" return="void" version="1.1" glxropcode="4127" category="EXT_secondary_color" alias="SecondaryColor3sv" >
				<param name="v" kind="array" type="ColorS" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3ubEXT" return="void" vectorequiv="SecondaryColor3ubvEXT" version="1.1" category="EXT_secondary_color" alias="SecondaryColor3ub" >
				<param name="red" kind="value" type="ColorUB" input="true" />
				<param name="green" kind="value" type="ColorUB" input="true" />
				<param name="blue" kind="value" type="ColorUB" input="true" />
			</function>
			<function name="SecondaryColor3ubvEXT" return="void" version="1.1" glxropcode="4131" category="EXT_secondary_color" alias="SecondaryColor3ubv" >
				<param name="v" kind="array" type="ColorUB" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3uiEXT" return="void" vectorequiv="SecondaryColor3uivEXT" version="1.1" category="EXT_secondary_color" alias="SecondaryColor3ui" >
				<param name="red" kind="value" type="ColorUI" input="true" />
				<param name="green" kind="value" type="ColorUI" input="true" />
				<param name="blue" kind="value" type="ColorUI" input="true" />
			</function>
			<function name="SecondaryColor3uivEXT" return="void" version="1.1" glxropcode="4133" category="EXT_secondary_color" alias="SecondaryColor3uiv" >
				<param name="v" kind="array" type="ColorUI" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColor3usEXT" return="void" vectorequiv="SecondaryColor3usvEXT" version="1.1" category="EXT_secondary_color" alias="SecondaryColor3us" >
				<param name="red" kind="value" type="ColorUS" input="true" />
				<param name="green" kind="value" type="ColorUS" input="true" />
				<param name="blue" kind="value" type="ColorUS" input="true" />
			</function>
			<function name="SecondaryColor3usvEXT" return="void" version="1.1" glxropcode="4132" category="EXT_secondary_color" alias="SecondaryColor3usv" >
				<param name="v" kind="array" type="ColorUS" input="true" compute="[3]" />
			</function>
			<function name="SecondaryColorPointerEXT" return="void" dlflags="notlistable" version="1.1" category="EXT_secondary_color" glxflags="client-handcode" alias="SecondaryColorPointer" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="ColorPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="TextureNormalEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_texture_perturb_normal" >
				<param name="mode" kind="value" type="TextureNormalModeEXT" input="true" />
			</function>
			<function name="MultiDrawArraysEXT" return="void" version="1.1" glxropcode="?" category="EXT_multi_draw_arrays" alias="MultiDrawArrays" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="array" type="Int32" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="MultiDrawElementsEXT" return="void" version="1.1" glxropcode="?" category="EXT_multi_draw_arrays" alias="MultiDrawElements" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="FogCoordfEXT" return="void" vectorequiv="FogCoordfvEXT" version="1.1" category="EXT_fog_coord" alias="FogCoordf" >
				<param name="coord" kind="value" type="CoordF" input="true" />
			</function>
			<function name="FogCoordfvEXT" return="void" version="1.1" glxropcode="4124" category="EXT_fog_coord" alias="FogCoordfv" >
				<param name="coord" kind="array" type="CoordF" input="true" compute="[1]" />
			</function>
			<function name="FogCoorddEXT" return="void" vectorequiv="FogCoorddvEXT" version="1.1" category="EXT_fog_coord" alias="FogCoordd" >
				<param name="coord" kind="value" type="CoordD" input="true" />
			</function>
			<function name="FogCoorddvEXT" return="void" version="1.1" glxropcode="4125" category="EXT_fog_coord" alias="FogCoorddv" >
				<param name="coord" kind="array" type="CoordD" input="true" compute="[1]" />
			</function>
			<function name="FogCoordPointerEXT" return="void" dlflags="notlistable" category="EXT_fog_coord" glxflags="client-handcode" version="1.1" alias="FogCoordPointer" >
				<param name="type" kind="value" type="FogPointerTypeEXT" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="Tangent3bEXT" return="void" offset="?" vectorequiv="Tangent3bvEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="tx" kind="value" type="Int8" input="true" />
				<param name="ty" kind="value" type="Int8" input="true" />
				<param name="tz" kind="value" type="Int8" input="true" />
			</function>
			<function name="Tangent3bvEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="Int8" input="true" compute="[3]" />
			</function>
			<function name="Tangent3dEXT" return="void" offset="?" vectorequiv="Tangent3dvEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="tx" kind="value" type="CoordD" input="true" />
				<param name="ty" kind="value" type="CoordD" input="true" />
				<param name="tz" kind="value" type="CoordD" input="true" />
			</function>
			<function name="Tangent3dvEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="Tangent3fEXT" return="void" offset="?" vectorequiv="Tangent3fvEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="tx" kind="value" type="CoordF" input="true" />
				<param name="ty" kind="value" type="CoordF" input="true" />
				<param name="tz" kind="value" type="CoordF" input="true" />
			</function>
			<function name="Tangent3fvEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="Tangent3iEXT" return="void" offset="?" vectorequiv="Tangent3ivEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="tx" kind="value" type="Int32" input="true" />
				<param name="ty" kind="value" type="Int32" input="true" />
				<param name="tz" kind="value" type="Int32" input="true" />
			</function>
			<function name="Tangent3ivEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="Int32" input="true" compute="[3]" />
			</function>
			<function name="Tangent3sEXT" return="void" offset="?" vectorequiv="Tangent3svEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="tx" kind="value" type="Int16" input="true" />
				<param name="ty" kind="value" type="Int16" input="true" />
				<param name="tz" kind="value" type="Int16" input="true" />
			</function>
			<function name="Tangent3svEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="Int16" input="true" compute="[3]" />
			</function>
			<function name="Binormal3bEXT" return="void" offset="?" vectorequiv="Binormal3bvEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="bx" kind="value" type="Int8" input="true" />
				<param name="by" kind="value" type="Int8" input="true" />
				<param name="bz" kind="value" type="Int8" input="true" />
			</function>
			<function name="Binormal3bvEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="Int8" input="true" compute="[3]" />
			</function>
			<function name="Binormal3dEXT" return="void" offset="?" vectorequiv="Binormal3dvEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="bx" kind="value" type="CoordD" input="true" />
				<param name="by" kind="value" type="CoordD" input="true" />
				<param name="bz" kind="value" type="CoordD" input="true" />
			</function>
			<function name="Binormal3dvEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="Binormal3fEXT" return="void" offset="?" vectorequiv="Binormal3fvEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="bx" kind="value" type="CoordF" input="true" />
				<param name="by" kind="value" type="CoordF" input="true" />
				<param name="bz" kind="value" type="CoordF" input="true" />
			</function>
			<function name="Binormal3fvEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="Binormal3iEXT" return="void" offset="?" vectorequiv="Binormal3ivEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="bx" kind="value" type="Int32" input="true" />
				<param name="by" kind="value" type="Int32" input="true" />
				<param name="bz" kind="value" type="Int32" input="true" />
			</function>
			<function name="Binormal3ivEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="Int32" input="true" compute="[3]" />
			</function>
			<function name="Binormal3sEXT" return="void" offset="?" vectorequiv="Binormal3svEXT" version="1.1" category="EXT_coordinate_frame" >
				<param name="bx" kind="value" type="Int16" input="true" />
				<param name="by" kind="value" type="Int16" input="true" />
				<param name="bz" kind="value" type="Int16" input="true" />
			</function>
			<function name="Binormal3svEXT" return="void" offset="?" version="1.1" glxropcode="?" category="EXT_coordinate_frame" >
				<param name="v" kind="array" type="Int16" input="true" compute="[3]" />
			</function>
			<function name="TangentPointerEXT" return="void" offset="?" version="1.1" category="EXT_coordinate_frame" dlflags="notlistable" glxflags="client-handcode" >
				<param name="type" kind="value" type="TangentPointerTypeEXT" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="BinormalPointerEXT" return="void" offset="?" version="1.1" category="EXT_coordinate_frame" dlflags="notlistable" glxflags="client-handcode" >
				<param name="type" kind="value" type="BinormalPointerTypeEXT" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="FinishTextureSUNX" return="void" offset="?" glxropcode="?" version="1.1" category="SUNX_constant_data" />
			<function name="GlobalAlphaFactorbSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_global_alpha" >
				<param name="factor" kind="value" type="Int8" input="true" />
			</function>
			<function name="GlobalAlphaFactorsSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_global_alpha" >
				<param name="factor" kind="value" type="Int16" input="true" />
			</function>
			<function name="GlobalAlphaFactoriSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_global_alpha" >
				<param name="factor" kind="value" type="Int32" input="true" />
			</function>
			<function name="GlobalAlphaFactorfSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_global_alpha" >
				<param name="factor" kind="value" type="Float32" input="true" />
			</function>
			<function name="GlobalAlphaFactordSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_global_alpha" >
				<param name="factor" kind="value" type="Float64" input="true" />
			</function>
			<function name="GlobalAlphaFactorubSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_global_alpha" >
				<param name="factor" kind="value" type="UInt8" input="true" />
			</function>
			<function name="GlobalAlphaFactorusSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_global_alpha" >
				<param name="factor" kind="value" type="UInt16" input="true" />
			</function>
			<function name="GlobalAlphaFactoruiSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_global_alpha" >
				<param name="factor" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ReplacementCodeuiSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_triangle_list" >
				<param name="code" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ReplacementCodeusSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_triangle_list" >
				<param name="code" kind="value" type="UInt16" input="true" />
			</function>
			<function name="ReplacementCodeubSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_triangle_list" >
				<param name="code" kind="value" type="UInt8" input="true" />
			</function>
			<function name="ReplacementCodeuivSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_triangle_list" >
				<param name="code" kind="array" type="UInt32" input="true" compute="[COMPSIZE()]" />
			</function>
			<function name="ReplacementCodeusvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_triangle_list" >
				<param name="code" kind="array" type="UInt16" input="true" compute="[COMPSIZE()]" />
			</function>
			<function name="ReplacementCodeubvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_triangle_list" >
				<param name="code" kind="array" type="UInt8" input="true" compute="[COMPSIZE()]" />
			</function>
			<function name="ReplacementCodePointerSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_triangle_list" >
				<param name="type" kind="value" type="ReplacementCodeTypeSUN" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="Color4ubVertex2fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="r" kind="value" type="UInt8" input="true" />
				<param name="g" kind="value" type="UInt8" input="true" />
				<param name="b" kind="value" type="UInt8" input="true" />
				<param name="a" kind="value" type="UInt8" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
			</function>
			<function name="Color4ubVertex2fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="c" kind="array" type="UInt8" input="true" compute="[4]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[2]" />
			</function>
			<function name="Color4ubVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="r" kind="value" type="UInt8" input="true" />
				<param name="g" kind="value" type="UInt8" input="true" />
				<param name="b" kind="value" type="UInt8" input="true" />
				<param name="a" kind="value" type="UInt8" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="Color4ubVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="c" kind="array" type="UInt8" input="true" compute="[4]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="Color3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="r" kind="value" type="Float32" input="true" />
				<param name="g" kind="value" type="Float32" input="true" />
				<param name="b" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="Color3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="c" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="Normal3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="Normal3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="Color4fNormal3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="r" kind="value" type="Float32" input="true" />
				<param name="g" kind="value" type="Float32" input="true" />
				<param name="b" kind="value" type="Float32" input="true" />
				<param name="a" kind="value" type="Float32" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="Color4fNormal3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="c" kind="array" type="Float32" input="true" compute="[4]" />
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="TexCoord2fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="TexCoord2fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="tc" kind="array" type="Float32" input="true" compute="[2]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="TexCoord4fVertex4fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="p" kind="value" type="Float32" input="true" />
				<param name="q" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="TexCoord4fVertex4fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="tc" kind="array" type="Float32" input="true" compute="[4]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="TexCoord2fColor4ubVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="r" kind="value" type="UInt8" input="true" />
				<param name="g" kind="value" type="UInt8" input="true" />
				<param name="b" kind="value" type="UInt8" input="true" />
				<param name="a" kind="value" type="UInt8" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="TexCoord2fColor4ubVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="tc" kind="array" type="Float32" input="true" compute="[2]" />
				<param name="c" kind="array" type="UInt8" input="true" compute="[4]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="TexCoord2fColor3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="r" kind="value" type="Float32" input="true" />
				<param name="g" kind="value" type="Float32" input="true" />
				<param name="b" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="TexCoord2fColor3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="tc" kind="array" type="Float32" input="true" compute="[2]" />
				<param name="c" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="TexCoord2fNormal3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="TexCoord2fNormal3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="tc" kind="array" type="Float32" input="true" compute="[2]" />
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="TexCoord2fColor4fNormal3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="r" kind="value" type="Float32" input="true" />
				<param name="g" kind="value" type="Float32" input="true" />
				<param name="b" kind="value" type="Float32" input="true" />
				<param name="a" kind="value" type="Float32" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="TexCoord2fColor4fNormal3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="tc" kind="array" type="Float32" input="true" compute="[2]" />
				<param name="c" kind="array" type="Float32" input="true" compute="[4]" />
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="TexCoord4fColor4fNormal3fVertex4fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="p" kind="value" type="Float32" input="true" />
				<param name="q" kind="value" type="Float32" input="true" />
				<param name="r" kind="value" type="Float32" input="true" />
				<param name="g" kind="value" type="Float32" input="true" />
				<param name="b" kind="value" type="Float32" input="true" />
				<param name="a" kind="value" type="Float32" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="TexCoord4fColor4fNormal3fVertex4fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="tc" kind="array" type="Float32" input="true" compute="[4]" />
				<param name="c" kind="array" type="Float32" input="true" compute="[4]" />
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="ReplacementCodeuiVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="value" type="ReplacementCodeSUN" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="ReplacementCodeuiVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="array" type="ReplacementCodeSUN" input="true" compute="[1]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ReplacementCodeuiColor4ubVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="value" type="ReplacementCodeSUN" input="true" />
				<param name="r" kind="value" type="UInt8" input="true" />
				<param name="g" kind="value" type="UInt8" input="true" />
				<param name="b" kind="value" type="UInt8" input="true" />
				<param name="a" kind="value" type="UInt8" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="ReplacementCodeuiColor4ubVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="array" type="ReplacementCodeSUN" input="true" compute="[1]" />
				<param name="c" kind="array" type="UInt8" input="true" compute="[4]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ReplacementCodeuiColor3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="value" type="ReplacementCodeSUN" input="true" />
				<param name="r" kind="value" type="Float32" input="true" />
				<param name="g" kind="value" type="Float32" input="true" />
				<param name="b" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="ReplacementCodeuiColor3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="array" type="ReplacementCodeSUN" input="true" compute="[1]" />
				<param name="c" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ReplacementCodeuiNormal3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="value" type="ReplacementCodeSUN" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="ReplacementCodeuiNormal3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="array" type="ReplacementCodeSUN" input="true" compute="[1]" />
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ReplacementCodeuiColor4fNormal3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="value" type="ReplacementCodeSUN" input="true" />
				<param name="r" kind="value" type="Float32" input="true" />
				<param name="g" kind="value" type="Float32" input="true" />
				<param name="b" kind="value" type="Float32" input="true" />
				<param name="a" kind="value" type="Float32" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="ReplacementCodeuiColor4fNormal3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="array" type="ReplacementCodeSUN" input="true" compute="[1]" />
				<param name="c" kind="array" type="Float32" input="true" compute="[4]" />
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ReplacementCodeuiTexCoord2fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="value" type="ReplacementCodeSUN" input="true" />
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="ReplacementCodeuiTexCoord2fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="array" type="ReplacementCodeSUN" input="true" compute="[1]" />
				<param name="tc" kind="array" type="Float32" input="true" compute="[2]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="value" type="ReplacementCodeSUN" input="true" />
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="array" type="ReplacementCodeSUN" input="true" compute="[1]" />
				<param name="tc" kind="array" type="Float32" input="true" compute="[2]" />
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="value" type="ReplacementCodeSUN" input="true" />
				<param name="s" kind="value" type="Float32" input="true" />
				<param name="t" kind="value" type="Float32" input="true" />
				<param name="r" kind="value" type="Float32" input="true" />
				<param name="g" kind="value" type="Float32" input="true" />
				<param name="b" kind="value" type="Float32" input="true" />
				<param name="a" kind="value" type="Float32" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN" return="void" offset="?" version="1.1" glxropcode="?" category="SUN_vertex" >
				<param name="rc" kind="array" type="ReplacementCodeSUN" input="true" compute="[1]" />
				<param name="tc" kind="array" type="Float32" input="true" compute="[2]" />
				<param name="c" kind="array" type="Float32" input="true" compute="[4]" />
				<param name="n" kind="array" type="Float32" input="true" compute="[3]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="BlendFuncSeparateEXT" return="void" version="1.0" glxropcode="4134" category="EXT_blend_func_separate" alias="BlendFuncSeparate" >
				<param name="sfactorRGB" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="dfactorRGB" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="sfactorAlpha" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="dfactorAlpha" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
			</function>
			<function name="BlendFuncSeparateINGR" return="void" version="1.0" glxropcode="4134" category="INGR_blend_func_separate" alias="BlendFuncSeparateEXT" >
				<param name="sfactorRGB" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="dfactorRGB" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="sfactorAlpha" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
				<param name="dfactorAlpha" kind="value" type="BlendFuncSeparateParameterEXT" input="true" />
			</function>
			<function name="VertexWeightfEXT" return="void" offset="494" vectorequiv="VertexWeightfvEXT" extension="soft" version="1.1" category="EXT_vertex_weighting" glxflags="ignore" >
				<param name="weight" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexWeightfvEXT" return="void" offset="495" extension="soft" glxropcode="4135" category="EXT_vertex_weighting" version="1.1" glxflags="ignore" >
				<param name="weight" kind="array" type="Float32" input="true" compute="[1]" />
			</function>
			<function name="VertexWeightPointerEXT" return="void" offset="496" extension="soft" version="1.1" category="EXT_vertex_weighting" dlflags="notlistable" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexWeightPointerTypeEXT" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type/stride)] retained" />
			</function>
			<function name="FlushVertexArrayRangeNV" return="void" offset="497" extension="soft" version="1.1" category="NV_vertex_array_range" dlflags="notlistable" glxflags="client-handcode" />
			<function name="VertexArrayRangeNV" return="void" offset="498" extension="soft" version="1.1" category="NV_vertex_array_range" dlflags="notlistable" glxflags="client-handcode" >
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(length)] retained" />
			</function>
			<function name="CombinerParameterfvNV" return="void" offset="499" extension="soft" glxropcode="4137" category="NV_register_combiners" version="1.1" glxflags="ignore" >
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="CombinerParameterfNV" return="void" offset="500" extension="soft" glxropcode="4136" category="NV_register_combiners" version="1.1" glxflags="ignore" >
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="param" kind="value" type="Float32" input="true" />
			</function>
			<function name="CombinerParameterivNV" return="void" offset="501" extension="soft" glxropcode="4139" category="NV_register_combiners" version="1.1" glxflags="ignore" >
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="CombinerParameteriNV" return="void" offset="502" extension="soft" glxropcode="4138" category="NV_register_combiners" version="1.1" glxflags="ignore" >
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="CombinerInputNV" return="void" offset="503" extension="soft" glxropcode="4140" category="NV_register_combiners" version="1.1" glxflags="ignore" >
				<param name="stage" kind="value" type="CombinerStageNV" input="true" />
				<param name="portion" kind="value" type="CombinerPortionNV" input="true" />
				<param name="variable" kind="value" type="CombinerVariableNV" input="true" />
				<param name="input" kind="value" type="CombinerRegisterNV" input="true" />
				<param name="mapping" kind="value" type="CombinerMappingNV" input="true" />
				<param name="componentUsage" kind="value" type="CombinerComponentUsageNV" input="true" />
			</function>
			<function name="CombinerOutputNV" return="void" offset="504" extension="soft" glxropcode="4141" category="NV_register_combiners" version="1.1" glxflags="ignore" >
				<param name="stage" kind="value" type="CombinerStageNV" input="true" />
				<param name="portion" kind="value" type="CombinerPortionNV" input="true" />
				<param name="abOutput" kind="value" type="CombinerRegisterNV" input="true" />
				<param name="cdOutput" kind="value" type="CombinerRegisterNV" input="true" />
				<param name="sumOutput" kind="value" type="CombinerRegisterNV" input="true" />
				<param name="scale" kind="value" type="CombinerScaleNV" input="true" />
				<param name="bias" kind="value" type="CombinerBiasNV" input="true" />
				<param name="abDotProduct" kind="value" type="Boolean" input="true" />
				<param name="cdDotProduct" kind="value" type="Boolean" input="true" />
				<param name="muxSum" kind="value" type="Boolean" input="true" />
			</function>
			<function name="FinalCombinerInputNV" return="void" offset="505" extension="soft" glxropcode="4142" category="NV_register_combiners" version="1.1" glxflags="ignore" >
				<param name="variable" kind="value" type="CombinerVariableNV" input="true" />
				<param name="input" kind="value" type="CombinerRegisterNV" input="true" />
				<param name="mapping" kind="value" type="CombinerMappingNV" input="true" />
				<param name="componentUsage" kind="value" type="CombinerComponentUsageNV" input="true" />
			</function>
			<function name="GetCombinerInputParameterfvNV" return="void" offset="506" extension="soft" dlflags="notlistable" category="NV_register_combiners" version="1.1" glxflags="ignore" glxvendorpriv="1270" >
				<param name="stage" kind="value" type="CombinerStageNV" input="true" />
				<param name="portion" kind="value" type="CombinerPortionNV" input="true" />
				<param name="variable" kind="value" type="CombinerVariableNV" input="true" />
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetCombinerInputParameterivNV" return="void" offset="507" extension="soft" dlflags="notlistable" category="NV_register_combiners" version="1.1" glxflags="ignore" glxvendorpriv="1271" >
				<param name="stage" kind="value" type="CombinerStageNV" input="true" />
				<param name="portion" kind="value" type="CombinerPortionNV" input="true" />
				<param name="variable" kind="value" type="CombinerVariableNV" input="true" />
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetCombinerOutputParameterfvNV" return="void" offset="508" extension="soft" dlflags="notlistable" category="NV_register_combiners" version="1.1" glxflags="ignore" glxvendorpriv="1272" >
				<param name="stage" kind="value" type="CombinerStageNV" input="true" />
				<param name="portion" kind="value" type="CombinerPortionNV" input="true" />
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetCombinerOutputParameterivNV" return="void" offset="509" extension="soft" dlflags="notlistable" category="NV_register_combiners" version="1.1" glxflags="ignore" glxvendorpriv="1273" >
				<param name="stage" kind="value" type="CombinerStageNV" input="true" />
				<param name="portion" kind="value" type="CombinerPortionNV" input="true" />
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetFinalCombinerInputParameterfvNV" return="void" offset="510" extension="soft" dlflags="notlistable" category="NV_register_combiners" version="1.1" glxflags="ignore" glxvendorpriv="1274" >
				<param name="variable" kind="value" type="CombinerVariableNV" input="true" />
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetFinalCombinerInputParameterivNV" return="void" offset="511" extension="soft" dlflags="notlistable" category="NV_register_combiners" version="1.1" glxflags="ignore" glxvendorpriv="1275" >
				<param name="variable" kind="value" type="CombinerVariableNV" input="true" />
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ResizeBuffersMESA" return="void" offset="512" glxropcode="?" version="1.0" category="MESA_resize_buffers" />
			<function name="WindowPos2dMESA" return="void" vectorequiv="WindowPos2dvMESA" version="1.0" category="MESA_window_pos" alias="WindowPos2dARB" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
			</function>
			<function name="WindowPos2dvMESA" return="void" version="1.0" glxropcode="?" category="MESA_window_pos" alias="WindowPos2dvARB" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2fMESA" return="void" vectorequiv="WindowPos2fvMESA" version="1.0" category="MESA_window_pos" alias="WindowPos2fARB" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
			</function>
			<function name="WindowPos2fvMESA" return="void" version="1.0" glxropcode="?" category="MESA_window_pos" alias="WindowPos2fvARB" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2iMESA" return="void" vectorequiv="WindowPos2ivMESA" version="1.0" category="MESA_window_pos" alias="WindowPos2iARB" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
			</function>
			<function name="WindowPos2ivMESA" return="void" version="1.0" glxropcode="?" category="MESA_window_pos" alias="WindowPos2ivARB" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[2]" />
			</function>
			<function name="WindowPos2sMESA" return="void" vectorequiv="WindowPos2svMESA" version="1.0" category="MESA_window_pos" alias="WindowPos2sARB" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
			</function>
			<function name="WindowPos2svMESA" return="void" version="1.0" glxropcode="?" category="MESA_window_pos" alias="WindowPos2svARB" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[2]" />
			</function>
			<function name="WindowPos3dMESA" return="void" vectorequiv="WindowPos3dvMESA" version="1.0" category="MESA_window_pos" alias="WindowPos3dARB" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
				<param name="z" kind="value" type="CoordD" input="true" />
			</function>
			<function name="WindowPos3dvMESA" return="void" version="1.0" glxropcode="?" category="MESA_window_pos" alias="WindowPos3dvARB" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3fMESA" return="void" vectorequiv="WindowPos3fvMESA" version="1.0" category="MESA_window_pos" alias="WindowPos3fARB" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
				<param name="z" kind="value" type="CoordF" input="true" />
			</function>
			<function name="WindowPos3fvMESA" return="void" version="1.0" glxropcode="?" category="MESA_window_pos" alias="WindowPos3fvARB" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3iMESA" return="void" vectorequiv="WindowPos3ivMESA" version="1.0" category="MESA_window_pos" alias="WindowPos3iARB" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
				<param name="z" kind="value" type="CoordI" input="true" />
			</function>
			<function name="WindowPos3ivMESA" return="void" version="1.0" glxropcode="?" category="MESA_window_pos" alias="WindowPos3ivARB" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[3]" />
			</function>
			<function name="WindowPos3sMESA" return="void" vectorequiv="WindowPos3svMESA" version="1.0" category="MESA_window_pos" alias="WindowPos3sARB" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
				<param name="z" kind="value" type="CoordS" input="true" />
			</function>
			<function name="WindowPos3svMESA" return="void" version="1.0" glxropcode="?" category="MESA_window_pos" alias="WindowPos3svARB" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[3]" />
			</function>
			<function name="WindowPos4dMESA" return="void" offset="529" vectorequiv="WindowPos4dvMESA" version="1.0" category="MESA_window_pos" >
				<param name="x" kind="value" type="CoordD" input="true" />
				<param name="y" kind="value" type="CoordD" input="true" />
				<param name="z" kind="value" type="CoordD" input="true" />
				<param name="w" kind="value" type="CoordD" input="true" />
			</function>
			<function name="WindowPos4dvMESA" return="void" offset="530" version="1.0" glxropcode="?" category="MESA_window_pos" >
				<param name="v" kind="array" type="CoordD" input="true" compute="[4]" />
			</function>
			<function name="WindowPos4fMESA" return="void" offset="531" vectorequiv="WindowPos4fvMESA" version="1.0" category="MESA_window_pos" >
				<param name="x" kind="value" type="CoordF" input="true" />
				<param name="y" kind="value" type="CoordF" input="true" />
				<param name="z" kind="value" type="CoordF" input="true" />
				<param name="w" kind="value" type="CoordF" input="true" />
			</function>
			<function name="WindowPos4fvMESA" return="void" offset="532" version="1.0" glxropcode="?" category="MESA_window_pos" >
				<param name="v" kind="array" type="CoordF" input="true" compute="[4]" />
			</function>
			<function name="WindowPos4iMESA" return="void" offset="533" vectorequiv="WindowPos4ivMESA" version="1.0" category="MESA_window_pos" >
				<param name="x" kind="value" type="CoordI" input="true" />
				<param name="y" kind="value" type="CoordI" input="true" />
				<param name="z" kind="value" type="CoordI" input="true" />
				<param name="w" kind="value" type="CoordI" input="true" />
			</function>
			<function name="WindowPos4ivMESA" return="void" offset="534" version="1.0" glxropcode="?" category="MESA_window_pos" >
				<param name="v" kind="array" type="CoordI" input="true" compute="[4]" />
			</function>
			<function name="WindowPos4sMESA" return="void" offset="535" vectorequiv="WindowPos4svMESA" version="1.0" category="MESA_window_pos" >
				<param name="x" kind="value" type="CoordS" input="true" />
				<param name="y" kind="value" type="CoordS" input="true" />
				<param name="z" kind="value" type="CoordS" input="true" />
				<param name="w" kind="value" type="CoordS" input="true" />
			</function>
			<function name="WindowPos4svMESA" return="void" offset="536" version="1.0" glxropcode="?" category="MESA_window_pos" >
				<param name="v" kind="array" type="CoordS" input="true" compute="[4]" />
			</function>
			<function name="MultiModeDrawArraysIBM" return="void" offset="708" version="1.1" glxropcode="?" category="IBM_multimode_draw_arrays" >
				<param name="mode" kind="array" type="BeginMode" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="first" kind="array" type="Int32" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
				<param name="modestride" kind="value" type="Int32" input="true" />
			</function>
			<function name="MultiModeDrawElementsIBM" return="void" offset="709" version="1.1" glxropcode="?" category="IBM_multimode_draw_arrays" >
				<param name="mode" kind="array" type="BeginMode" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="ConstVoidPointer" input="true" compute="[COMPSIZE(primcount)]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
				<param name="modestride" kind="value" type="Int32" input="true" />
			</function>
			<function name="ColorPointerListIBM" return="void" offset="?" version="1.1" glxropcode="?" category="IBM_vertex_array_lists" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="ColorPointerType" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
				<param name="ptrstride" kind="value" type="Int32" input="true" />
			</function>
			<function name="SecondaryColorPointerListIBM" return="void" offset="?" version="1.1" glxropcode="?" category="IBM_vertex_array_lists" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="SecondaryColorPointerTypeIBM" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
				<param name="ptrstride" kind="value" type="Int32" input="true" />
			</function>
			<function name="EdgeFlagPointerListIBM" return="void" offset="?" version="1.1" glxropcode="?" category="IBM_vertex_array_lists" >
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="pointer" kind="array" type="BooleanPointer" input="true" compute="[COMPSIZE(stride)] retained" />
				<param name="ptrstride" kind="value" type="Int32" input="true" />
			</function>
			<function name="FogCoordPointerListIBM" return="void" offset="?" version="1.1" glxropcode="?" category="IBM_vertex_array_lists" >
				<param name="type" kind="value" type="FogPointerTypeIBM" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(type/stride)] retained" />
				<param name="ptrstride" kind="value" type="Int32" input="true" />
			</function>
			<function name="IndexPointerListIBM" return="void" offset="?" version="1.1" glxropcode="?" category="IBM_vertex_array_lists" >
				<param name="type" kind="value" type="IndexPointerType" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(type/stride)] retained" />
				<param name="ptrstride" kind="value" type="Int32" input="true" />
			</function>
			<function name="NormalPointerListIBM" return="void" offset="?" version="1.1" glxropcode="?" category="IBM_vertex_array_lists" >
				<param name="type" kind="value" type="NormalPointerType" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(type/stride)] retained" />
				<param name="ptrstride" kind="value" type="Int32" input="true" />
			</function>
			<function name="TexCoordPointerListIBM" return="void" offset="?" version="1.1" glxropcode="?" category="IBM_vertex_array_lists" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="TexCoordPointerType" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
				<param name="ptrstride" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexPointerListIBM" return="void" offset="?" version="1.1" glxropcode="?" category="IBM_vertex_array_lists" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexPointerType" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
				<param name="ptrstride" kind="value" type="Int32" input="true" />
			</function>
			<function name="TbufferMask3DFX" return="void" offset="553" version="1.2" glxropcode="?" category="3DFX_tbuffer" >
				<param name="mask" kind="value" type="UInt32" input="true" />
			</function>
			<function name="SampleMaskEXT" return="void" offset="446" version="1.0" glxropcode="?" category="EXT_multisample" >
				<param name="value" kind="value" type="ClampedFloat32" input="true" />
				<param name="invert" kind="value" type="Boolean" input="true" />
			</function>
			<function name="SamplePatternEXT" return="void" offset="447" version="1.0" glxropcode="?" category="EXT_multisample" >
				<param name="pattern" kind="value" type="SamplePatternEXT" input="true" />
			</function>
			<function name="TextureColorMaskSGIS" return="void" offset="?" version="1.1" glxropcode="2082" category="SGIS_texture_color_mask" >
				<param name="red" kind="value" type="Boolean" input="true" />
				<param name="green" kind="value" type="Boolean" input="true" />
				<param name="blue" kind="value" type="Boolean" input="true" />
				<param name="alpha" kind="value" type="Boolean" input="true" />
			</function>
			<function name="IglooInterfaceSGIX" return="void" offset="?" glxropcode="200" category="SGIX_igloo_interface" dlflags="notlistable" version="1.0" glxflags="SGI" >
				<param name="pname" kind="value" type="IglooFunctionSelectSGIX" input="true" />
				<param name="params" kind="array" type="IglooParameterSGIX" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="DeleteFencesNV" return="void" offset="647" extension="soft" dlflags="notlistable" category="NV_fence" version="1.2" glxflags="ignore" glxvendorpriv="1276" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="fences" kind="array" type="FenceNV" input="true" compute="[n]" />
			</function>
			<function name="GenFencesNV" return="void" offset="648" extension="soft" dlflags="notlistable" category="NV_fence" version="1.2" glxflags="ignore" glxvendorpriv="1277" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="fences" kind="array" type="FenceNV" input="false" compute="[n]" />
			</function>
			<function name="IsFenceNV" return="Boolean" offset="649" extension="soft" dlflags="notlistable" category="NV_fence" version="1.2" glxflags="ignore" glxvendorpriv="1278" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
			</function>
			<function name="TestFenceNV" return="Boolean" offset="650" extension="soft" dlflags="notlistable" category="NV_fence" version="1.2" glxflags="ignore" glxvendorpriv="1279" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
			</function>
			<function name="GetFenceivNV" return="void" offset="651" extension="soft" dlflags="notlistable" category="NV_fence" version="1.2" glxflags="ignore" glxvendorpriv="1280" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
				<param name="pname" kind="value" type="FenceParameterNameNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="FinishFenceNV" return="void" offset="652" extension="soft" dlflags="notlistable" category="NV_fence" version="1.2" glxflags="ignore" glxvendorpriv="1312" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
			</function>
			<function name="SetFenceNV" return="void" offset="653" extension="soft" version="1.2" category="NV_fence" glxflags="ignore" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
				<param name="condition" kind="value" type="FenceConditionNV" input="true" />
			</function>
			<function name="MapControlPointsNV" return="void" offset="?" extension="soft" category="NV_evaluators" dlflags="handcode" version="1.1" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="MapTypeNV" input="true" />
				<param name="ustride" kind="value" type="SizeI" input="true" />
				<param name="vstride" kind="value" type="SizeI" input="true" />
				<param name="uorder" kind="value" type="CheckedInt32" input="true" />
				<param name="vorder" kind="value" type="CheckedInt32" input="true" />
				<param name="packed" kind="value" type="Boolean" input="true" />
				<param name="points" kind="array" type="Void" input="true" compute="[COMPSIZE(target/uorder/vorder)]" />
			</function>
			<function name="MapParameterivNV" return="void" offset="?" extension="soft" version="1.1" category="NV_evaluators" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="pname" kind="value" type="MapParameterNV" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(target/pname)]" />
			</function>
			<function name="MapParameterfvNV" return="void" offset="?" extension="soft" version="1.1" category="NV_evaluators" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="pname" kind="value" type="MapParameterNV" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(target/pname)]" />
			</function>
			<function name="GetMapControlPointsNV" return="void" offset="?" extension="soft" category="NV_evaluators" dlflags="notlistable" version="1.1" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="MapTypeNV" input="true" />
				<param name="ustride" kind="value" type="SizeI" input="true" />
				<param name="vstride" kind="value" type="SizeI" input="true" />
				<param name="packed" kind="value" type="Boolean" input="true" />
				<param name="points" kind="array" type="Void" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetMapParameterivNV" return="void" offset="?" extension="soft" category="NV_evaluators" dlflags="notlistable" version="1.1" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="pname" kind="value" type="MapParameterNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(target/pname)]" />
			</function>
			<function name="GetMapParameterfvNV" return="void" offset="?" extension="soft" category="NV_evaluators" dlflags="notlistable" version="1.1" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="pname" kind="value" type="MapParameterNV" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(target/pname)]" />
			</function>
			<function name="GetMapAttribParameterivNV" return="void" offset="?" extension="soft" category="NV_evaluators" dlflags="notlistable" version="1.1" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="MapAttribParameterNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMapAttribParameterfvNV" return="void" offset="?" extension="soft" category="NV_evaluators" dlflags="notlistable" version="1.1" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="MapAttribParameterNV" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="EvalMapsNV" return="void" offset="?" extension="soft" version="1.1" category="NV_evaluators" glxflags="ignore" >
				<param name="target" kind="value" type="EvalTargetNV" input="true" />
				<param name="mode" kind="value" type="EvalMapsModeNV" input="true" />
			</function>
			<function name="CombinerStageParameterfvNV" return="void" offset="?" version="1.1" category="NV_register_combiners2" glxflags="ignore" >
				<param name="stage" kind="value" type="CombinerStageNV" input="true" />
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetCombinerStageParameterfvNV" return="void" offset="?" category="NV_register_combiners2" dlflags="notlistable" version="1.1" glxflags="ignore" >
				<param name="stage" kind="value" type="CombinerStageNV" input="true" />
				<param name="pname" kind="value" type="CombinerParameterNV" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="AreProgramsResidentNV" return="Boolean" offset="578" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" glxflags="ignore" glxvendorpriv="1293" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="programs" kind="array" type="UInt32" input="true" compute="[n]" />
				<param name="residences" kind="array" type="Boolean" input="false" compute="[n]" />
			</function>
			<function name="BindProgramNV" return="void" extension="soft" glxropcode="4180" category="NV_vertex_program" version="1.2" alias="BindProgramARB" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteProgramsNV" return="void" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" alias="DeleteProgramsARB" glxvendorpriv="1294" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="programs" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="ExecuteProgramNV" return="void" offset="581" extension="soft" glxropcode="4181" version="1.2" category="NV_vertex_program" glxflags="ignore" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="GenProgramsNV" return="void" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" alias="GenProgramsARB" glxvendorpriv="1295" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="programs" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="GetProgramParameterdvNV" return="void" offset="583" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" glxflags="ignore" glxvendorpriv="1297" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="GetProgramParameterfvNV" return="void" offset="584" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" glxflags="ignore" glxvendorpriv="1296" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="GetProgramivNV" return="void" offset="585" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" glxflags="ignore" glxvendorpriv="1298" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[4]" />
			</function>
			<function name="GetProgramStringNV" return="void" offset="586" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" glxflags="ignore" glxvendorpriv="1299" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="program" kind="array" type="ProgramCharacterNV" input="false" compute="[COMPSIZE(id/pname)]" />
			</function>
			<function name="GetTrackMatrixivNV" return="void" offset="587" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" glxflags="ignore" glxvendorpriv="1300" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="address" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="GetVertexAttribdvNV" return="void" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" alias="GetVertexAttribdv" glxvendorpriv="1301" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[1]" />
			</function>
			<function name="GetVertexAttribfvNV" return="void" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" alias="GetVertexAttribfv" glxvendorpriv="1302" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[1]" />
			</function>
			<function name="GetVertexAttribivNV" return="void" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" alias="GetVertexAttribiv" glxvendorpriv="1303" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="GetVertexAttribPointervNV" return="void" extension="soft" dlflags="notlistable" category="NV_vertex_program" glxflags="ignore" version="1.2" alias="GetVertexAttribPointerv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="pointer" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="IsProgramNV" return="Boolean" extension="soft" dlflags="notlistable" category="NV_vertex_program" version="1.2" alias="IsProgram" glxvendorpriv="1304" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="LoadProgramNV" return="void" offset="593" extension="soft" glxropcode="4183" category="NV_vertex_program" version="1.2" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="program" kind="array" type="UInt8" input="true" compute="[len]" />
			</function>
			<function name="ProgramParameter4dNV" return="void" offset="594" vectorequiv="ProgramParameter4dvNV" extension="soft" version="1.2" category="NV_vertex_program" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramParameter4dvNV" return="void" offset="595" extension="soft" glxropcode="4185" category="NV_vertex_program" version="1.2" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="ProgramParameter4fNV" return="void" offset="596" vectorequiv="ProgramParameter4fvNV" extension="soft" version="1.2" category="NV_vertex_program" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramParameter4fvNV" return="void" offset="597" extension="soft" glxropcode="4184" category="NV_vertex_program" version="1.2" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="ProgramParameters4dvNV" return="void" offset="598" extension="soft" glxropcode="4187" category="NV_vertex_program" version="1.2" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[count*4]" />
			</function>
			<function name="ProgramParameters4fvNV" return="void" offset="599" extension="soft" glxropcode="4186" category="NV_vertex_program" version="1.2" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[count*4]" />
			</function>
			<function name="RequestResidentProgramsNV" return="void" offset="600" extension="soft" glxropcode="4182" category="NV_vertex_program" version="1.2" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="programs" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="TrackMatrixNV" return="void" offset="601" extension="soft" glxropcode="4188" category="NV_vertex_program" version="1.2" >
				<param name="target" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="address" kind="value" type="UInt32" input="true" />
				<param name="matrix" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="transform" kind="value" type="VertexAttribEnumNV" input="true" />
			</function>
			<function name="VertexAttribPointerNV" return="void" offset="602" extension="soft" category="NV_vertex_program" dlflags="notlistable" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="fsize" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexAttribEnumNV" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(fsize/type/stride)] retained" />
			</function>
			<function name="VertexAttrib1dNV" return="void" vectorequiv="VertexAttrib1dvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib1d" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib1dvNV" return="void" extension="soft" glxropcode="4197" category="NV_vertex_program" version="1.2" alias="VertexAttrib1dv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib1fNV" return="void" vectorequiv="VertexAttrib1fvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib1f" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib1fvNV" return="void" extension="soft" glxropcode="4193" category="NV_vertex_program" version="1.2" alias="VertexAttrib1fv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib1sNV" return="void" vectorequiv="VertexAttrib1svNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib1s" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib1svNV" return="void" extension="soft" glxropcode="4189" category="NV_vertex_program" version="1.2" alias="VertexAttrib1sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib2dNV" return="void" vectorequiv="VertexAttrib2dvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib2d" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib2dvNV" return="void" extension="soft" glxropcode="4198" category="NV_vertex_program" version="1.2" alias="VertexAttrib2dv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib2fNV" return="void" vectorequiv="VertexAttrib2fvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib2f" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib2fvNV" return="void" extension="soft" glxropcode="4194" category="NV_vertex_program" version="1.2" alias="VertexAttrib2fv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib2sNV" return="void" vectorequiv="VertexAttrib2svNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib2s" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib2svNV" return="void" extension="soft" glxropcode="4190" category="NV_vertex_program" version="1.2" alias="VertexAttrib2sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib3dNV" return="void" vectorequiv="VertexAttrib3dvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib3d" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib3dvNV" return="void" extension="soft" glxropcode="4199" category="NV_vertex_program" version="1.2" alias="VertexAttrib3dv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib3fNV" return="void" vectorequiv="VertexAttrib3fvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib3f" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib3fvNV" return="void" extension="soft" glxropcode="4195" category="NV_vertex_program" version="1.2" alias="VertexAttrib3fv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib3sNV" return="void" vectorequiv="VertexAttrib3svNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib3s" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
				<param name="z" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib3svNV" return="void" extension="soft" glxropcode="4191" category="NV_vertex_program" version="1.2" alias="VertexAttrib3sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib4dNV" return="void" vectorequiv="VertexAttrib4dvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib4d" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttrib4dvNV" return="void" extension="soft" glxropcode="4200" category="NV_vertex_program" version="1.2" alias="VertexAttrib4dv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4fNV" return="void" vectorequiv="VertexAttrib4fvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib4f" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexAttrib4fvNV" return="void" extension="soft" glxropcode="4196" category="NV_vertex_program" version="1.2" alias="VertexAttrib4fv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4sNV" return="void" vectorequiv="VertexAttrib4svNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib4s" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
				<param name="z" kind="value" type="Int16" input="true" />
				<param name="w" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexAttrib4svNV" return="void" extension="soft" glxropcode="4192" category="NV_vertex_program" version="1.2" alias="VertexAttrib4sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttrib4ubNV" return="void" vectorequiv="VertexAttrib4ubvNV" extension="soft" version="1.2" category="NV_vertex_program" alias="VertexAttrib4Nub" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="ColorUB" input="true" />
				<param name="y" kind="value" type="ColorUB" input="true" />
				<param name="z" kind="value" type="ColorUB" input="true" />
				<param name="w" kind="value" type="ColorUB" input="true" />
			</function>
			<function name="VertexAttrib4ubvNV" return="void" extension="soft" glxropcode="4201" category="NV_vertex_program" version="1.2" alias="VertexAttrib4Nubv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="ColorUB" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribs1dvNV" return="void" offset="629" extension="soft" glxropcode="4210" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="VertexAttribs1fvNV" return="void" offset="630" extension="soft" glxropcode="4206" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="VertexAttribs1svNV" return="void" offset="631" extension="soft" glxropcode="4202" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[count]" />
			</function>
			<function name="VertexAttribs2dvNV" return="void" offset="632" extension="soft" glxropcode="4211" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[count*2]" />
			</function>
			<function name="VertexAttribs2fvNV" return="void" offset="633" extension="soft" glxropcode="4207" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[count*2]" />
			</function>
			<function name="VertexAttribs2svNV" return="void" offset="634" extension="soft" glxropcode="4203" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[count*2]" />
			</function>
			<function name="VertexAttribs3dvNV" return="void" offset="635" extension="soft" glxropcode="4212" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[count*3]" />
			</function>
			<function name="VertexAttribs3fvNV" return="void" offset="636" extension="soft" glxropcode="4208" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[count*3]" />
			</function>
			<function name="VertexAttribs3svNV" return="void" offset="637" extension="soft" glxropcode="4204" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[count*3]" />
			</function>
			<function name="VertexAttribs4dvNV" return="void" offset="638" extension="soft" glxropcode="4213" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[count*4]" />
			</function>
			<function name="VertexAttribs4fvNV" return="void" offset="639" extension="soft" glxropcode="4209" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Float32" input="true" compute="[count*4]" />
			</function>
			<function name="VertexAttribs4svNV" return="void" offset="640" extension="soft" glxropcode="4205" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[count*4]" />
			</function>
			<function name="VertexAttribs4ubvNV" return="void" offset="641" extension="soft" glxropcode="4214" category="NV_vertex_program" version="1.2" dlflags="handcode" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="ColorUB" input="true" compute="[count*4]" />
			</function>
			<function name="TexBumpParameterivATI" return="void" offset="?" glxropcode="?" category="ATI_envmap_bumpmap" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="TexBumpParameterATI" input="true" />
				<param name="param" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexBumpParameterfvATI" return="void" offset="?" glxropcode="?" category="ATI_envmap_bumpmap" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="TexBumpParameterATI" input="true" />
				<param name="param" kind="array" type="Float32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexBumpParameterivATI" return="void" offset="?" dlflags="notlistable" category="ATI_envmap_bumpmap" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GetTexBumpParameterATI" input="true" />
				<param name="param" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexBumpParameterfvATI" return="void" offset="?" dlflags="notlistable" category="ATI_envmap_bumpmap" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GetTexBumpParameterATI" input="true" />
				<param name="param" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GenFragmentShadersATI" return="UInt32" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="range" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindFragmentShaderATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteFragmentShaderATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BeginFragmentShaderATI" return="void" offset="?" category="ATI_fragment_shader" glxropcode="?" version="1.2" glxflags="ignore" />
			<function name="EndFragmentShaderATI" return="void" offset="?" category="ATI_fragment_shader" glxropcode="?" version="1.2" glxflags="ignore" />
			<function name="PassTexCoordATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="coord" kind="value" type="UInt32" input="true" />
				<param name="swizzle" kind="value" type="SwizzleOpATI" input="true" />
			</function>
			<function name="SampleMapATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="interp" kind="value" type="UInt32" input="true" />
				<param name="swizzle" kind="value" type="SwizzleOpATI" input="true" />
			</function>
			<function name="ColorFragmentOp1ATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="FragmentOpATI" input="true" />
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="dstMask" kind="value" type="UInt32" input="true" />
				<param name="dstMod" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
				<param name="arg1Rep" kind="value" type="UInt32" input="true" />
				<param name="arg1Mod" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ColorFragmentOp2ATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="FragmentOpATI" input="true" />
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="dstMask" kind="value" type="UInt32" input="true" />
				<param name="dstMod" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
				<param name="arg1Rep" kind="value" type="UInt32" input="true" />
				<param name="arg1Mod" kind="value" type="UInt32" input="true" />
				<param name="arg2" kind="value" type="UInt32" input="true" />
				<param name="arg2Rep" kind="value" type="UInt32" input="true" />
				<param name="arg2Mod" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ColorFragmentOp3ATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="FragmentOpATI" input="true" />
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="dstMask" kind="value" type="UInt32" input="true" />
				<param name="dstMod" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
				<param name="arg1Rep" kind="value" type="UInt32" input="true" />
				<param name="arg1Mod" kind="value" type="UInt32" input="true" />
				<param name="arg2" kind="value" type="UInt32" input="true" />
				<param name="arg2Rep" kind="value" type="UInt32" input="true" />
				<param name="arg2Mod" kind="value" type="UInt32" input="true" />
				<param name="arg3" kind="value" type="UInt32" input="true" />
				<param name="arg3Rep" kind="value" type="UInt32" input="true" />
				<param name="arg3Mod" kind="value" type="UInt32" input="true" />
			</function>
			<function name="AlphaFragmentOp1ATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="FragmentOpATI" input="true" />
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="dstMod" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
				<param name="arg1Rep" kind="value" type="UInt32" input="true" />
				<param name="arg1Mod" kind="value" type="UInt32" input="true" />
			</function>
			<function name="AlphaFragmentOp2ATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="FragmentOpATI" input="true" />
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="dstMod" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
				<param name="arg1Rep" kind="value" type="UInt32" input="true" />
				<param name="arg1Mod" kind="value" type="UInt32" input="true" />
				<param name="arg2" kind="value" type="UInt32" input="true" />
				<param name="arg2Rep" kind="value" type="UInt32" input="true" />
				<param name="arg2Mod" kind="value" type="UInt32" input="true" />
			</function>
			<function name="AlphaFragmentOp3ATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="FragmentOpATI" input="true" />
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="dstMod" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
				<param name="arg1Rep" kind="value" type="UInt32" input="true" />
				<param name="arg1Mod" kind="value" type="UInt32" input="true" />
				<param name="arg2" kind="value" type="UInt32" input="true" />
				<param name="arg2Rep" kind="value" type="UInt32" input="true" />
				<param name="arg2Mod" kind="value" type="UInt32" input="true" />
				<param name="arg3" kind="value" type="UInt32" input="true" />
				<param name="arg3Rep" kind="value" type="UInt32" input="true" />
				<param name="arg3Mod" kind="value" type="UInt32" input="true" />
			</function>
			<function name="SetFragmentShaderConstantATI" return="void" offset="?" glxropcode="?" category="ATI_fragment_shader" version="1.2" glxflags="ignore" >
				<param name="dst" kind="value" type="UInt32" input="true" />
				<param name="value" kind="array" type="ConstFloat32" input="true" compute="[4]" />
			</function>
			<function name="PNTrianglesiATI" return="void" offset="?" glxropcode="?" category="ATI_pn_triangles" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="PNTrianglesPNameATI" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="PNTrianglesfATI" return="void" offset="?" glxropcode="?" category="ATI_pn_triangles" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="PNTrianglesPNameATI" input="true" />
				<param name="param" kind="value" type="Float32" input="true" />
			</function>
			<function name="NewObjectBufferATI" return="UInt32" offset="?" glxropcode="?" category="ATI_vertex_array_object" version="1.2" glxflags="ignore" >
				<param name="size" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="ConstVoid" input="true" compute="[size]" />
				<param name="usage" kind="value" type="ArrayObjectUsageATI" input="true" />
			</function>
			<function name="IsObjectBufferATI" return="Boolean" offset="?" glxropcode="?" category="ATI_vertex_array_object" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="UpdateObjectBufferATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_array_object" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="ConstVoid" input="true" compute="[size]" />
				<param name="preserve" kind="value" type="PreserveModeATI" input="true" />
			</function>
			<function name="GetObjectBufferfvATI" return="void" offset="?" dlflags="notlistable" category="ATI_vertex_array_object" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ArrayObjectPNameATI" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[1]" />
			</function>
			<function name="GetObjectBufferivATI" return="void" offset="?" dlflags="notlistable" category="ATI_vertex_array_object" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ArrayObjectPNameATI" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="FreeObjectBufferATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_array_object" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ArrayObjectATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_array_object" version="1.2" glxflags="ignore" >
				<param name="array" kind="value" type="EnableCap" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="ScalarType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetArrayObjectfvATI" return="void" offset="?" dlflags="notlistable" category="ATI_vertex_array_object" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="array" kind="value" type="EnableCap" input="true" />
				<param name="pname" kind="value" type="ArrayObjectPNameATI" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[1]" />
			</function>
			<function name="GetArrayObjectivATI" return="void" offset="?" dlflags="notlistable" category="ATI_vertex_array_object" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="array" kind="value" type="EnableCap" input="true" />
				<param name="pname" kind="value" type="ArrayObjectPNameATI" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="VariantArrayObjectATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_array_object" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="ScalarType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetVariantArrayObjectfvATI" return="void" offset="?" dlflags="notlistable" category="ATI_vertex_array_object" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ArrayObjectPNameATI" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[1]" />
			</function>
			<function name="GetVariantArrayObjectivATI" return="void" offset="?" dlflags="notlistable" category="ATI_vertex_array_object" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ArrayObjectPNameATI" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="BeginVertexShaderEXT" return="void" offset="?" category="EXT_vertex_shader" glxropcode="?" version="1.2" glxflags="ignore" />
			<function name="EndVertexShaderEXT" return="void" offset="?" category="EXT_vertex_shader" glxropcode="?" version="1.2" glxflags="ignore" />
			<function name="BindVertexShaderEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GenVertexShadersEXT" return="UInt32" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="range" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteVertexShaderEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ShaderOp1EXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="VertexShaderOpEXT" input="true" />
				<param name="res" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ShaderOp2EXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="VertexShaderOpEXT" input="true" />
				<param name="res" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
				<param name="arg2" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ShaderOp3EXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="op" kind="value" type="VertexShaderOpEXT" input="true" />
				<param name="res" kind="value" type="UInt32" input="true" />
				<param name="arg1" kind="value" type="UInt32" input="true" />
				<param name="arg2" kind="value" type="UInt32" input="true" />
				<param name="arg3" kind="value" type="UInt32" input="true" />
			</function>
			<function name="SwizzleEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="res" kind="value" type="UInt32" input="true" />
				<param name="in" kind="value" type="UInt32" input="true" />
				<param name="outX" kind="value" type="VertexShaderCoordOutEXT" input="true" />
				<param name="outY" kind="value" type="VertexShaderCoordOutEXT" input="true" />
				<param name="outZ" kind="value" type="VertexShaderCoordOutEXT" input="true" />
				<param name="outW" kind="value" type="VertexShaderCoordOutEXT" input="true" />
			</function>
			<function name="WriteMaskEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="res" kind="value" type="UInt32" input="true" />
				<param name="in" kind="value" type="UInt32" input="true" />
				<param name="outX" kind="value" type="VertexShaderWriteMaskEXT" input="true" />
				<param name="outY" kind="value" type="VertexShaderWriteMaskEXT" input="true" />
				<param name="outZ" kind="value" type="VertexShaderWriteMaskEXT" input="true" />
				<param name="outW" kind="value" type="VertexShaderWriteMaskEXT" input="true" />
			</function>
			<function name="InsertComponentEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="res" kind="value" type="UInt32" input="true" />
				<param name="src" kind="value" type="UInt32" input="true" />
				<param name="num" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ExtractComponentEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="res" kind="value" type="UInt32" input="true" />
				<param name="src" kind="value" type="UInt32" input="true" />
				<param name="num" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GenSymbolsEXT" return="UInt32" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="datatype" kind="value" type="DataTypeEXT" input="true" />
				<param name="storagetype" kind="value" type="VertexShaderStorageTypeEXT" input="true" />
				<param name="range" kind="value" type="ParameterRangeEXT" input="true" />
				<param name="components" kind="value" type="UInt32" input="true" />
			</function>
			<function name="SetInvariantEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="ScalarType" input="true" />
				<param name="addr" kind="array" type="Void" input="true" compute="[COMPSIZE(id/type)]" />
			</function>
			<function name="SetLocalConstantEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="ScalarType" input="true" />
				<param name="addr" kind="array" type="Void" input="true" compute="[COMPSIZE(id/type)]" />
			</function>
			<function name="VariantbvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="Int8" input="true" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VariantsvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="Int16" input="true" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VariantivEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="Int32" input="true" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VariantfvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="Float32" input="true" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VariantdvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="Float64" input="true" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VariantubvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="UInt8" input="true" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VariantusvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="UInt16" input="true" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VariantuivEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="UInt32" input="true" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VariantPointerEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="ScalarType" input="true" />
				<param name="stride" kind="value" type="UInt32" input="true" />
				<param name="addr" kind="array" type="Void" input="true" compute="[COMPSIZE(id/type/stride)]" />
			</function>
			<function name="EnableVariantClientStateEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DisableVariantClientStateEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindLightParameterEXT" return="UInt32" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="light" kind="value" type="LightName" input="true" />
				<param name="value" kind="value" type="LightParameter" input="true" />
			</function>
			<function name="BindMaterialParameterEXT" return="UInt32" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="face" kind="value" type="MaterialFace" input="true" />
				<param name="value" kind="value" type="MaterialParameter" input="true" />
			</function>
			<function name="BindTexGenParameterEXT" return="UInt32" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="unit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="value" kind="value" type="TextureGenParameter" input="true" />
			</function>
			<function name="BindTextureUnitParameterEXT" return="UInt32" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="unit" kind="value" type="TextureUnit" input="true" />
				<param name="value" kind="value" type="VertexShaderTextureUnitParameter" input="true" />
			</function>
			<function name="BindParameterEXT" return="UInt32" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="value" kind="value" type="VertexShaderParameterEXT" input="true" />
			</function>
			<function name="IsVariantEnabledEXT" return="Boolean" offset="?" glxropcode="?" category="EXT_vertex_shader" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="cap" kind="value" type="VariantCapEXT" input="true" />
			</function>
			<function name="GetVariantBooleanvEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Boolean" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetVariantIntegervEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Int32" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetVariantFloatvEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Float32" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetVariantPointervEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="VoidPointer" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetInvariantBooleanvEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Boolean" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetInvariantIntegervEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Int32" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetInvariantFloatvEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Float32" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetLocalConstantBooleanvEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Boolean" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetLocalConstantIntegervEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Int32" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="GetLocalConstantFloatvEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_shader" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="value" kind="value" type="GetVariantValueEXT" input="true" />
				<param name="data" kind="array" type="Float32" input="false" compute="[COMPSIZE(id)]" />
			</function>
			<function name="VertexStream1sATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexStream1svATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int16" input="true" compute="[1]" />
			</function>
			<function name="VertexStream1iATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexStream1ivATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int32" input="true" compute="[1]" />
			</function>
			<function name="VertexStream1fATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexStream1fvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float32" input="true" compute="[1]" />
			</function>
			<function name="VertexStream1dATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexStream1dvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float64" input="true" compute="[1]" />
			</function>
			<function name="VertexStream2sATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexStream2svATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int16" input="true" compute="[2]" />
			</function>
			<function name="VertexStream2iATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexStream2ivATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int32" input="true" compute="[2]" />
			</function>
			<function name="VertexStream2fATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexStream2fvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float32" input="true" compute="[2]" />
			</function>
			<function name="VertexStream2dATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexStream2dvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float64" input="true" compute="[2]" />
			</function>
			<function name="VertexStream3sATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
				<param name="z" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexStream3svATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int16" input="true" compute="[3]" />
			</function>
			<function name="VertexStream3iATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexStream3ivATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int32" input="true" compute="[3]" />
			</function>
			<function name="VertexStream3fATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexStream3fvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="VertexStream3dATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexStream3dvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="VertexStream4sATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Int16" input="true" />
				<param name="y" kind="value" type="Int16" input="true" />
				<param name="z" kind="value" type="Int16" input="true" />
				<param name="w" kind="value" type="Int16" input="true" />
			</function>
			<function name="VertexStream4svATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int16" input="true" compute="[4]" />
			</function>
			<function name="VertexStream4iATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
				<param name="w" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexStream4ivATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="VertexStream4fATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="VertexStream4fvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="VertexStream4dATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexStream4dvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="NormalStream3bATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="nx" kind="value" type="Int8" input="true" />
				<param name="ny" kind="value" type="Int8" input="true" />
				<param name="nz" kind="value" type="Int8" input="true" />
			</function>
			<function name="NormalStream3bvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int8" input="true" compute="[3]" />
			</function>
			<function name="NormalStream3sATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="nx" kind="value" type="Int16" input="true" />
				<param name="ny" kind="value" type="Int16" input="true" />
				<param name="nz" kind="value" type="Int16" input="true" />
			</function>
			<function name="NormalStream3svATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int16" input="true" compute="[3]" />
			</function>
			<function name="NormalStream3iATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="nx" kind="value" type="Int32" input="true" />
				<param name="ny" kind="value" type="Int32" input="true" />
				<param name="nz" kind="value" type="Int32" input="true" />
			</function>
			<function name="NormalStream3ivATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Int32" input="true" compute="[3]" />
			</function>
			<function name="NormalStream3fATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="nx" kind="value" type="Float32" input="true" />
				<param name="ny" kind="value" type="Float32" input="true" />
				<param name="nz" kind="value" type="Float32" input="true" />
			</function>
			<function name="NormalStream3fvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float32" input="true" compute="[3]" />
			</function>
			<function name="NormalStream3dATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="nx" kind="value" type="Float64" input="true" />
				<param name="ny" kind="value" type="Float64" input="true" />
				<param name="nz" kind="value" type="Float64" input="true" />
			</function>
			<function name="NormalStream3dvATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
				<param name="coords" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="ClientActiveVertexStreamATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="stream" kind="value" type="VertexStreamATI" input="true" />
			</function>
			<function name="VertexBlendEnviATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="VertexStreamATI" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexBlendEnvfATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_streams" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="VertexStreamATI" input="true" />
				<param name="param" kind="value" type="Float32" input="true" />
			</function>
			<function name="ElementPointerATI" return="void" offset="?" version="1.2" category="ATI_element_array" dlflags="notlistable" glxflags="client-handcode" >
				<param name="type" kind="value" type="ElementPointerTypeATI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(type)] retained" />
			</function>
			<function name="DrawElementArrayATI" return="void" offset="?" version="1.2" category="ATI_element_array" dlflags="handcode" glxflags="client-handcode" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DrawRangeElementArrayATI" return="void" offset="?" version="1.2" category="ATI_element_array" dlflags="handcode" glxflags="client-handcode" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="start" kind="value" type="UInt32" input="true" />
				<param name="end" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DrawMeshArraysSUN" return="void" offset="?" glxropcode="?" version="1.1" category="SUN_mesh_array" dlflags="handcode" glxflags="client-handcode" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GenOcclusionQueriesNV" return="void" extension="soft" category="NV_occlusion_query" dlflags="notlistable" version="1.2" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="DeleteOcclusionQueriesNV" return="void" extension="soft" category="NV_occlusion_query" dlflags="notlistable" version="1.2" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="IsOcclusionQueryNV" return="Boolean" extension="soft" category="NV_occlusion_query" dlflags="notlistable" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BeginOcclusionQueryNV" return="void" extension="soft" category="NV_occlusion_query" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EndOcclusionQueryNV" return="void" category="NV_occlusion_query" extension="soft" version="1.2" glxflags="ignore" />
			<function name="GetOcclusionQueryivNV" return="void" extension="soft" category="NV_occlusion_query" dlflags="notlistable" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="OcclusionQueryParameterNameNV" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetOcclusionQueryuivNV" return="void" extension="soft" category="NV_occlusion_query" dlflags="notlistable" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="OcclusionQueryParameterNameNV" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PointParameteriNV" return="void" extension="soft" glxropcode="4221" category="NV_point_sprite" version="1.2" alias="PointParameteri" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="PointParameterivNV" return="void" extension="soft" glxropcode="4222" category="NV_point_sprite" version="1.2" alias="PointParameteriv" >
				<param name="pname" kind="value" type="PointParameterNameARB" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ActiveStencilFaceEXT" return="void" offset="646" version="1.3" glxropcode="4220" category="EXT_stencil_two_side" >
				<param name="face" kind="value" type="StencilFaceDirection" input="true" />
			</function>
			<function name="ElementPointerAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_element_array" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="ElementPointerTypeATI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[type]" />
			</function>
			<function name="DrawElementArrayAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_element_array" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DrawRangeElementArrayAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_element_array" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="start" kind="value" type="UInt32" input="true" />
				<param name="end" kind="value" type="UInt32" input="true" />
				<param name="first" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
			</function>
			<function name="MultiDrawElementArrayAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_element_array" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="first" kind="array" type="Int32" input="true" compute="[primcount]" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[primcount]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="MultiDrawRangeElementArrayAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_element_array" version="1.2" glxflags="ignore" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="start" kind="value" type="UInt32" input="true" />
				<param name="end" kind="value" type="UInt32" input="true" />
				<param name="first" kind="array" type="Int32" input="true" compute="[primcount]" />
				<param name="count" kind="array" type="SizeI" input="true" compute="[primcount]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GenFencesAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_fence" version="1.2" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="fences" kind="array" type="FenceNV" input="false" compute="[n]" />
			</function>
			<function name="DeleteFencesAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_fence" version="1.2" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="fences" kind="array" type="FenceNV" input="true" compute="[n]" />
			</function>
			<function name="SetFenceAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_fence" version="1.2" glxflags="ignore" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
			</function>
			<function name="IsFenceAPPLE" return="Boolean" offset="?" glxropcode="?" category="APPLE_fence" version="1.2" glxflags="ignore" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
			</function>
			<function name="TestFenceAPPLE" return="Boolean" offset="?" glxropcode="?" category="APPLE_fence" version="1.2" glxflags="ignore" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
			</function>
			<function name="FinishFenceAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_fence" version="1.2" glxflags="ignore" >
				<param name="fence" kind="value" type="FenceNV" input="true" />
			</function>
			<function name="TestObjectAPPLE" return="Boolean" offset="?" glxropcode="?" category="APPLE_fence" version="1.2" glxflags="ignore" >
				<param name="object" kind="value" type="ObjectTypeAPPLE" input="true" />
				<param name="name" kind="value" type="UInt32" input="true" />
			</function>
			<function name="FinishObjectAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_fence" version="1.2" glxflags="ignore" >
				<param name="object" kind="value" type="ObjectTypeAPPLE" input="true" />
				<param name="name" kind="value" type="Int32" input="true" />
			</function>
			<function name="BindVertexArrayAPPLE" return="void" glxropcode="?" category="APPLE_vertex_array_object" glxflags="ignore" version="1.2" alias="BindVertexArray" >
				<param name="array" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteVertexArraysAPPLE" return="void" glxropcode="?" category="APPLE_vertex_array_object" glxflags="ignore" version="1.2" alias="DeleteVertexArrays" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="arrays" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenVertexArraysAPPLE" return="void" glxropcode="?" category="APPLE_vertex_array_object" glxflags="ignore" version="1.2" alias="GenVertexArray" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="arrays" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="IsVertexArrayAPPLE" return="Boolean" glxropcode="?" category="APPLE_vertex_array_object" glxflags="ignore" version="1.2" alias="IsVertexArray" >
				<param name="array" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexArrayRangeAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_array_range" version="1.2" glxflags="ignore" >
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="false" compute="[length]" />
			</function>
			<function name="FlushVertexArrayRangeAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_array_range" version="1.2" glxflags="ignore" >
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="false" compute="[length]" />
			</function>
			<function name="VertexArrayParameteriAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_array_range" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="VertexArrayPNameAPPLE" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="DrawBuffersATI" return="void" version="1.2" glxropcode="233" category="ATI_draw_buffers" alias="DrawBuffers" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="bufs" kind="array" type="DrawBufferModeATI" input="true" compute="[n]" />
			</function>
			<function name="ProgramNamedParameter4fNV" return="void" offset="682" glxropcode="?" category="NV_fragment_program" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="name" kind="array" type="UInt8" input="true" compute="[1]" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramNamedParameter4dNV" return="void" offset="683" glxropcode="?" category="NV_fragment_program" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="name" kind="array" type="UInt8" input="true" compute="[1]" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramNamedParameter4fvNV" return="void" offset="684" glxropcode="?" category="NV_fragment_program" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="name" kind="array" type="UInt8" input="true" compute="[1]" />
				<param name="v" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="ProgramNamedParameter4dvNV" return="void" offset="685" glxropcode="?" category="NV_fragment_program" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="name" kind="array" type="UInt8" input="true" compute="[1]" />
				<param name="v" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="GetProgramNamedParameterfvNV" return="void" offset="686" dlflags="notlistable" category="NV_fragment_program" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="name" kind="array" type="UInt8" input="true" compute="[1]" />
				<param name="params" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="GetProgramNamedParameterdvNV" return="void" offset="687" dlflags="notlistable" category="NV_fragment_program" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="name" kind="array" type="UInt8" input="true" compute="[1]" />
				<param name="params" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="Vertex2hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="x" kind="value" type="Half16NV" input="true" />
				<param name="y" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="Vertex2hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[2]" />
			</function>
			<function name="Vertex3hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="x" kind="value" type="Half16NV" input="true" />
				<param name="y" kind="value" type="Half16NV" input="true" />
				<param name="z" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="Vertex3hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[3]" />
			</function>
			<function name="Vertex4hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="x" kind="value" type="Half16NV" input="true" />
				<param name="y" kind="value" type="Half16NV" input="true" />
				<param name="z" kind="value" type="Half16NV" input="true" />
				<param name="w" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="Vertex4hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[4]" />
			</function>
			<function name="Normal3hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="nx" kind="value" type="Half16NV" input="true" />
				<param name="ny" kind="value" type="Half16NV" input="true" />
				<param name="nz" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="Normal3hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[3]" />
			</function>
			<function name="Color3hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="red" kind="value" type="Half16NV" input="true" />
				<param name="green" kind="value" type="Half16NV" input="true" />
				<param name="blue" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="Color3hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[3]" />
			</function>
			<function name="Color4hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="red" kind="value" type="Half16NV" input="true" />
				<param name="green" kind="value" type="Half16NV" input="true" />
				<param name="blue" kind="value" type="Half16NV" input="true" />
				<param name="alpha" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="Color4hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[4]" />
			</function>
			<function name="TexCoord1hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="s" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="TexCoord1hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[1]" />
			</function>
			<function name="TexCoord2hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="s" kind="value" type="Half16NV" input="true" />
				<param name="t" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="TexCoord2hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[2]" />
			</function>
			<function name="TexCoord3hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="s" kind="value" type="Half16NV" input="true" />
				<param name="t" kind="value" type="Half16NV" input="true" />
				<param name="r" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="TexCoord3hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[3]" />
			</function>
			<function name="TexCoord4hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="s" kind="value" type="Half16NV" input="true" />
				<param name="t" kind="value" type="Half16NV" input="true" />
				<param name="r" kind="value" type="Half16NV" input="true" />
				<param name="q" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="TexCoord4hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[4]" />
			</function>
			<function name="MultiTexCoord1hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="MultiTexCoord1hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[1]" />
			</function>
			<function name="MultiTexCoord2hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="Half16NV" input="true" />
				<param name="t" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="MultiTexCoord2hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[2]" />
			</function>
			<function name="MultiTexCoord3hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="Half16NV" input="true" />
				<param name="t" kind="value" type="Half16NV" input="true" />
				<param name="r" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="MultiTexCoord3hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[3]" />
			</function>
			<function name="MultiTexCoord4hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="s" kind="value" type="Half16NV" input="true" />
				<param name="t" kind="value" type="Half16NV" input="true" />
				<param name="r" kind="value" type="Half16NV" input="true" />
				<param name="q" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="MultiTexCoord4hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="TextureUnit" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[4]" />
			</function>
			<function name="FogCoordhNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="fog" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="FogCoordhvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="fog" kind="array" type="Half16NV" input="true" compute="[1]" />
			</function>
			<function name="SecondaryColor3hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="red" kind="value" type="Half16NV" input="true" />
				<param name="green" kind="value" type="Half16NV" input="true" />
				<param name="blue" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="SecondaryColor3hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="v" kind="array" type="Half16NV" input="true" compute="[3]" />
			</function>
			<function name="VertexWeighthNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="weight" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="VertexWeighthvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="weight" kind="array" type="Half16NV" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib1hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="VertexAttrib1hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[1]" />
			</function>
			<function name="VertexAttrib2hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Half16NV" input="true" />
				<param name="y" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="VertexAttrib2hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[2]" />
			</function>
			<function name="VertexAttrib3hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Half16NV" input="true" />
				<param name="y" kind="value" type="Half16NV" input="true" />
				<param name="z" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="VertexAttrib3hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[3]" />
			</function>
			<function name="VertexAttrib4hNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Half16NV" input="true" />
				<param name="y" kind="value" type="Half16NV" input="true" />
				<param name="z" kind="value" type="Half16NV" input="true" />
				<param name="w" kind="value" type="Half16NV" input="true" />
			</function>
			<function name="VertexAttrib4hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribs1hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[n]" />
			</function>
			<function name="VertexAttribs2hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[n]" />
			</function>
			<function name="VertexAttribs3hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[n]" />
			</function>
			<function name="VertexAttribs4hvNV" return="void" offset="?" glxropcode="?" category="NV_half_float" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="v" kind="array" type="Half16NV" input="true" compute="[n]" />
			</function>
			<function name="PixelDataRangeNV" return="void" offset="?" glxropcode="?" category="NV_pixel_data_range" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="PixelDataRangeTargetNV" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[length]" />
			</function>
			<function name="FlushPixelDataRangeNV" return="void" offset="?" glxropcode="?" category="NV_pixel_data_range" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="PixelDataRangeTargetNV" input="true" />
			</function>
			<function name="PrimitiveRestartNV" return="void" offset="?" category="NV_primitive_restart" glxropcode="?" version="1.2" glxflags="ignore" />
			<function name="PrimitiveRestartIndexNV" return="void" offset="?" glxropcode="?" category="NV_primitive_restart" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MapObjectBufferATI" return="VoidPointer" offset="?" glxropcode="?" category="ATI_map_object_buffer" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="UnmapObjectBufferATI" return="void" offset="?" glxropcode="?" category="ATI_map_object_buffer" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="StencilOpSeparateATI" return="void" glxropcode="?" category="ATI_separate_stencil" glxflags="ignore" version="1.2" alias="StencilOpSeparate" >
				<param name="face" kind="value" type="StencilFaceDirection" input="true" />
				<param name="sfail" kind="value" type="StencilOp" input="true" />
				<param name="dpfail" kind="value" type="StencilOp" input="true" />
				<param name="dppass" kind="value" type="StencilOp" input="true" />
			</function>
			<function name="StencilFuncSeparateATI" return="void" glxropcode="?" category="ATI_separate_stencil" glxflags="ignore" version="1.2" alias="StencilFuncSeparate" >
				<param name="frontfunc" kind="value" type="StencilFunction" input="true" />
				<param name="backfunc" kind="value" type="StencilFunction" input="true" />
				<param name="ref" kind="value" type="ClampedStencilValue" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
			</function>
			<function name="VertexAttribArrayObjectATI" return="void" offset="?" glxropcode="?" category="ATI_vertex_attrib_array_object" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexAttribPointerTypeARB" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetVertexAttribArrayObjectfvATI" return="void" offset="?" dlflags="notlistable" category="ATI_vertex_attrib_array_object" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ArrayObjectPNameATI" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[pname]" />
			</function>
			<function name="GetVertexAttribArrayObjectivATI" return="void" offset="?" dlflags="notlistable" category="ATI_vertex_attrib_array_object" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ArrayObjectPNameATI" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[pname]" />
			</function>
			<function name="DepthBoundsEXT" return="void" offset="699" version="1.2" glxropcode="4229" category="EXT_depth_bounds_test" >
				<param name="zmin" kind="value" type="ClampedFloat64" input="true" />
				<param name="zmax" kind="value" type="ClampedFloat64" input="true" />
			</function>
			<function name="BlendEquationSeparateEXT" return="void" version="1.2" glxropcode="4228" category="EXT_blend_equation_separate" alias="BlendEquationSeparate" >
				<param name="modeRGB" kind="value" type="BlendEquationModeEXT" input="true" />
				<param name="modeAlpha" kind="value" type="BlendEquationModeEXT" input="true" />
			</function>
			<function name="IsRenderbufferEXT" return="Boolean" glxflags="ignore" version="1.2" category="EXT_framebuffer_object" glxvendorpriv="1422" alias="IsRenderbuffer" >
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindRenderbufferEXT" return="void" version="1.2" glxropcode="4316" category="EXT_framebuffer_object" glxflags="ignore" >
				<param name="target" kind="value" type="RenderbufferTarget" input="true" />
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteRenderbuffersEXT" return="void" glxropcode="4317" category="EXT_framebuffer_object" glxflags="ignore" version="1.2" alias="DeleteRenderbuffers" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="renderbuffers" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenRenderbuffersEXT" return="void" glxflags="ignore" version="1.2" category="EXT_framebuffer_object" glxvendorpriv="1423" alias="GenRenderbuffers" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="renderbuffers" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="RenderbufferStorageEXT" return="void" glxropcode="4318" category="EXT_framebuffer_object" glxflags="ignore" version="1.2" alias="RenderbufferStorage" >
				<param name="target" kind="value" type="RenderbufferTarget" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetRenderbufferParameterivEXT" return="void" dlflags="notlistable" category="EXT_framebuffer_object" version="1.2" glxflags="ignore" alias="GetRenderbufferParameteriv" glxvendorpriv="1424" >
				<param name="target" kind="value" type="RenderbufferTarget" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="IsFramebufferEXT" return="Boolean" glxflags="ignore" version="1.2" category="EXT_framebuffer_object" glxvendorpriv="1425" alias="IsFramebuffer" >
				<param name="framebuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindFramebufferEXT" return="void" version="1.2" glxropcode="4319" category="EXT_framebuffer_object" glxflags="ignore" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="framebuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteFramebuffersEXT" return="void" glxropcode="4320" category="EXT_framebuffer_object" glxflags="ignore" version="1.2" alias="DeleteFramebuffers" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="framebuffers" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenFramebuffersEXT" return="void" glxflags="ignore" version="1.2" category="EXT_framebuffer_object" glxvendorpriv="1426" alias="GenFramebuffers" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="framebuffers" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="CheckFramebufferStatusEXT" return="GLenum" glxflags="ignore" version="1.2" category="EXT_framebuffer_object" glxvendorpriv="1427" alias="CheckFramebufferStatus" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
			</function>
			<function name="FramebufferTexture1DEXT" return="void" glxropcode="4321" category="EXT_framebuffer_object" glxflags="ignore" version="1.2" alias="FramebufferTexture1D" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="GLenum" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
			</function>
			<function name="FramebufferTexture2DEXT" return="void" glxropcode="4322" category="EXT_framebuffer_object" glxflags="ignore" version="1.2" alias="FramebufferTexture2D" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="GLenum" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
			</function>
			<function name="FramebufferTexture3DEXT" return="void" glxropcode="4323" category="EXT_framebuffer_object" glxflags="ignore" version="1.2" alias="FramebufferTexture3D" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="GLenum" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
				<param name="zoffset" kind="value" type="Int32" input="true" />
			</function>
			<function name="FramebufferRenderbufferEXT" return="void" glxropcode="4324" category="EXT_framebuffer_object" glxflags="ignore" version="1.2" alias="FramebufferRenderbuffer" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="renderbuffertarget" kind="value" type="RenderbufferTarget" input="true" />
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetFramebufferAttachmentParameterivEXT" return="void" dlflags="notlistable" category="EXT_framebuffer_object" version="1.2" glxflags="ignore" alias="GetFramebufferAttachmentParameteriv" glxvendorpriv="1428" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GenerateMipmapEXT" return="void" glxropcode="4325" category="EXT_framebuffer_object" glxflags="ignore" version="1.2" alias="GenerateMipmap" >
				<param name="target" kind="value" type="GLenum" input="true" />
			</function>
			<function name="StringMarkerGREMEDY" return="void" offset="?" version="1.0" category="GREMEDY_string_marker" glxflags="ignore" >
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="string" kind="array" type="Void" input="true" compute="[len]" />
			</function>
			<function name="StencilClearTagEXT" return="void" offset="?" glxropcode="4223" category="EXT_stencil_clear_tag" version="1.5" glxflags="ignore" >
				<param name="stencilTagBits" kind="value" type="SizeI" input="true" />
				<param name="stencilClearTag" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BlitFramebufferEXT" return="void" version="1.5" glxropcode="4330" category="EXT_framebuffer_blit" alias="BlitFramebuffer" >
				<param name="srcX0" kind="value" type="Int32" input="true" />
				<param name="srcY0" kind="value" type="Int32" input="true" />
				<param name="srcX1" kind="value" type="Int32" input="true" />
				<param name="srcY1" kind="value" type="Int32" input="true" />
				<param name="dstX0" kind="value" type="Int32" input="true" />
				<param name="dstY0" kind="value" type="Int32" input="true" />
				<param name="dstX1" kind="value" type="Int32" input="true" />
				<param name="dstY1" kind="value" type="Int32" input="true" />
				<param name="mask" kind="value" type="ClearBufferMask" input="true" />
				<param name="filter" kind="value" type="GLenum" input="true" />
			</function>
			<function name="RenderbufferStorageMultisampleEXT" return="void" version="1.5" glxropcode="4331" category="EXT_framebuffer_multisample" alias="RenderbufferStorageMultisample" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetQueryObjecti64vEXT" return="void" offset="?" dlflags="notlistable" category="EXT_timer_query" version="1.5" glxflags="ignore" glxvendorpriv="1328" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int64EXT" input="false" compute="[pname]" />
			</function>
			<function name="GetQueryObjectui64vEXT" return="void" offset="?" dlflags="notlistable" category="EXT_timer_query" version="1.5" glxflags="ignore" glxvendorpriv="1329" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt64EXT" input="false" compute="[pname]" />
			</function>
			<function name="ProgramEnvParameters4fvEXT" return="void" offset="?" version="1.2" glxropcode="4281" category="EXT_gpu_program_parameters" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[count*4]" />
			</function>
			<function name="ProgramLocalParameters4fvEXT" return="void" offset="?" version="1.2" glxropcode="4282" category="EXT_gpu_program_parameters" >
				<param name="target" kind="value" type="ProgramTargetARB" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[count*4]" />
			</function>
			<function name="BufferParameteriAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_flush_buffer_range" version="1.5" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="value" type="Int32" input="true" />
			</function>
			<function name="FlushMappedBufferRangeAPPLE" return="void" glxropcode="?" category="APPLE_flush_buffer_range" glxflags="ignore" version="1.5" alias="FlushMappedBufferRange" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="ProgramLocalParameterI4iNV" return="void" vectorequiv="ProgramLocalParameterI4ivNV" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxvectorequiv="ProgramLocalParameterI4ivNV" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
				<param name="w" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramLocalParameterI4ivNV" return="void" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="ProgramLocalParametersI4ivNV" return="void" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[count*4]" />
			</function>
			<function name="ProgramLocalParameterI4uiNV" return="void" vectorequiv="ProgramLocalParameterI4uivNV" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxvectorequiv="ProgramLocalParameterI4uivNV" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
				<param name="z" kind="value" type="UInt32" input="true" />
				<param name="w" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramLocalParameterI4uivNV" return="void" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="ProgramLocalParametersI4uivNV" return="void" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[count*4]" />
			</function>
			<function name="ProgramEnvParameterI4iNV" return="void" vectorequiv="ProgramEnvParameterI4ivNV" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxvectorequiv="ProgramEnvParameterI4ivNV" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
				<param name="w" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramEnvParameterI4ivNV" return="void" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="ProgramEnvParametersI4ivNV" return="void" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[count*4]" />
			</function>
			<function name="ProgramEnvParameterI4uiNV" return="void" vectorequiv="ProgramEnvParameterI4uivNV" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxvectorequiv="ProgramEnvParameterI4uivNV" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
				<param name="z" kind="value" type="UInt32" input="true" />
				<param name="w" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramEnvParameterI4uivNV" return="void" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="ProgramEnvParametersI4uivNV" return="void" extension="soft" glfflags="ignore" version="1.3" category="NV_gpu_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[count*4]" />
			</function>
			<function name="GetProgramLocalParameterIivNV" return="void" extension="soft" glfflags="ignore" category="NV_gpu_program4" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[4]" />
			</function>
			<function name="GetProgramLocalParameterIuivNV" return="void" extension="soft" glfflags="ignore" category="NV_gpu_program4" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[4]" />
			</function>
			<function name="GetProgramEnvParameterIivNV" return="void" extension="soft" glfflags="ignore" category="NV_gpu_program4" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[4]" />
			</function>
			<function name="GetProgramEnvParameterIuivNV" return="void" extension="soft" glfflags="ignore" category="NV_gpu_program4" dlflags="notlistable" version="1.3" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[4]" />
			</function>
			<function name="ProgramVertexLimitNV" return="void" extension="soft" glfflags="ignore" version="2.0" category="NV_geometry_program4" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="limit" kind="value" type="Int32" input="true" />
			</function>
			<function name="FramebufferTextureEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="NV_geometry_program4" glxflags="ignore" alias="FramebufferTextureARB" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="FramebufferTextureLayerEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="NV_geometry_program4" glxflags="ignore" alias="FramebufferTextureLayer" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="layer" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="FramebufferTextureFaceEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="NV_geometry_program4" glxflags="ignore" alias="FramebufferTextureFaceARB" >
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="face" kind="value" type="TextureTarget" input="true" />
			</function>
			<function name="ProgramParameteriEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_geometry_shader4" glxflags="ignore" alias="ProgramParameteriARB" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="ProgramParameterPName" input="true" />
				<param name="value" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI1iEXT" return="void" vectorequiv="VertexAttribI1ivEXT" extension="soft" glfflags="ignore" glxflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxvectorequiv="VertexAttribI1ivEXT" alias="VertexAttribI1i" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI2iEXT" return="void" vectorequiv="VertexAttribI2ivEXT" extension="soft" glfflags="ignore" glxflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxvectorequiv="VertexAttribI2ivEXT" alias="VertexAttribI2i" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI3iEXT" return="void" vectorequiv="VertexAttribI3ivEXT" extension="soft" glfflags="ignore" glxflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxvectorequiv="VertexAttribI3ivEXT" alias="VertexAttribI3i" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI4iEXT" return="void" vectorequiv="VertexAttribI4ivEXT" extension="soft" glfflags="ignore" glxflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxvectorequiv="VertexAttribI4ivEXT" alias="VertexAttribI4i" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
				<param name="w" kind="value" type="Int32" input="true" />
			</function>
			<function name="VertexAttribI1uiEXT" return="void" vectorequiv="VertexAttribI1uivEXT" extension="soft" glfflags="ignore" glxflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxvectorequiv="VertexAttribI1uivEXT" alias="VertexAttribI1ui" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribI2uiEXT" return="void" vectorequiv="VertexAttribI2uivEXT" extension="soft" glfflags="ignore" glxflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxvectorequiv="VertexAttribI2uivEXT" alias="VertexAttribI2ui" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribI3uiEXT" return="void" vectorequiv="VertexAttribI3uivEXT" extension="soft" glfflags="ignore" glxflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxvectorequiv="VertexAttribI3uivEXT" alias="VertexAttribI3ui" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
				<param name="z" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribI4uiEXT" return="void" vectorequiv="VertexAttribI4uivEXT" extension="soft" glfflags="ignore" glxflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxvectorequiv="VertexAttribI4uivEXT" alias="VertexAttribI4ui" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
				<param name="z" kind="value" type="UInt32" input="true" />
				<param name="w" kind="value" type="UInt32" input="true" />
			</function>
			<function name="VertexAttribI1ivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI1iv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribI2ivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI2iv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[2]" />
			</function>
			<function name="VertexAttribI3ivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI3iv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[3]" />
			</function>
			<function name="VertexAttribI4ivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI4iv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI1uivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI1uiv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribI2uivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI2uiv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[2]" />
			</function>
			<function name="VertexAttribI3uivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI3uiv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[3]" />
			</function>
			<function name="VertexAttribI4uivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI4uiv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI4bvEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI4bv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI4svEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI4sv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI4ubvEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI4ubv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt8" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribI4usvEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" beginend="allow-inside" glxflags="ignore" alias="VertexAttribI4usv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt16" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribIPointerEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" dlflags="notlistable" glxflags="ignore" alias="VertexAttribIPointer" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexAttribEnum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="GetVertexAttribIivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" dlflags="notlistable" glxflags="ignore" alias="GetVertexAttribIiv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="GetVertexAttribIuivEXT" return="void" extension="soft" glfflags="ignore" category="NV_vertex_program4" dlflags="notlistable" glxflags="ignore" alias="GetVertexAttribIuiv" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexAttribEnum" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[1]" />
			</function>
			<function name="GetUniformuivEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" category="EXT_gpu_shader4" glxflags="ignore" version="2.0" alias="GetUniformuiv" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(program/location)]" />
			</function>
			<function name="BindFragDataLocationEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" category="EXT_gpu_shader4" glxflags="ignore" version="2.0" alias="BindFragDataLocation" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="color" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="GetFragDataLocationEXT" return="Int32" extension="soft" glfflags="ignore" dlflags="notlistable" category="EXT_gpu_shader4" glxflags="ignore" version="2.0" alias="GetFragDataLocation" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="Uniform1uiEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_gpu_shader4" glxflags="ignore" alias="Uniform1ui" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform2uiEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_gpu_shader4" glxflags="ignore" alias="Uniform2ui" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform3uiEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_gpu_shader4" glxflags="ignore" alias="Uniform3ui" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
				<param name="v2" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform4uiEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_gpu_shader4" glxflags="ignore" alias="Uniform4ui" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
				<param name="v2" kind="value" type="UInt32" input="true" />
				<param name="v3" kind="value" type="UInt32" input="true" />
			</function>
			<function name="Uniform1uivEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_gpu_shader4" glxflags="ignore" alias="Uniform1uiv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count]" />
			</function>
			<function name="Uniform2uivEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_gpu_shader4" glxflags="ignore" alias="Uniform2uiv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*2]" />
			</function>
			<function name="Uniform3uivEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_gpu_shader4" glxflags="ignore" alias="Uniform3uiv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*3]" />
			</function>
			<function name="Uniform4uivEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_gpu_shader4" glxflags="ignore" alias="Uniform4uiv" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*4]" />
			</function>
			<function name="DrawArraysInstancedEXT" return="void" vectorequiv="ArrayElement" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_draw_instanced" glxflags="ignore" alias="DrawArraysInstancedARB" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="start" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DrawElementsInstancedEXT" return="void" vectorequiv="ArrayElement" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_draw_instanced" glxflags="ignore" alias="DrawElementsInstancedARB" >
				<param name="mode" kind="value" type="BeginMode" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="DrawElementsType" input="true" />
				<param name="indices" kind="array" type="Void" input="true" compute="[COMPSIZE(count/type)]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TexBufferEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_texture_buffer_object" glxflags="ignore" alias="TexBufferARB" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="internalformat" kind="value" type="GLenum" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DepthRangedNV" return="void" extension="soft" glfflags="ignore" category="NV_depth_buffer_float" version="2.0" glxflags="ignore" >
				<param name="zNear" kind="value" type="Float64" input="true" />
				<param name="zFar" kind="value" type="Float64" input="true" />
			</function>
			<function name="ClearDepthdNV" return="void" extension="soft" glfflags="ignore" category="NV_depth_buffer_float" version="2.0" glxflags="ignore" >
				<param name="depth" kind="value" type="Float64" input="true" />
			</function>
			<function name="DepthBoundsdNV" return="void" extension="soft" glfflags="ignore" category="NV_depth_buffer_float" version="2.0" glxflags="ignore" >
				<param name="zmin" kind="value" type="Float64" input="true" />
				<param name="zmax" kind="value" type="Float64" input="true" />
			</function>
			<function name="RenderbufferStorageMultisampleCoverageNV" return="void" extension="soft" glfflags="ignore" version="1.5" category="NV_framebuffer_multisample_coverage" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="RenderbufferTarget" input="true" />
				<param name="coverageSamples" kind="value" type="SizeI" input="true" />
				<param name="colorSamples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="ProgramBufferParametersfvNV" return="void" extension="soft" glfflags="ignore" version="1.2" category="NV_parameter_buffer_object" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ProgramBufferParametersIivNV" return="void" extension="soft" glfflags="ignore" version="1.2" category="NV_parameter_buffer_object" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="ProgramBufferParametersIuivNV" return="void" extension="soft" glfflags="ignore" version="1.2" category="NV_parameter_buffer_object" glxflags="ignore" >
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[count]" />
			</function>
			<function name="ColorMaskIndexedEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_draw_buffers2" glxflags="ignore" alias="ColorMaski" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="r" kind="value" type="Boolean" input="true" />
				<param name="g" kind="value" type="Boolean" input="true" />
				<param name="b" kind="value" type="Boolean" input="true" />
				<param name="a" kind="value" type="Boolean" input="true" />
			</function>
			<function name="GetBooleanIndexedvEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_draw_buffers2" glxflags="ignore" alias="GetBooleani_v" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Boolean" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetIntegerIndexedvEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_draw_buffers2" glxflags="ignore" alias="GetIntegeri_v" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Int32" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="EnableIndexedEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_draw_buffers2" glxflags="ignore" alias="Enablei" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DisableIndexedEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_draw_buffers2" glxflags="ignore" alias="Disablei" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="IsEnabledIndexedEXT" return="Boolean" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_draw_buffers2" glxflags="ignore" alias="IsEnabledi" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BeginTransformFeedbackNV" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="1.5" category="NV_transform_feedback" glxflags="ignore" alias="BeginTransformFeedback" >
				<param name="primitiveMode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="EndTransformFeedbackNV" return="void" extension="soft" glfflags="ignore" glxflags="ignore" version="1.5" category="NV_transform_feedback" dlflags="notlistable" alias="EndTransformFeedback" />
			<function name="TransformFeedbackAttribsNV" return="void" extension="soft" glfflags="ignore" version="1.5" category="NV_transform_feedback" dlflags="notlistable" glxflags="ignore" >
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="attribs" kind="array" type="Int32" input="true" compute="[COMPSIZE(count)]" />
				<param name="bufferMode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BindBufferRangeNV" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="1.5" category="NV_transform_feedback" glxflags="ignore" alias="BindBufferRange" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="BindBufferOffsetNV" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="1.5" category="NV_transform_feedback" glxflags="ignore" alias="BindBufferOffsetEXT" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="BindBufferBaseNV" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="1.5" category="NV_transform_feedback" glxflags="ignore" alias="BindBufferBase" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="TransformFeedbackVaryingsNV" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="1.5" category="NV_transform_feedback" glxflags="ignore" alias="TransformFeedbackVaryings" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="locations" kind="array" type="Int32" input="true" compute="[count]" />
				<param name="bufferMode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="ActiveVaryingNV" return="void" extension="soft" glfflags="ignore" version="1.5" category="NV_transform_feedback" dlflags="notlistable" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="GetVaryingLocationNV" return="Int32" extension="soft" glfflags="ignore" category="NV_transform_feedback" dlflags="notlistable" version="1.5" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="name" kind="array" type="Char" input="true" compute="[COMPSIZE(name)]" />
			</function>
			<function name="GetActiveVaryingNV" return="void" extension="soft" glfflags="ignore" category="NV_transform_feedback" dlflags="notlistable" version="1.5" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="size" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="type" kind="array" type="GLenum" input="false" compute="[1]" />
				<param name="name" kind="array" type="Char" input="false" compute="[COMPSIZE(program/index/bufSize)]" />
			</function>
			<function name="GetTransformFeedbackVaryingNV" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" category="NV_transform_feedback" glxflags="ignore" version="1.5" alias="GetTransformFeedbackVarying" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="location" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="TransformFeedbackStreamAttribsNV" return="void" offset="?" glxropcode="?" category="NV_transform_feedback" version="4.1" glxflags="ignore" >
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="attribs" kind="array" type="Int32" input="true" compute="[count]" />
				<param name="nbuffers" kind="value" type="SizeI" input="true" />
				<param name="bufstreams" kind="array" type="Int32" input="true" compute="[nbuffers]" />
				<param name="bufferMode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="UniformBufferEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_bindable_uniform" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetUniformBufferSizeEXT" return="Int32" extension="soft" glfflags="ignore" category="EXT_bindable_uniform" dlflags="notlistable" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
			</function>
			<function name="GetUniformOffsetEXT" return="BufferOffset" extension="soft" glfflags="ignore" category="EXT_bindable_uniform" dlflags="notlistable" version="2.0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
			</function>
			<function name="TexParameterIivEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_texture_integer" glxflags="ignore" alias="TexParameterIiv" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TexParameterIuivEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_texture_integer" glxflags="ignore" alias="TexParameterIuiv" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexParameterIivEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" category="EXT_texture_integer" glxflags="ignore" version="2.0" alias="GetTexParameterIiv" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTexParameterIuivEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" category="EXT_texture_integer" glxflags="ignore" version="2.0" alias="GetTexParameterIuiv" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ClearColorIiEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_texture_integer" glxflags="ignore" >
				<param name="red" kind="value" type="Int32" input="true" />
				<param name="green" kind="value" type="Int32" input="true" />
				<param name="blue" kind="value" type="Int32" input="true" />
				<param name="alpha" kind="value" type="Int32" input="true" />
			</function>
			<function name="ClearColorIuiEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_texture_integer" glxflags="ignore" >
				<param name="red" kind="value" type="UInt32" input="true" />
				<param name="green" kind="value" type="UInt32" input="true" />
				<param name="blue" kind="value" type="UInt32" input="true" />
				<param name="alpha" kind="value" type="UInt32" input="true" />
			</function>
			<function name="FrameTerminatorGREMEDY" return="void" offset="?" category="GREMEDY_frame_terminator" version="1.0" glxflags="ignore" />
			<function name="BeginConditionalRenderNV" return="void" glxflags="ignore" category="NV_conditional_render" glfflags="ignore" alias="BeginConditionalRender" >
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="mode" kind="value" type="TypeEnum" input="true" />
			</function>
			<function name="EndConditionalRenderNV" return="void" glxflags="ignore" category="NV_conditional_render" alias="EndConditionalRender" glfflags="ignore" />
			<function name="PresentFrameKeyedNV" return="void" offset="?" glxropcode="?" category="NV_present_video" version="1.2" glxflags="ignore" >
				<param name="video_slot" kind="value" type="UInt32" input="true" />
				<param name="minPresentTime" kind="value" type="UInt64EXT" input="true" />
				<param name="beginPresentTimeId" kind="value" type="UInt32" input="true" />
				<param name="presentDurationId" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="target0" kind="value" type="GLenum" input="true" />
				<param name="fill0" kind="value" type="UInt32" input="true" />
				<param name="key0" kind="value" type="UInt32" input="true" />
				<param name="target1" kind="value" type="GLenum" input="true" />
				<param name="fill1" kind="value" type="UInt32" input="true" />
				<param name="key1" kind="value" type="UInt32" input="true" />
			</function>
			<function name="PresentFrameDualFillNV" return="void" offset="?" glxropcode="?" category="NV_present_video" version="1.2" glxflags="ignore" >
				<param name="video_slot" kind="value" type="UInt32" input="true" />
				<param name="minPresentTime" kind="value" type="UInt64EXT" input="true" />
				<param name="beginPresentTimeId" kind="value" type="UInt32" input="true" />
				<param name="presentDurationId" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="target0" kind="value" type="GLenum" input="true" />
				<param name="fill0" kind="value" type="UInt32" input="true" />
				<param name="target1" kind="value" type="GLenum" input="true" />
				<param name="fill1" kind="value" type="UInt32" input="true" />
				<param name="target2" kind="value" type="GLenum" input="true" />
				<param name="fill2" kind="value" type="UInt32" input="true" />
				<param name="target3" kind="value" type="GLenum" input="true" />
				<param name="fill3" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetVideoivNV" return="void" offset="?" dlflags="notlistable" category="NV_present_video" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="video_slot" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVideouivNV" return="void" offset="?" dlflags="notlistable" category="NV_present_video" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="video_slot" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVideoi64vNV" return="void" offset="?" dlflags="notlistable" category="NV_present_video" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="video_slot" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int64EXT" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVideoui64vNV" return="void" offset="?" dlflags="notlistable" category="NV_present_video" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="video_slot" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt64EXT" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="BeginTransformFeedbackEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_transform_feedback" glxflags="ignore" alias="BeginTransformFeedback" >
				<param name="primitiveMode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="EndTransformFeedbackEXT" return="void" extension="soft" glfflags="ignore" glxflags="ignore" version="2.0" category="EXT_transform_feedback" dlflags="notlistable" alias="EndTransformFeedback" />
			<function name="BindBufferRangeEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_transform_feedback" glxflags="ignore" alias="BindBufferRange" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
				<param name="size" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="BindBufferOffsetEXT" return="void" extension="soft" glfflags="ignore" version="2.0" category="EXT_transform_feedback" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="BindBufferBaseEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_transform_feedback" glxflags="ignore" alias="BindBufferBase" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="TransformFeedbackVaryingsEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" version="2.0" category="EXT_transform_feedback" glxflags="ignore" alias="TransformFeedbackVaryings" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="varyings" kind="array" type="CharPointer" input="true" compute="[count]" />
				<param name="bufferMode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="GetTransformFeedbackVaryingEXT" return="void" extension="soft" glfflags="ignore" dlflags="notlistable" category="EXT_transform_feedback" glxflags="ignore" version="2.0" alias="GetTransformFeedbackVarying" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="size" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="type" kind="array" type="GLenum" input="false" compute="[1]" />
				<param name="name" kind="array" type="Char" input="false" compute="[COMPSIZE(length)]" />
			</function>
			<function name="ClientAttribDefaultEXT" return="void" dlflags="notlistable" category="EXT_direct_state_access" extension="soft" glxflags="ignore" >
				<param name="mask" kind="value" type="ClientAttribMask" input="true" />
			</function>
			<function name="PushClientAttribDefaultEXT" return="void" dlflags="notlistable" category="EXT_direct_state_access" extension="soft" glxflags="ignore" >
				<param name="mask" kind="value" type="ClientAttribMask" input="true" />
			</function>
			<function name="MatrixLoadfEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="MatrixLoaddEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="MatrixMultfEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="MatrixMultdEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="MatrixLoadIdentityEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
			</function>
			<function name="MatrixRotatefEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="angle" kind="value" type="Float32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="MatrixRotatedEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="angle" kind="value" type="Float64" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="MatrixScalefEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="MatrixScaledEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="MatrixTranslatefEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
			</function>
			<function name="MatrixTranslatedEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="MatrixFrustumEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="left" kind="value" type="Float64" input="true" />
				<param name="right" kind="value" type="Float64" input="true" />
				<param name="bottom" kind="value" type="Float64" input="true" />
				<param name="top" kind="value" type="Float64" input="true" />
				<param name="zNear" kind="value" type="Float64" input="true" />
				<param name="zFar" kind="value" type="Float64" input="true" />
			</function>
			<function name="MatrixOrthoEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="left" kind="value" type="Float64" input="true" />
				<param name="right" kind="value" type="Float64" input="true" />
				<param name="bottom" kind="value" type="Float64" input="true" />
				<param name="top" kind="value" type="Float64" input="true" />
				<param name="zNear" kind="value" type="Float64" input="true" />
				<param name="zFar" kind="value" type="Float64" input="true" />
			</function>
			<function name="MatrixPopEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
			</function>
			<function name="MatrixPushEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
			</function>
			<function name="MatrixLoadTransposefEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="MatrixLoadTransposedEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="MatrixMultTransposefEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="m" kind="array" type="Float32" input="true" compute="[16]" />
			</function>
			<function name="MatrixMultTransposedEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="mode" kind="value" type="MatrixMode" input="true" />
				<param name="m" kind="array" type="Float64" input="true" compute="[16]" />
			</function>
			<function name="TextureParameterfEXT" return="void" vectorequiv="TextureParameterfvEXT" extension="soft" glfflags="ignore" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="TextureParameterfvEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TextureParameteriEXT" return="void" vectorequiv="TextureParameterivEXT" extension="soft" glfflags="ignore" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="TextureParameterivEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TextureImage1DEXT" return="void" extension="soft" glfflags="capture-handcode" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="TextureImage2DEXT" return="void" extension="soft" glfflags="capture-handcode" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="TextureSubImage1DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="TextureSubImage2DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="CopyTextureImage1DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="CopyTextureImage2DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="CopyTextureSubImage1DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="CopyTextureSubImage2DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetTextureImageEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="false" compute="[COMPSIZE(target/level/format/type)]" />
			</function>
			<function name="GetTextureParameterfvEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTextureParameterivEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTextureLevelParameterfvEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTextureLevelParameterivEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TextureImage3DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth)]" />
			</function>
			<function name="TextureSubImage3DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth)]" />
			</function>
			<function name="CopyTextureSubImage3DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" glfflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="MultiTexParameterfEXT" return="void" vectorequiv="MultiTexParameterfvEXT" extension="soft" glfflags="ignore" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="MultiTexParameterfvEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexParameteriEXT" return="void" vectorequiv="MultiTexParameterivEXT" extension="soft" glfflags="ignore" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="MultiTexParameterivEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexImage1DEXT" return="void" extension="soft" glfflags="capture-handcode" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="MultiTexImage2DEXT" return="void" extension="soft" glfflags="capture-handcode" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="MultiTexSubImage1DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width)]" />
			</function>
			<function name="MultiTexSubImage2DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height)]" />
			</function>
			<function name="CopyMultiTexImage1DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="CopyMultiTexImage2DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="CopyMultiTexSubImage1DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
			</function>
			<function name="CopyMultiTexSubImage2DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetMultiTexImageEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="false" compute="[COMPSIZE(target/level/format/type)]" />
			</function>
			<function name="GetMultiTexParameterfvEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexParameterivEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexLevelParameterfvEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexLevelParameterivEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexImage3DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth)]" />
			</function>
			<function name="MultiTexSubImage3DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="type" kind="value" type="PixelType" input="true" />
				<param name="pixels" kind="array" type="Void" input="true" compute="[COMPSIZE(format/type/width/height/depth)]" />
			</function>
			<function name="CopyMultiTexSubImage3DEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" glfflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="x" kind="value" type="WinCoord" input="true" />
				<param name="y" kind="value" type="WinCoord" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="BindMultiTextureEXT" return="void" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
			</function>
			<function name="EnableClientStateIndexedEXT" return="void" dlflags="notlistable" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="array" kind="value" type="EnableCap" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DisableClientStateIndexedEXT" return="void" dlflags="notlistable" category="EXT_direct_state_access" extension="soft" glxflags="ignore" >
				<param name="array" kind="value" type="EnableCap" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EnableClientStateiEXT" return="void" dlflags="notlistable" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="array" kind="value" type="EnableCap" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DisableClientStateiEXT" return="void" dlflags="notlistable" category="EXT_direct_state_access" extension="soft" glxflags="ignore" >
				<param name="array" kind="value" type="EnableCap" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MultiTexCoordPointerEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="TexCoordPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[COMPSIZE(size/type/stride)] retained" />
			</function>
			<function name="MultiTexEnvfEXT" return="void" vectorequiv="MultiTexEnvfvEXT" extension="soft" glfflags="gl-enum" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="MultiTexEnvfvEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="gl-enum" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexEnviEXT" return="void" vectorequiv="MultiTexEnvivEXT" extension="soft" glfflags="gl-enum" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="MultiTexEnvivEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="gl-enum" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexGendEXT" return="void" vectorequiv="MultiTexGendvEXT" extension="soft" glfflags="gl-enum" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="param" kind="value" type="Float64" input="true" />
			</function>
			<function name="MultiTexGendvEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="gl-enum" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="Float64" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexGenfEXT" return="void" vectorequiv="MultiTexGenfvEXT" extension="soft" glfflags="gl-enum" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="param" kind="value" type="CheckedFloat32" input="true" />
			</function>
			<function name="MultiTexGenfvEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="gl-enum" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="CheckedFloat32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexGeniEXT" return="void" vectorequiv="MultiTexGenivEXT" extension="soft" glfflags="gl-enum" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="param" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="MultiTexGenivEXT" return="void" category="EXT_direct_state_access" extension="soft" glxflags="ignore" glfflags="gl-enum" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexEnvfvEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexEnvivEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureEnvTarget" input="true" />
				<param name="pname" kind="value" type="TextureEnvParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexGendvEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexGenfvEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexGenivEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="coord" kind="value" type="TextureCoordName" input="true" />
				<param name="pname" kind="value" type="TextureGenParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetFloatIndexedvEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="TypeEnum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Float32" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetDoubleIndexedvEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="TypeEnum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Float64" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetPointerIndexedvEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="TypeEnum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="VoidPointer" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetFloati_vEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="TypeEnum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Float32" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetDoublei_vEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="TypeEnum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="Float64" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="GetPointeri_vEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="target" kind="value" type="TypeEnum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="data" kind="array" type="VoidPointer" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="CompressedTextureImage3DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTextureImage2DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTextureImage1DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTextureSubImage3DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTextureSubImage2DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedTextureSubImage1DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="GetCompressedTextureImageEXT" return="void" dlflags="notlistable" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="lod" kind="value" type="CheckedInt32" input="true" />
				<param name="img" kind="array" type="Void" input="false" compute="[COMPSIZE(target/lod)]" />
			</function>
			<function name="CompressedMultiTexImage3DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedMultiTexImage2DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedMultiTexImage1DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="internalformat" kind="value" type="TextureInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="border" kind="value" type="CheckedInt32" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedMultiTexSubImage3DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedMultiTexSubImage2DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="yoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="CompressedMultiTexSubImage1DEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="handcode" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="xoffset" kind="value" type="CheckedInt32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="format" kind="value" type="PixelFormat" input="true" />
				<param name="imageSize" kind="value" type="SizeI" input="true" />
				<param name="bits" kind="array" type="Void" input="true" compute="[imageSize]" />
			</function>
			<function name="GetCompressedMultiTexImageEXT" return="void" dlflags="notlistable" extension="soft" category="EXT_direct_state_access" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="lod" kind="value" type="CheckedInt32" input="true" />
				<param name="img" kind="array" type="Void" input="false" compute="[COMPSIZE(target/lod)]" />
			</function>
			<function name="NamedProgramStringEXT" return="void" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" subcategory="ARB_vertex_program" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="format" kind="value" type="ProgramFormat" input="true" />
				<param name="len" kind="value" type="SizeI" input="true" />
				<param name="string" kind="array" type="Void" input="true" compute="[len]" />
			</function>
			<function name="NamedProgramLocalParameter4dEXT" return="void" vectorequiv="NamedProgramLocalParameter4dvEXT" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" subcategory="ARB_vertex_program" glxvectorequiv="NamedProgramLocalParameter4dvEXT" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="NamedProgramLocalParameter4dvEXT" return="void" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" subcategory="ARB_vertex_program" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="NamedProgramLocalParameter4fEXT" return="void" vectorequiv="NamedProgramLocalParameter4fvEXT" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" subcategory="ARB_vertex_program" glxvectorequiv="NamedProgramLocalParameter4fvEXT" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
				<param name="z" kind="value" type="Float32" input="true" />
				<param name="w" kind="value" type="Float32" input="true" />
			</function>
			<function name="NamedProgramLocalParameter4fvEXT" return="void" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" subcategory="ARB_vertex_program" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[4]" />
			</function>
			<function name="GetNamedProgramLocalParameterdvEXT" return="void" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" subcategory="ARB_vertex_program" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[4]" />
			</function>
			<function name="GetNamedProgramLocalParameterfvEXT" return="void" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" subcategory="ARB_vertex_program" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="GetNamedProgramivEXT" return="void" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" subcategory="ARB_vertex_program" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="pname" kind="value" type="ProgramProperty" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="GetNamedProgramStringEXT" return="void" extension="soft" glextmask="GL_MASK_ARB_vertex_program|GL_MASK_ARB_fragment_program" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" subcategory="ARB_vertex_program" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="pname" kind="value" type="ProgramStringProperty" input="true" />
				<param name="string" kind="array" type="Void" input="false" compute="[COMPSIZE(program,pname)]" />
			</function>
			<function name="NamedProgramLocalParameters4fvEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_gpu_program_parameters" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_program_parameters" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[count*4]" />
			</function>
			<function name="NamedProgramLocalParameterI4iEXT" return="void" vectorequiv="NamedProgramLocalParameterI4ivEXT" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" subcategory="NV_gpu_program4" glxvectorequiv="NamedProgramLocalParameterI4ivEXT" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int32" input="true" />
				<param name="y" kind="value" type="Int32" input="true" />
				<param name="z" kind="value" type="Int32" input="true" />
				<param name="w" kind="value" type="Int32" input="true" />
			</function>
			<function name="NamedProgramLocalParameterI4ivEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" subcategory="NV_gpu_program4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[4]" />
			</function>
			<function name="NamedProgramLocalParametersI4ivEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" subcategory="NV_gpu_program4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[count*4]" />
			</function>
			<function name="NamedProgramLocalParameterI4uiEXT" return="void" vectorequiv="NamedProgramLocalParameterI4uivEXT" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" subcategory="NV_gpu_program4" glxvectorequiv="NamedProgramLocalParameterI4uivEXT" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt32" input="true" />
				<param name="y" kind="value" type="UInt32" input="true" />
				<param name="z" kind="value" type="UInt32" input="true" />
				<param name="w" kind="value" type="UInt32" input="true" />
			</function>
			<function name="NamedProgramLocalParameterI4uivEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" subcategory="NV_gpu_program4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[4]" />
			</function>
			<function name="NamedProgramLocalParametersI4uivEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" subcategory="NV_gpu_program4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[count*4]" />
			</function>
			<function name="GetNamedProgramLocalParameterIivEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" subcategory="NV_gpu_program4" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[4]" />
			</function>
			<function name="GetNamedProgramLocalParameterIuivEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" subcategory="NV_gpu_program4" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="ProgramTarget" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[4]" />
			</function>
			<function name="TextureParameterIivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_integer" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_texture_integer" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="TextureParameterIuivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_integer" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_texture_integer" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTextureParameterIivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_integer" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_texture_integer" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetTextureParameterIuivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_integer" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_texture_integer" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexParameterIivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_integer" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_texture_integer" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="CheckedInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="MultiTexParameterIuivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_integer" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_texture_integer" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="TextureParameterName" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexParameterIivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_integer" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_texture_integer" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetMultiTexParameterIuivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_integer" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_texture_integer" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="pname" kind="value" type="GetTextureParameter" input="true" />
				<param name="params" kind="array" type="UInt32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="ProgramUniform1fEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramUniform2fEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramUniform3fEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
				<param name="v2" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramUniform4fEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Float32" input="true" />
				<param name="v1" kind="value" type="Float32" input="true" />
				<param name="v2" kind="value" type="Float32" input="true" />
				<param name="v3" kind="value" type="Float32" input="true" />
			</function>
			<function name="ProgramUniform1iEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramUniform2iEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramUniform3iEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
				<param name="v2" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramUniform4iEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="Int32" input="true" />
				<param name="v1" kind="value" type="Int32" input="true" />
				<param name="v2" kind="value" type="Int32" input="true" />
				<param name="v3" kind="value" type="Int32" input="true" />
			</function>
			<function name="ProgramUniform1fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniform2fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*2]" />
			</function>
			<function name="ProgramUniform3fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*3]" />
			</function>
			<function name="ProgramUniform4fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*4]" />
			</function>
			<function name="ProgramUniform1ivEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniform2ivEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count*2]" />
			</function>
			<function name="ProgramUniform3ivEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count*3]" />
			</function>
			<function name="ProgramUniform4ivEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[count*4]" />
			</function>
			<function name="ProgramUniformMatrix2fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*4]" />
			</function>
			<function name="ProgramUniformMatrix3fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*9]" />
			</function>
			<function name="ProgramUniformMatrix4fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_0" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*16]" />
			</function>
			<function name="ProgramUniformMatrix2x3fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*6]" />
			</function>
			<function name="ProgramUniformMatrix3x2fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*6]" />
			</function>
			<function name="ProgramUniformMatrix2x4fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*8]" />
			</function>
			<function name="ProgramUniformMatrix4x2fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*8]" />
			</function>
			<function name="ProgramUniformMatrix3x4fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*12]" />
			</function>
			<function name="ProgramUniformMatrix4x3fvEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="VERSION_2_1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[count*12]" />
			</function>
			<function name="ProgramUniform1uiEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_shader4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform2uiEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_shader4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform3uiEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_shader4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
				<param name="v2" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform4uiEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_shader4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="v0" kind="value" type="UInt32" input="true" />
				<param name="v1" kind="value" type="UInt32" input="true" />
				<param name="v2" kind="value" type="UInt32" input="true" />
				<param name="v3" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform1uivEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_shader4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniform2uivEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_shader4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*2]" />
			</function>
			<function name="ProgramUniform3uivEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_shader4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*3]" />
			</function>
			<function name="ProgramUniform4uivEXT" return="void" extension="soft" glextmask="GL_MASK_OpenGL_2_0" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_gpu_shader4" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt32" input="true" compute="[count*4]" />
			</function>
			<function name="NamedBufferDataEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Sizeiptr" input="true" />
				<param name="data" kind="array" type="Void" input="true" compute="[COMPSIZE(size)]" />
				<param name="usage" kind="value" type="VertexBufferObjectUsage" input="true" />
			</function>
			<function name="NamedBufferSubDataEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="Intptr" input="true" />
				<param name="size" kind="value" type="Sizeiptr" input="true" />
				<param name="data" kind="array" type="Void" input="true" compute="[COMPSIZE(size)]" />
			</function>
			<function name="MapNamedBufferEXT" return="VoidPointer" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="access" kind="value" type="VertexBufferObjectAccess" input="true" />
			</function>
			<function name="UnmapNamedBufferEXT" return="Boolean" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MapNamedBufferRangeEXT" return="VoidPointer" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="Intptr" input="true" />
				<param name="length" kind="value" type="Sizeiptr" input="true" />
				<param name="access" kind="value" type="BufferAccessMask" input="true" />
			</function>
			<function name="FlushMappedNamedBufferRangeEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="Intptr" input="true" />
				<param name="length" kind="value" type="Sizeiptr" input="true" />
			</function>
			<function name="NamedCopyBufferSubDataEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="readBuffer" kind="value" type="UInt32" input="true" />
				<param name="writeBuffer" kind="value" type="UInt32" input="true" />
				<param name="readOffset" kind="value" type="Intptr" input="true" />
				<param name="writeOffset" kind="value" type="Intptr" input="true" />
				<param name="size" kind="value" type="Sizeiptr" input="true" />
			</function>
			<function name="GetNamedBufferParameterivEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexBufferObjectParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetNamedBufferPointervEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="VertexBufferObjectParameter" input="true" />
				<param name="params" kind="array" type="VoidPointer" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetNamedBufferSubDataEXT" return="void" extension="soft" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="offset" kind="value" type="Intptr" input="true" />
				<param name="size" kind="value" type="Sizeiptr" input="true" />
				<param name="data" kind="array" type="Void" input="false" compute="[COMPSIZE(size)]" />
			</function>
			<function name="TextureBufferEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_buffer_object" glfflags="ignore" category="EXT_direct_state_access" glxflags="ignore" subcategory="EXT_texture_buffer_object" dlflags="notlistable" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="internalformat" kind="value" type="TypeEnum" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MultiTexBufferEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_texture_buffer_object" glfflags="ignore" category="EXT_direct_state_access" glxflags="ignore" subcategory="EXT_texture_buffer_object" dlflags="notlistable" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="internalformat" kind="value" type="TypeEnum" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="NamedRenderbufferStorageEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="renderbuffer" kind="value" type="Renderbuffer" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetNamedRenderbufferParameterivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="renderbuffer" kind="value" type="Renderbuffer" input="true" />
				<param name="pname" kind="value" type="RenderbufferParameterName" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="CheckNamedFramebufferStatusEXT" return="FramebufferStatus" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="target" kind="value" type="FramebufferTarget" input="true" />
			</function>
			<function name="NamedFramebufferTexture1DEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="TextureTarget" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="NamedFramebufferTexture2DEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="TextureTarget" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="NamedFramebufferTexture3DEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="textarget" kind="value" type="TextureTarget" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="zoffset" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="NamedFramebufferRenderbufferEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="renderbuffertarget" kind="value" type="RenderbufferTarget" input="true" />
				<param name="renderbuffer" kind="value" type="Renderbuffer" input="true" />
			</function>
			<function name="GetNamedFramebufferAttachmentParameterivEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="pname" kind="value" type="FramebufferAttachmentParameterName" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GenerateTextureMipmapEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
			</function>
			<function name="GenerateMultiTexMipmapEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
			</function>
			<function name="FramebufferDrawBufferEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="mode" kind="value" type="DrawBufferMode" input="true" />
			</function>
			<function name="FramebufferDrawBuffersEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="bufs" kind="array" type="DrawBufferMode" input="true" compute="[n]" />
			</function>
			<function name="FramebufferReadBufferEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_object" glfflags="ignore" category="EXT_direct_state_access" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="mode" kind="value" type="ReadBufferMode" input="true" />
			</function>
			<function name="GetFramebufferParameterivEXT" return="void" extension="soft" glfflags="capture-execute" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_object" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="pname" kind="value" type="GetFramebufferParameter" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="NamedRenderbufferStorageMultisampleEXT" return="void" extension="soft" glextmask="GL_MASK_EXT_framebuffer_multisample" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="EXT_framebuffer_multisample" glxflags="ignore" >
				<param name="renderbuffer" kind="value" type="Renderbuffer" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="NamedRenderbufferStorageMultisampleCoverageEXT" return="void" extension="soft" glextmask="GL_MASK_NV_framebuffer_multisample_coverage" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="NV_framebuffer_multisample_coverage" glxflags="ignore" >
				<param name="renderbuffer" kind="value" type="Renderbuffer" input="true" />
				<param name="coverageSamples" kind="value" type="SizeI" input="true" />
				<param name="colorSamples" kind="value" type="SizeI" input="true" />
				<param name="internalformat" kind="value" type="PixelInternalFormat" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
			</function>
			<function name="NamedFramebufferTextureEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="NV_gpu_program4" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="NamedFramebufferTextureLayerEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="NV_gpu_program4" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="layer" kind="value" type="CheckedInt32" input="true" />
			</function>
			<function name="NamedFramebufferTextureFaceEXT" return="void" extension="soft" glextmask="GL_MASK_NV_gpu_program4" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="NV_gpu_program4" glxflags="ignore" >
				<param name="framebuffer" kind="value" type="Framebuffer" input="true" />
				<param name="attachment" kind="value" type="FramebufferAttachment" input="true" />
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="level" kind="value" type="CheckedInt32" input="true" />
				<param name="face" kind="value" type="TextureTarget" input="true" />
			</function>
			<function name="TextureRenderbufferEXT" return="void" extension="soft" glextmask="GL_MASK_NV_explicit_multisample" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="NV_explicit_multisample" glxflags="ignore" >
				<param name="texture" kind="value" type="Texture" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MultiTexRenderbufferEXT" return="void" extension="soft" glextmask="GL_MASK_NV_explicit_multisample" glfflags="ignore" category="EXT_direct_state_access" dlflags="notlistable" subcategory="NV_explicit_multisample" glxflags="ignore" >
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ProgramUniform1dEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramUniform2dEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramUniform3dEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramUniform4dEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="ProgramUniform1dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniform2dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniform3dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniform4dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix2dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix3dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix4dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix2x3dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix2x4dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix3x2dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix3x4dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix4x2dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformMatrix4x3dvEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_gpu_shader_fp64" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="transpose" kind="value" type="Boolean" input="true" />
				<param name="value" kind="array" type="Float64" input="true" compute="[count]" />
			</function>
			<function name="EnableVertexArrayAttribEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DisableVertexArrayAttribEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EnableVertexArrayEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="array" kind="value" type="EnableCap" input="true" />
			</function>
			<function name="DisableVertexArrayEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="array" kind="value" type="EnableCap" input="true" />
			</function>
			<function name="VertexArrayColorOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="ColorPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayEdgeFlagOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayFogCoordOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="FogPointerTypeEXT" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayIndexOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="IndexPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayMultiTexCoordOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="texunit" kind="value" type="TextureUnit" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="TexCoordPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayNormalOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="type" kind="value" type="NormalPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArraySecondaryColorOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="ColorPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayTexCoordOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="TexCoordPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayVertexOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexPointerType" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayVertexAttribIOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexAttribPointerTypeARB" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="VertexArrayVertexAttribOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="VertexAttribPointerTypeARB" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="GetVertexArrayIntegervEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVertexArrayPointervEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="GetVertexArrayIntegeri_vEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVertexArrayPointeri_vEXT" return="void" offset="?" glxropcode="?" category="EXT_direct_state_access" subcategory="ARB_vertex_array_object" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="param" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="GetMultisamplefvNV" return="void" dlflags="notlistable" category="NV_explicit_multisample" glxflags="ignore" glfflags="ignore" >
				<param name="pname" kind="value" type="GetMultisamplePNameNV" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="val" kind="array" type="Float32" input="false" compute="[2]" />
			</function>
			<function name="SampleMaskIndexedNV" return="void" glfflags="ignore" category="NV_explicit_multisample" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="mask" kind="value" type="SampleMaskNV" input="true" />
			</function>
			<function name="TexRenderbufferNV" return="void" dlflags="notlistable" category="NV_explicit_multisample" glxflags="ignore" glfflags="ignore" >
				<param name="target" kind="value" type="TextureTarget" input="true" />
				<param name="renderbuffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindTransformFeedbackNV" return="void" glfflags="ignore" category="NV_transform_feedback2" glxflags="ignore" >
				<param name="target" kind="value" type="BufferTargetARB" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DeleteTransformFeedbacksNV" return="void" dlflags="notlistable" category="NV_transform_feedback2" glxflags="ignore" glfflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="true" compute="[n]" />
			</function>
			<function name="GenTransformFeedbacksNV" return="void" dlflags="notlistable" category="NV_transform_feedback2" glxflags="ignore" glfflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="IsTransformFeedbackNV" return="Boolean" dlflags="notlistable" category="NV_transform_feedback2" glxflags="ignore" glfflags="ignore" >
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="PauseTransformFeedbackNV" return="void" category="NV_transform_feedback2" glxflags="ignore" glfflags="ignore" />
			<function name="ResumeTransformFeedbackNV" return="void" category="NV_transform_feedback2" glxflags="ignore" glfflags="ignore" />
			<function name="DrawTransformFeedbackNV" return="void" glfflags="ignore" category="NV_transform_feedback2" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetPerfMonitorGroupsAMD" return="void" offset="?" dlflags="notlistable" category="AMD_performance_monitor" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="numGroups" kind="array" type="Int32" input="false" compute="[1]" />
				<param name="groupsSize" kind="value" type="SizeI" input="true" />
				<param name="groups" kind="array" type="UInt32" input="false" compute="[groupsSize]" />
			</function>
			<function name="GetPerfMonitorCountersAMD" return="void" offset="?" dlflags="notlistable" category="AMD_performance_monitor" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="group" kind="value" type="UInt32" input="true" />
				<param name="numCounters" kind="array" type="Int32" input="false" compute="[1]" />
				<param name="maxActiveCounters" kind="array" type="Int32" input="false" compute="[1]" />
				<param name="counterSize" kind="value" type="SizeI" input="true" />
				<param name="counters" kind="array" type="UInt32" input="false" compute="[counterSize]" />
			</function>
			<function name="GetPerfMonitorGroupStringAMD" return="void" offset="?" dlflags="notlistable" category="AMD_performance_monitor" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="group" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="groupString" kind="array" type="Char" input="false" compute="[bufSize]" />
			</function>
			<function name="GetPerfMonitorCounterStringAMD" return="void" offset="?" dlflags="notlistable" category="AMD_performance_monitor" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="group" kind="value" type="UInt32" input="true" />
				<param name="counter" kind="value" type="UInt32" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="array" type="SizeI" input="false" compute="[1]" />
				<param name="counterString" kind="array" type="Char" input="false" compute="[bufSize]" />
			</function>
			<function name="GetPerfMonitorCounterInfoAMD" return="void" offset="?" dlflags="notlistable" category="AMD_performance_monitor" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="group" kind="value" type="UInt32" input="true" />
				<param name="counter" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="data" kind="array" type="Void" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GenPerfMonitorsAMD" return="void" offset="?" glxropcode="?" category="AMD_performance_monitor" version="1.2" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="monitors" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="DeletePerfMonitorsAMD" return="void" offset="?" glxropcode="?" category="AMD_performance_monitor" version="1.2" glxflags="ignore" >
				<param name="n" kind="value" type="SizeI" input="true" />
				<param name="monitors" kind="array" type="UInt32" input="false" compute="[n]" />
			</function>
			<function name="SelectPerfMonitorCountersAMD" return="void" offset="?" glxropcode="?" category="AMD_performance_monitor" version="1.2" glxflags="ignore" >
				<param name="monitor" kind="value" type="UInt32" input="true" />
				<param name="enable" kind="value" type="Boolean" input="true" />
				<param name="group" kind="value" type="UInt32" input="true" />
				<param name="numCounters" kind="value" type="Int32" input="true" />
				<param name="counterList" kind="array" type="UInt32" input="false" compute="[numCounters]" />
			</function>
			<function name="BeginPerfMonitorAMD" return="void" offset="?" glxropcode="?" category="AMD_performance_monitor" version="1.2" glxflags="ignore" >
				<param name="monitor" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EndPerfMonitorAMD" return="void" offset="?" glxropcode="?" category="AMD_performance_monitor" version="1.2" glxflags="ignore" >
				<param name="monitor" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetPerfMonitorCounterDataAMD" return="void" offset="?" dlflags="notlistable" category="AMD_performance_monitor" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="monitor" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="dataSize" kind="value" type="SizeI" input="true" />
				<param name="data" kind="array" type="UInt32" input="false" compute="[dataSize]" />
				<param name="bytesWritten" kind="array" type="Int32" input="false" compute="[1]" />
			</function>
			<function name="TessellationFactorAMD" return="void" offset="?" version="2.0" category="AMD_vertex_shader_tessellator" glxsingle="?" glxflags="ignore" >
				<param name="factor" kind="value" type="Float32" input="true" />
			</function>
			<function name="TessellationModeAMD" return="void" offset="?" version="2.0" category="AMD_vertex_shader_tessellator" glxsingle="?" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="ProvokingVertexEXT" return="void" offset="?" version="2.1" category="EXT_provoking_vertex" glxsingle="?" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendFuncIndexedAMD" return="void" offset="?" glxropcode="?" category="AMD_draw_buffers_blend" version="2.0" glxflags="ignore" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="src" kind="value" type="GLenum" input="true" />
				<param name="dst" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendFuncSeparateIndexedAMD" return="void" offset="?" glxropcode="?" category="AMD_draw_buffers_blend" version="2.0" glxflags="ignore" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="srcRGB" kind="value" type="GLenum" input="true" />
				<param name="dstRGB" kind="value" type="GLenum" input="true" />
				<param name="srcAlpha" kind="value" type="GLenum" input="true" />
				<param name="dstAlpha" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendEquationIndexedAMD" return="void" offset="?" glxropcode="?" category="AMD_draw_buffers_blend" version="2.0" glxflags="ignore" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="mode" kind="value" type="GLenum" input="true" />
			</function>
			<function name="BlendEquationSeparateIndexedAMD" return="void" offset="?" glxropcode="?" category="AMD_draw_buffers_blend" version="2.0" glxflags="ignore" >
				<param name="buf" kind="value" type="UInt32" input="true" />
				<param name="modeRGB" kind="value" type="GLenum" input="true" />
				<param name="modeAlpha" kind="value" type="GLenum" input="true" />
			</function>
			<function name="TextureRangeAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_texture_range" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[length]" />
			</function>
			<function name="GetTexParameterPointervAPPLE" return="void" offset="?" dlflags="notlistable" category="APPLE_texture_range" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="VoidPointer" input="false" compute="[1]" />
			</function>
			<function name="EnableVertexAttribAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_program_evaluators" version="1.5" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
			</function>
			<function name="DisableVertexAttribAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_program_evaluators" version="1.5" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
			</function>
			<function name="IsVertexAttribEnabledAPPLE" return="Boolean" offset="?" glxropcode="?" category="APPLE_vertex_program_evaluators" version="1.5" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
			</function>
			<function name="MapVertexAttrib1dAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_program_evaluators" version="1.5" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="UInt32" input="true" />
				<param name="u1" kind="value" type="CoordD" input="true" />
				<param name="u2" kind="value" type="CoordD" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="order" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordD" input="true" compute="[COMPSIZE(size/stride/order)]" />
			</function>
			<function name="MapVertexAttrib1fAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_program_evaluators" version="1.5" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="UInt32" input="true" />
				<param name="u1" kind="value" type="CoordF" input="true" />
				<param name="u2" kind="value" type="CoordF" input="true" />
				<param name="stride" kind="value" type="Int32" input="true" />
				<param name="order" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordF" input="true" compute="[COMPSIZE(size/stride/order)]" />
			</function>
			<function name="MapVertexAttrib2dAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_program_evaluators" version="1.5" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="UInt32" input="true" />
				<param name="u1" kind="value" type="CoordD" input="true" />
				<param name="u2" kind="value" type="CoordD" input="true" />
				<param name="ustride" kind="value" type="Int32" input="true" />
				<param name="uorder" kind="value" type="CheckedInt32" input="true" />
				<param name="v1" kind="value" type="CoordD" input="true" />
				<param name="v2" kind="value" type="CoordD" input="true" />
				<param name="vstride" kind="value" type="Int32" input="true" />
				<param name="vorder" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordD" input="true" compute="[COMPSIZE(size/ustride/uorder/vstride/vorder)]" />
			</function>
			<function name="MapVertexAttrib2fAPPLE" return="void" offset="?" glxropcode="?" category="APPLE_vertex_program_evaluators" version="1.5" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="UInt32" input="true" />
				<param name="u1" kind="value" type="CoordF" input="true" />
				<param name="u2" kind="value" type="CoordF" input="true" />
				<param name="ustride" kind="value" type="Int32" input="true" />
				<param name="uorder" kind="value" type="CheckedInt32" input="true" />
				<param name="v1" kind="value" type="CoordF" input="true" />
				<param name="v2" kind="value" type="CoordF" input="true" />
				<param name="vstride" kind="value" type="Int32" input="true" />
				<param name="vorder" kind="value" type="CheckedInt32" input="true" />
				<param name="points" kind="array" type="CoordF" input="true" compute="[COMPSIZE(size/ustride/uorder/vstride/vorder)]" />
			</function>
			<function name="ObjectPurgeableAPPLE" return="GLenum" offset="?" glxropcode="?" category="APPLE_object_purgeable" version="1.5" glxflags="ignore" >
				<param name="objectType" kind="value" type="GLenum" input="true" />
				<param name="name" kind="value" type="UInt32" input="true" />
				<param name="option" kind="value" type="GLenum" input="true" />
			</function>
			<function name="ObjectUnpurgeableAPPLE" return="GLenum" offset="?" glxropcode="?" category="APPLE_object_purgeable" version="1.5" glxflags="ignore" >
				<param name="objectType" kind="value" type="GLenum" input="true" />
				<param name="name" kind="value" type="UInt32" input="true" />
				<param name="option" kind="value" type="GLenum" input="true" />
			</function>
			<function name="GetObjectParameterivAPPLE" return="void" offset="?" dlflags="notlistable" category="APPLE_object_purgeable" glxsingle="?" version="1.5" glxflags="ignore" >
				<param name="objectType" kind="value" type="GLenum" input="true" />
				<param name="name" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="BeginVideoCaptureNV" return="void" offset="?" glxropcode="?" category="NV_video_capture" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
			</function>
			<function name="BindVideoCaptureStreamBufferNV" return="void" offset="?" glxropcode="?" category="NV_video_capture" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="frame_region" kind="value" type="GLenum" input="true" />
				<param name="offset" kind="value" type="BufferOffsetARB" input="true" />
			</function>
			<function name="BindVideoCaptureStreamTextureNV" return="void" offset="?" glxropcode="?" category="NV_video_capture" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="frame_region" kind="value" type="GLenum" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
			</function>
			<function name="EndVideoCaptureNV" return="void" offset="?" glxropcode="?" category="NV_video_capture" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetVideoCaptureivNV" return="void" offset="?" dlflags="notlistable" category="NV_video_capture" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVideoCaptureStreamivNV" return="void" offset="?" dlflags="notlistable" category="NV_video_capture" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVideoCaptureStreamfvNV" return="void" offset="?" dlflags="notlistable" category="NV_video_capture" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVideoCaptureStreamdvNV" return="void" offset="?" dlflags="notlistable" category="NV_video_capture" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="VideoCaptureNV" return="GLenum" offset="?" glxropcode="?" category="NV_video_capture" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="sequence_num" kind="reference" type="UInt32" input="false" />
				<param name="capture_time" kind="reference" type="UInt64EXT" input="false" />
			</function>
			<function name="VideoCaptureStreamParameterivNV" return="void" offset="?" glxropcode="?" category="NV_video_capture" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="VideoCaptureStreamParameterfvNV" return="void" offset="?" glxropcode="?" category="NV_video_capture" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="VideoCaptureStreamParameterdvNV" return="void" offset="?" glxropcode="?" category="NV_video_capture" version="1.2" glxflags="ignore" >
				<param name="video_capture_slot" kind="value" type="UInt32" input="true" />
				<param name="stream" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float64" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="CopyImageSubDataNV" return="void" offset="?" glxropcode="?" category="NV_copy_image" version="1.2" glxflags="ignore" >
				<param name="srcName" kind="value" type="UInt32" input="true" />
				<param name="srcTarget" kind="value" type="GLenum" input="true" />
				<param name="srcLevel" kind="value" type="Int32" input="true" />
				<param name="srcX" kind="value" type="Int32" input="true" />
				<param name="srcY" kind="value" type="Int32" input="true" />
				<param name="srcZ" kind="value" type="Int32" input="true" />
				<param name="dstName" kind="value" type="UInt32" input="true" />
				<param name="dstTarget" kind="value" type="GLenum" input="true" />
				<param name="dstLevel" kind="value" type="Int32" input="true" />
				<param name="dstX" kind="value" type="Int32" input="true" />
				<param name="dstY" kind="value" type="Int32" input="true" />
				<param name="dstZ" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
			</function>
			<function name="UseShaderProgramEXT" return="void" offset="?" glxropcode="?" category="EXT_separate_shader_objects" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="ActiveProgramEXT" return="void" offset="?" glxropcode="?" category="EXT_separate_shader_objects" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
			</function>
			<function name="CreateShaderProgramEXT" return="UInt32" offset="?" glxropcode="?" category="EXT_separate_shader_objects" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="string" kind="array" type="Char" input="true" compute="[]" />
			</function>
			<function name="MakeBufferResidentNV" return="void" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="access" kind="value" type="GLenum" input="true" />
			</function>
			<function name="MakeBufferNonResidentNV" return="void" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
			</function>
			<function name="IsBufferResidentNV" return="Boolean" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
			</function>
			<function name="MakeNamedBufferResidentNV" return="void" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="access" kind="value" type="GLenum" input="true" />
			</function>
			<function name="MakeNamedBufferNonResidentNV" return="void" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="IsNamedBufferResidentNV" return="Boolean" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetBufferParameterui64vNV" return="void" offset="?" dlflags="notlistable" category="NV_shader_buffer_load" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt64EXT" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetNamedBufferParameterui64vNV" return="void" offset="?" dlflags="notlistable" category="NV_shader_buffer_load" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt64EXT" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetIntegerui64vNV" return="void" offset="?" dlflags="notlistable" category="NV_shader_buffer_load" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="value" kind="value" type="GLenum" input="true" />
				<param name="result" kind="array" type="UInt64EXT" input="false" compute="[COMPSIZE(value)]" />
			</function>
			<function name="Uniformui64NV" return="void" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="value" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="Uniformui64vNV" return="void" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[count]" />
			</function>
			<function name="GetUniformui64vNV" return="void" offset="?" dlflags="notlistable" category="NV_shader_buffer_load" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="UInt64EXT" input="false" compute="[COMPSIZE(program/location)]" />
			</function>
			<function name="ProgramUniformui64NV" return="void" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="value" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="ProgramUniformui64vNV" return="void" offset="?" glxropcode="?" category="NV_shader_buffer_load" version="1.2" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[count]" />
			</function>
			<function name="BufferAddressRangeNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="address" kind="value" type="UInt64EXT" input="true" />
				<param name="length" kind="value" type="BufferSize" input="true" />
			</function>
			<function name="VertexFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="NormalFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="ColorFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="IndexFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="TexCoordFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="EdgeFlagFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="SecondaryColorFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="FogCoordFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="VertexAttribFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="normalized" kind="value" type="Boolean" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="VertexAttribIFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_buffer_unified_memory" version="1.2" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GetIntegerui64i_vNV" return="void" offset="?" dlflags="notlistable" category="NV_vertex_buffer_unified_memory" glxsingle="?" version="1.2" glxflags="ignore" >
				<param name="value" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="result" kind="array" type="UInt64EXT" input="false" compute="[COMPSIZE(value)]" />
			</function>
			<function name="TextureBarrierNV" return="void" offset="?" category="NV_texture_barrier" glxropcode="?" version="1.2" glxflags="ignore" />
			<function name="BindImageTextureEXT" return="void" offset="?" glxropcode="?" category="EXT_shader_image_load_store" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
				<param name="layered" kind="value" type="Boolean" input="true" />
				<param name="layer" kind="value" type="Int32" input="true" />
				<param name="access" kind="value" type="GLenum" input="true" />
				<param name="format" kind="value" type="Int32" input="true" />
			</function>
			<function name="MemoryBarrierEXT" return="void" offset="?" glxropcode="?" category="EXT_shader_image_load_store" version="4.1" glxflags="ignore" >
				<param name="barriers" kind="value" type="GLbitfield" input="true" />
			</function>
			<function name="VertexAttribL1dEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttribL2dEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttribL3dEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttribL4dEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Float64" input="true" />
				<param name="y" kind="value" type="Float64" input="true" />
				<param name="z" kind="value" type="Float64" input="true" />
				<param name="w" kind="value" type="Float64" input="true" />
			</function>
			<function name="VertexAttribL1dvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribL2dvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[2]" />
			</function>
			<function name="VertexAttribL3dvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[3]" />
			</function>
			<function name="VertexAttribL4dvEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Float64" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribLPointerEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="pointer" kind="array" type="Void" input="true" compute="[size]" />
			</function>
			<function name="GetVertexAttribLdvEXT" return="void" offset="?" dlflags="notlistable" category="EXT_vertex_attrib_64bit" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Float64" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="VertexArrayVertexAttribLOffsetEXT" return="void" offset="?" glxropcode="?" category="EXT_vertex_attrib_64bit" version="4.1" glxflags="ignore" >
				<param name="vaobj" kind="value" type="UInt32" input="true" />
				<param name="buffer" kind="value" type="UInt32" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="offset" kind="value" type="BufferOffset" input="true" />
			</function>
			<function name="ProgramSubroutineParametersuivNV" return="void" offset="?" glxropcode="?" category="NV_gpu_program5" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="params" kind="array" type="UInt32" input="true" compute="[count]" />
			</function>
			<function name="GetProgramSubroutineParameteruivNV" return="void" offset="?" dlflags="notlistable" category="NV_gpu_program5" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="param" kind="array" type="UInt32" input="false" compute="[COMPSIZE(target)]" />
			</function>
			<function name="Uniform1i64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="Uniform2i64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="Uniform3i64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
				<param name="z" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="Uniform4i64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
				<param name="z" kind="value" type="Int64EXT" input="true" />
				<param name="w" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="Uniform1i64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int64EXT" input="true" compute="[count]" />
			</function>
			<function name="Uniform2i64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int64EXT" input="true" compute="[COMPSIZE(count*2)]" />
			</function>
			<function name="Uniform3i64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int64EXT" input="true" compute="[COMPSIZE(count*3)]" />
			</function>
			<function name="Uniform4i64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int64EXT" input="true" compute="[COMPSIZE(count*4)]" />
			</function>
			<function name="Uniform1ui64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="Uniform2ui64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="Uniform3ui64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
				<param name="z" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="Uniform4ui64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
				<param name="z" kind="value" type="UInt64EXT" input="true" />
				<param name="w" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="Uniform1ui64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[count]" />
			</function>
			<function name="Uniform2ui64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[COMPSIZE(count*2)]" />
			</function>
			<function name="Uniform3ui64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[COMPSIZE(count*3)]" />
			</function>
			<function name="Uniform4ui64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[COMPSIZE(count*4)]" />
			</function>
			<function name="GetUniformi64vNV" return="void" offset="?" dlflags="notlistable" category="NV_gpu_shader5" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="params" kind="array" type="Int64EXT" input="false" compute="[COMPSIZE(location)]" />
			</function>
			<function name="ProgramUniform1i64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="ProgramUniform2i64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="ProgramUniform3i64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
				<param name="z" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="ProgramUniform4i64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
				<param name="z" kind="value" type="Int64EXT" input="true" />
				<param name="w" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="ProgramUniform1i64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int64EXT" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniform2i64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int64EXT" input="true" compute="[COMPSIZE(count*2)]" />
			</function>
			<function name="ProgramUniform3i64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int64EXT" input="true" compute="[COMPSIZE(count*3)]" />
			</function>
			<function name="ProgramUniform4i64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="Int64EXT" input="true" compute="[COMPSIZE(count*4)]" />
			</function>
			<function name="ProgramUniform1ui64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="ProgramUniform2ui64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="ProgramUniform3ui64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
				<param name="z" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="ProgramUniform4ui64NV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
				<param name="z" kind="value" type="UInt64EXT" input="true" />
				<param name="w" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="ProgramUniform1ui64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniform2ui64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[COMPSIZE(count*2)]" />
			</function>
			<function name="ProgramUniform3ui64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[COMPSIZE(count*3)]" />
			</function>
			<function name="ProgramUniform4ui64vNV" return="void" offset="?" glxropcode="?" category="NV_gpu_shader5" version="4.1" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64EXT" input="true" compute="[COMPSIZE(count*4)]" />
			</function>
			<function name="VertexAttribL1i64NV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="VertexAttribL2i64NV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="VertexAttribL3i64NV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
				<param name="z" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="VertexAttribL4i64NV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="Int64EXT" input="true" />
				<param name="y" kind="value" type="Int64EXT" input="true" />
				<param name="z" kind="value" type="Int64EXT" input="true" />
				<param name="w" kind="value" type="Int64EXT" input="true" />
			</function>
			<function name="VertexAttribL1i64vNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int64EXT" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribL2i64vNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int64EXT" input="true" compute="[2]" />
			</function>
			<function name="VertexAttribL3i64vNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int64EXT" input="true" compute="[3]" />
			</function>
			<function name="VertexAttribL4i64vNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="Int64EXT" input="true" compute="[4]" />
			</function>
			<function name="VertexAttribL1ui64NV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="VertexAttribL2ui64NV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="VertexAttribL3ui64NV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
				<param name="z" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="VertexAttribL4ui64NV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="x" kind="value" type="UInt64EXT" input="true" />
				<param name="y" kind="value" type="UInt64EXT" input="true" />
				<param name="z" kind="value" type="UInt64EXT" input="true" />
				<param name="w" kind="value" type="UInt64EXT" input="true" />
			</function>
			<function name="VertexAttribL1ui64vNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt64EXT" input="true" compute="[1]" />
			</function>
			<function name="VertexAttribL2ui64vNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt64EXT" input="true" compute="[2]" />
			</function>
			<function name="VertexAttribL3ui64vNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt64EXT" input="true" compute="[3]" />
			</function>
			<function name="VertexAttribL4ui64vNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="v" kind="array" type="UInt64EXT" input="true" compute="[4]" />
			</function>
			<function name="GetVertexAttribLi64vNV" return="void" offset="?" dlflags="notlistable" category="NV_vertex_attrib_integer_64bit" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="Int64EXT" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetVertexAttribLui64vNV" return="void" offset="?" dlflags="notlistable" category="NV_vertex_attrib_integer_64bit" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="params" kind="array" type="UInt64EXT" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="VertexAttribLFormatNV" return="void" offset="?" glxropcode="?" category="NV_vertex_attrib_integer_64bit" version="4.1" glxflags="ignore" >
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="size" kind="value" type="Int32" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GenNamesAMD" return="void" offset="?" glxropcode="?" category="AMD_name_gen_delete" version="4.1" glxflags="ignore" >
				<param name="identifier" kind="value" type="GLenum" input="true" />
				<param name="num" kind="value" type="UInt32" input="true" />
				<param name="names" kind="array" type="UInt32" input="false" compute="[num]" />
			</function>
			<function name="DeleteNamesAMD" return="void" offset="?" glxropcode="?" category="AMD_name_gen_delete" version="4.1" glxflags="ignore" >
				<param name="identifier" kind="value" type="GLenum" input="true" />
				<param name="num" kind="value" type="UInt32" input="true" />
				<param name="names" kind="array" type="UInt32" input="true" compute="[num]" />
			</function>
			<function name="IsNameAMD" return="Boolean" offset="?" glxropcode="?" category="AMD_name_gen_delete" version="4.1" glxflags="ignore" >
				<param name="identifier" kind="value" type="GLenum" input="true" />
				<param name="name" kind="value" type="UInt32" input="true" />
			</function>
			<function name="DebugMessageEnableAMD" return="void" offset="?" glxropcode="?" category="AMD_debug_output" version="4.1" glxflags="ignore" >
				<param name="category" kind="value" type="GLenum" input="true" />
				<param name="severity" kind="value" type="GLenum" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="ids" kind="array" type="UInt32" input="true" compute="[count]" />
				<param name="enabled" kind="value" type="Boolean" input="true" />
			</function>
			<function name="DebugMessageInsertAMD" return="void" offset="?" glxropcode="?" category="AMD_debug_output" version="4.1" glxflags="ignore" >
				<param name="category" kind="value" type="GLenum" input="true" />
				<param name="severity" kind="value" type="GLenum" input="true" />
				<param name="id" kind="value" type="UInt32" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="buf" kind="array" type="Char" input="true" compute="[length]" />
			</function>
			<function name="DebugMessageCallbackAMD" return="void" offset="?" glxropcode="?" category="AMD_debug_output" version="4.1" glxflags="ignore" >
				<param name="callback" kind="value" type="GLDEBUGPROCAMD" input="true" />
				<param name="userParam" kind="reference" type="Void" input="false" />
			</function>
			<function name="GetDebugMessageLogAMD" return="UInt32" offset="?" dlflags="notlistable" category="AMD_debug_output" glxsingle="?" version="4.1" glxflags="ignore" >
				<param name="count" kind="value" type="UInt32" input="true" />
				<param name="bufsize" kind="value" type="SizeI" input="true" />
				<param name="categories" kind="array" type="GLenum" input="false" compute="[count]" />
				<param name="severities" kind="array" type="UInt32" input="false" compute="[count]" />
				<param name="ids" kind="array" type="UInt32" input="false" compute="[count]" />
				<param name="lengths" kind="array" type="SizeI" input="false" compute="[count]" />
				<param name="message" kind="array" type="Char" input="false" compute="[bufsize]" />
			</function>
			<function name="VDPAUInitNV" return="void" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="vdpDevice" kind="reference" type="Void" input="true" />
				<param name="getProcAddress" kind="reference" type="Void" input="true" />
			</function>
			<function name="VDPAUFiniNV" return="void" offset="?" category="NV_vdpau_interop" glxropcode="?" version="4.1" glxflags="ignore" />
			<function name="VDPAURegisterVideoSurfaceNV" return="vdpauSurfaceNV" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="vdpSurface" kind="reference" type="Void" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="numTextureNames" kind="value" type="SizeI" input="true" />
				<param name="textureNames" kind="array" type="UInt32" input="true" compute="[numTextureNames]" />
			</function>
			<function name="VDPAURegisterOutputSurfaceNV" return="vdpauSurfaceNV" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="vdpSurface" kind="value" type="VoidPointer" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="numTextureNames" kind="value" type="SizeI" input="true" />
				<param name="textureNames" kind="array" type="UInt32" input="true" compute="[numTextureNames]" />
			</function>
			<function name="VDPAUIsSurfaceNV" return="void" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="surface" kind="value" type="vdpauSurfaceNV" input="true" />
			</function>
			<function name="VDPAUUnregisterSurfaceNV" return="void" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="surface" kind="value" type="vdpauSurfaceNV" input="true" />
			</function>
			<function name="VDPAUGetSurfaceivNV" return="void" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="surface" kind="value" type="vdpauSurfaceNV" input="true" />
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="bufSize" kind="value" type="SizeI" input="true" />
				<param name="length" kind="reference" type="SizeI" input="false" />
				<param name="values" kind="array" type="Int32" input="false" compute="[length]" />
			</function>
			<function name="VDPAUSurfaceAccessNV" return="void" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="surface" kind="value" type="vdpauSurfaceNV" input="true" />
				<param name="access" kind="value" type="GLenum" input="true" />
			</function>
			<function name="VDPAUMapSurfacesNV" return="void" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="numSurfaces" kind="value" type="SizeI" input="true" />
				<param name="surfaces" kind="array" type="vdpauSurfaceNV" input="true" compute="[numSurfaces]" />
			</function>
			<function name="VDPAUUnmapSurfacesNV" return="void" offset="?" glxropcode="?" category="NV_vdpau_interop" version="4.1" glxflags="ignore" >
				<param name="numSurface" kind="value" type="SizeI" input="true" />
				<param name="surfaces" kind="array" type="vdpauSurfaceNV" input="true" compute="[numSurface]" />
			</function>
			<function name="TexImage2DMultisampleCoverageNV" return="void" offset="?" glxropcode="?" category="NV_texture_multisample" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="coverageSamples" kind="value" type="SizeI" input="true" />
				<param name="colorSamples" kind="value" type="SizeI" input="true" />
				<param name="internalFormat" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="fixedSampleLocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TexImage3DMultisampleCoverageNV" return="void" offset="?" glxropcode="?" category="NV_texture_multisample" version="4.1" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="coverageSamples" kind="value" type="SizeI" input="true" />
				<param name="colorSamples" kind="value" type="SizeI" input="true" />
				<param name="internalFormat" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="fixedSampleLocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TextureImage2DMultisampleNV" return="void" offset="?" glxropcode="?" category="NV_texture_multisample" version="4.1" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalFormat" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="fixedSampleLocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TextureImage3DMultisampleNV" return="void" offset="?" glxropcode="?" category="NV_texture_multisample" version="4.1" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="samples" kind="value" type="SizeI" input="true" />
				<param name="internalFormat" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="fixedSampleLocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TextureImage2DMultisampleCoverageNV" return="void" offset="?" glxropcode="?" category="NV_texture_multisample" version="4.1" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="coverageSamples" kind="value" type="SizeI" input="true" />
				<param name="colorSamples" kind="value" type="SizeI" input="true" />
				<param name="internalFormat" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="fixedSampleLocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="TextureImage3DMultisampleCoverageNV" return="void" offset="?" glxropcode="?" category="NV_texture_multisample" version="4.1" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="coverageSamples" kind="value" type="SizeI" input="true" />
				<param name="colorSamples" kind="value" type="SizeI" input="true" />
				<param name="internalFormat" kind="value" type="Int32" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="fixedSampleLocations" kind="value" type="Boolean" input="true" />
			</function>
			<function name="SetMultisamplefvAMD" return="void" offset="?" glxropcode="?" category="AMD_sample_positions" version="3.2" glxflags="ignore" >
				<param name="pname" kind="value" type="GLenum" input="true" />
				<param name="index" kind="value" type="UInt32" input="true" />
				<param name="val" kind="array" type="Float32" input="true" compute="[2]" />
			</function>
			<function name="ImportSyncEXT" return="sync" offset="?" glxropcode="?" category="EXT_x11_sync_object" version="3.2" glxflags="ignore" >
				<param name="external_sync_type" kind="value" type="GLenum" input="true" />
				<param name="external_sync" kind="value" type="Intptr" input="true" />
				<param name="flags" kind="value" type="GLbitfield" input="true" />
			</function>
			<function name="MultiDrawArraysIndirectAMD" return="void" offset="?" glxropcode="?" category="AMD_multi_draw_indirect" version="4.0" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="indirect" kind="array" type="Void" input="true" compute="[]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="MultiDrawElementsIndirectAMD" return="void" offset="?" glxropcode="?" category="AMD_multi_draw_indirect" version="4.0" glxflags="ignore" >
				<param name="mode" kind="value" type="GLenum" input="true" />
				<param name="type" kind="value" type="GLenum" input="true" />
				<param name="indirect" kind="array" type="Void" input="true" compute="[]" />
				<param name="primcount" kind="value" type="SizeI" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
			</function>
			<function name="GenPathsNV" return="Path" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="range" kind="value" type="SizeI" input="true" />
			</function>
			<function name="DeletePathsNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="range" kind="value" type="SizeI" input="true" />
			</function>
			<function name="IsPathNV" return="Boolean" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
			</function>
			<function name="PathCommandsNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="numCommands" kind="value" type="SizeI" input="true" />
				<param name="commands" kind="array" type="PathCommand" input="true" compute="[numCommands]" />
				<param name="numCoords" kind="value" type="SizeI" input="true" />
				<param name="coordType" kind="value" type="PathCoordType" input="true" />
				<param name="coords" kind="array" type="Void" input="true" compute="[COMPSIZE(numCoords,coordType)]" />
			</function>
			<function name="PathCoordsNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="numCoords" kind="value" type="SizeI" input="true" />
				<param name="coordType" kind="value" type="PathCoordType" input="true" />
				<param name="coords" kind="array" type="Void" input="true" compute="[COMPSIZE(numCoords,coordType)]" />
			</function>
			<function name="PathSubCommandsNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="commandStart" kind="value" type="SizeI" input="true" />
				<param name="commandsToDelete" kind="value" type="SizeI" input="true" />
				<param name="numCommands" kind="value" type="SizeI" input="true" />
				<param name="commands" kind="array" type="PathCommand" input="true" compute="[numCommands]" />
				<param name="numCoords" kind="value" type="SizeI" input="true" />
				<param name="coordType" kind="value" type="PathCoordType" input="true" />
				<param name="coords" kind="array" type="Void" input="true" compute="[COMPSIZE(numCoords,coordType)]" />
			</function>
			<function name="PathSubCoordsNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="coordStart" kind="value" type="SizeI" input="true" />
				<param name="numCoords" kind="value" type="SizeI" input="true" />
				<param name="coordType" kind="value" type="PathCoordType" input="true" />
				<param name="coords" kind="array" type="Void" input="true" compute="[COMPSIZE(numCoords,coordType)]" />
			</function>
			<function name="PathStringNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="format" kind="value" type="PathStringFormat" input="true" />
				<param name="length" kind="value" type="SizeI" input="true" />
				<param name="pathString" kind="array" type="Void" input="true" compute="[length]" />
			</function>
			<function name="PathGlyphsNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="firstPathName" kind="value" type="Path" input="true" />
				<param name="fontTarget" kind="value" type="PathFontTarget" input="true" />
				<param name="fontName" kind="array" type="Void" input="true" compute="[COMPSIZE(fontTarget,fontName)]" />
				<param name="fontStyle" kind="value" type="PathFontStyle" input="true" />
				<param name="numGlyphs" kind="value" type="SizeI" input="true" />
				<param name="type" kind="value" type="PathElementType" input="true" />
				<param name="charcodes" kind="array" type="Void" input="true" compute="[COMPSIZE(numGlyphs,type,charcodes)]" />
				<param name="handleMissingGlyphs" kind="value" type="PathHandleMissingGlyphs" input="true" />
				<param name="pathParameterTemplate" kind="value" type="Path" input="true" />
				<param name="emScale" kind="value" type="Float32" input="true" />
			</function>
			<function name="PathGlyphRangeNV" return="void" version="1.1" category="NV_path_rendering" dlflags="prepad" >
				<param name="firstPathName" kind="value" type="Path" input="true" />
				<param name="fontTarget" kind="value" type="PathFontTarget" input="true" />
				<param name="fontName" kind="array" type="Void" input="true" compute="[COMPSIZE(fontTarget,fontName)]" />
				<param name="fontStyle" kind="value" type="PathFontStyle" input="true" />
				<param name="firstGlyph" kind="value" type="UInt32" input="true" />
				<param name="numGlyphs" kind="value" type="SizeI" input="true" />
				<param name="handleMissingGlyphs" kind="value" type="PathHandleMissingGlyphs" input="true" />
				<param name="pathParameterTemplate" kind="value" type="Path" input="true" />
				<param name="emScale" kind="value" type="Float32" input="true" />
			</function>
			<function name="WeightPathsNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="resultPath" kind="value" type="Path" input="true" />
				<param name="numPaths" kind="value" type="SizeI" input="true" />
				<param name="paths" kind="array" type="Path" input="true" compute="[numPaths]" />
				<param name="weights" kind="array" type="Float32" input="true" compute="[numPaths]" />
			</function>
			<function name="CopyPathNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="resultPath" kind="value" type="Path" input="true" />
				<param name="srcPath" kind="value" type="Path" input="true" />
			</function>
			<function name="InterpolatePathsNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="resultPath" kind="value" type="Path" input="true" />
				<param name="pathA" kind="value" type="Path" input="true" />
				<param name="pathB" kind="value" type="Path" input="true" />
				<param name="weight" kind="value" type="Float32" input="true" />
			</function>
			<function name="TransformPathNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="resultPath" kind="value" type="Path" input="true" />
				<param name="srcPath" kind="value" type="Path" input="true" />
				<param name="transformType" kind="value" type="PathTransformType" input="true" />
				<param name="transformValues" kind="array" type="Float32" input="true" compute="[COMPSIZE(transformType)]" />
			</function>
			<function name="PathParameterivNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="pname" kind="value" type="PathParameter" input="true" />
				<param name="value" kind="array" type="Int32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PathParameteriNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="pname" kind="value" type="PathParameter" input="true" />
				<param name="value" kind="value" type="Int32" input="true" />
			</function>
			<function name="PathParameterfvNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="pname" kind="value" type="PathParameter" input="true" />
				<param name="value" kind="array" type="Float32" input="true" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="PathParameterfNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="pname" kind="value" type="PathParameter" input="true" />
				<param name="value" kind="value" type="Float32" input="true" />
			</function>
			<function name="PathDashArrayNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="dashCount" kind="value" type="SizeI" input="true" />
				<param name="dashArray" kind="array" type="Float32" input="true" compute="[dashCount]" />
			</function>
			<function name="PathStencilFuncNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="func" kind="value" type="StencilFunction" input="true" />
				<param name="ref" kind="value" type="ClampedStencilValue" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
			</function>
			<function name="PathStencilDepthOffsetNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="factor" kind="value" type="Float32" input="true" />
				<param name="units" kind="value" type="Float32" input="true" />
			</function>
			<function name="StencilFillPathNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="fillMode" kind="value" type="PathFillMode" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
			</function>
			<function name="StencilStrokePathNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="reference" kind="value" type="StencilValue" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
			</function>
			<function name="StencilFillPathInstancedNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="numPaths" kind="value" type="SizeI" input="true" />
				<param name="pathNameType" kind="value" type="PathElementType" input="true" />
				<param name="paths" kind="array" type="PathElement" input="true" compute="[COMPSIZE(numPaths,pathNameType,paths)]" />
				<param name="pathBase" kind="value" type="Path" input="true" />
				<param name="fillMode" kind="value" type="PathFillMode" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
				<param name="transformType" kind="value" type="PathTransformType" input="true" />
				<param name="transformValues" kind="array" type="Float32" input="true" compute="[COMPSIZE(numPaths,transformType)]" />
			</function>
			<function name="StencilStrokePathInstancedNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="numPaths" kind="value" type="SizeI" input="true" />
				<param name="pathNameType" kind="value" type="PathElementType" input="true" />
				<param name="paths" kind="array" type="PathElement" input="true" compute="[COMPSIZE(numPaths,pathNameType,paths)]" />
				<param name="pathBase" kind="value" type="Path" input="true" />
				<param name="reference" kind="value" type="StencilValue" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
				<param name="transformType" kind="value" type="PathTransformType" input="true" />
				<param name="transformValues" kind="array" type="Float32" input="true" compute="[COMPSIZE(numPaths,transformType)]" />
			</function>
			<function name="PathCoverDepthFuncNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="func" kind="value" type="DepthFunction" input="true" />
			</function>
			<function name="PathColorGenNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="color" kind="value" type="PathColor" input="true" />
				<param name="genMode" kind="value" type="PathGenMode" input="true" />
				<param name="colorFormat" kind="value" type="PathColorFormat" input="true" />
				<param name="coeffs" kind="array" type="Float32" input="true" compute="[COMPSIZE(genMode,colorFormat)]" />
			</function>
			<function name="PathTexGenNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="texCoordSet" kind="value" type="PathColor" input="true" />
				<param name="genMode" kind="value" type="PathGenMode" input="true" />
				<param name="components" kind="value" type="Int32" input="true" />
				<param name="coeffs" kind="array" type="Float32" input="true" compute="[COMPSIZE(genMode,components)]" />
			</function>
			<function name="PathFogGenNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="genMode" kind="value" type="PathGenMode" input="true" />
			</function>
			<function name="CoverFillPathNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="coverMode" kind="value" type="PathCoverMode" input="true" />
			</function>
			<function name="CoverStrokePathNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="coverMode" kind="value" type="PathCoverMode" input="true" />
			</function>
			<function name="CoverFillPathInstancedNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="numPaths" kind="value" type="SizeI" input="true" />
				<param name="pathNameType" kind="value" type="PathElementType" input="true" />
				<param name="paths" kind="array" type="PathElement" input="true" compute="[COMPSIZE(numPaths,pathNameType,paths)]" />
				<param name="pathBase" kind="value" type="Path" input="true" />
				<param name="coverMode" kind="value" type="PathCoverMode" input="true" />
				<param name="transformType" kind="value" type="PathTransformType" input="true" />
				<param name="transformValues" kind="array" type="Float32" input="true" compute="[COMPSIZE(numPaths,transformType)]" />
			</function>
			<function name="CoverStrokePathInstancedNV" return="void" version="1.1" category="NV_path_rendering" >
				<param name="numPaths" kind="value" type="SizeI" input="true" />
				<param name="pathNameType" kind="value" type="PathElementType" input="true" />
				<param name="paths" kind="array" type="PathElement" input="true" compute="[COMPSIZE(numPaths,pathNameType,paths)]" />
				<param name="pathBase" kind="value" type="Path" input="true" />
				<param name="coverMode" kind="value" type="PathCoverMode" input="true" />
				<param name="transformType" kind="value" type="PathTransformType" input="true" />
				<param name="transformValues" kind="array" type="Float32" input="true" compute="[COMPSIZE(numPaths,transformType)]" />
			</function>
			<function name="GetPathParameterivNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="pname" kind="value" type="PathParameter" input="true" />
				<param name="value" kind="array" type="Int32" input="false" compute="[4]" />
			</function>
			<function name="GetPathParameterfvNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="pname" kind="value" type="PathParameter" input="true" />
				<param name="value" kind="array" type="Float32" input="false" compute="[4]" />
			</function>
			<function name="GetPathCommandsNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="commands" kind="array" type="PathCommand" input="false" compute="[COMPSIZE(path)]" />
			</function>
			<function name="GetPathCoordsNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="coords" kind="array" type="Float32" input="false" compute="[COMPSIZE(path)]" />
			</function>
			<function name="GetPathDashArrayNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="dashArray" kind="array" type="Float32" input="false" compute="[COMPSIZE(path)]" />
			</function>
			<function name="GetPathMetricsNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="metricQueryMask" kind="value" type="PathMetricMask" input="true" />
				<param name="numPaths" kind="value" type="SizeI" input="true" />
				<param name="pathNameType" kind="value" type="PathElementType" input="true" />
				<param name="paths" kind="array" type="PathElement" input="true" compute="[COMPSIZE(numPaths,pathNameType,paths)]" />
				<param name="pathBase" kind="value" type="Path" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="metrics" kind="array" type="Float32" input="false" compute="[COMPSIZE(metricQueryMask,numPaths,stride)]" />
			</function>
			<function name="GetPathMetricRangeNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="metricQueryMask" kind="value" type="PathMetricMask" input="true" />
				<param name="firstPathName" kind="value" type="Path" input="true" />
				<param name="numPaths" kind="value" type="SizeI" input="true" />
				<param name="stride" kind="value" type="SizeI" input="true" />
				<param name="metrics" kind="array" type="Float32" input="false" compute="[COMPSIZE(metricQueryMask,numPaths,stride)]" />
			</function>
			<function name="GetPathSpacingNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="pathListMode" kind="value" type="PathListMode" input="true" />
				<param name="numPaths" kind="value" type="SizeI" input="true" />
				<param name="pathNameType" kind="value" type="PathElementType" input="true" />
				<param name="paths" kind="array" type="PathElement" input="true" compute="[COMPSIZE(numPaths,pathNameType,paths)]" />
				<param name="pathBase" kind="value" type="Path" input="true" />
				<param name="advanceScale" kind="value" type="Float32" input="true" />
				<param name="kerningScale" kind="value" type="Float32" input="true" />
				<param name="transformType" kind="value" type="PathTransformType" input="true" />
				<param name="returnedSpacing" kind="array" type="Float32" input="false" compute="[COMPSIZE(pathListMode,numPaths)]" />
			</function>
			<function name="GetPathColorGenivNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="color" kind="value" type="PathColor" input="true" />
				<param name="pname" kind="value" type="PathGenMode" input="true" />
				<param name="value" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetPathColorGenfvNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="color" kind="value" type="PathColor" input="true" />
				<param name="pname" kind="value" type="PathGenMode" input="true" />
				<param name="value" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetPathTexGenivNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="texCoordSet" kind="value" type="TextureUnit" input="true" />
				<param name="pname" kind="value" type="PathGenMode" input="true" />
				<param name="value" kind="array" type="Int32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="GetPathTexGenfvNV" return="void" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="texCoordSet" kind="value" type="TextureUnit" input="true" />
				<param name="pname" kind="value" type="PathGenMode" input="true" />
				<param name="value" kind="array" type="Float32" input="false" compute="[COMPSIZE(pname)]" />
			</function>
			<function name="IsPointInFillPathNV" return="Boolean" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="mask" kind="value" type="MaskedStencilValue" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
			</function>
			<function name="IsPointInStrokePathNV" return="Boolean" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="x" kind="value" type="Float32" input="true" />
				<param name="y" kind="value" type="Float32" input="true" />
			</function>
			<function name="GetPathLengthNV" return="Float32" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="startSegment" kind="value" type="SizeI" input="true" />
				<param name="numSegments" kind="value" type="SizeI" input="true" />
			</function>
			<function name="PointAlongPathNV" return="Boolean" version="1.1" category="NV_path_rendering" dlflags="notlistable" >
				<param name="path" kind="value" type="Path" input="true" />
				<param name="startSegment" kind="value" type="SizeI" input="true" />
				<param name="numSegments" kind="value" type="SizeI" input="true" />
				<param name="distance" kind="value" type="Float32" input="true" />
				<param name="x" kind="array" type="Float32" input="false" compute="[1]" />
				<param name="y" kind="array" type="Float32" input="false" compute="[1]" />
				<param name="tangentX" kind="array" type="Float32" input="false" compute="[1]" />
				<param name="tangentY" kind="array" type="Float32" input="false" compute="[1]" />
			</function>
			<function name="StencilOpValueAMD" return="void" offset="?" glxropcode="?" category="AMD_stencil_operation_extended" version="1.2" glxflags="ignore" >
				<param name="face" kind="value" type="StencilFaceDirection" input="true" />
				<param name="value" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetTextureHandleNV" return="UInt64" offset="?" category="NV_bindless_texture" dlflags="notlistable" glxsingle="?" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
			</function>
			<function name="GetTextureSamplerHandleNV" return="UInt64" offset="?" category="NV_bindless_texture" dlflags="notlistable" glxsingle="?" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="sampler" kind="value" type="UInt32" input="true" />
			</function>
			<function name="MakeTextureHandleResidentNV" return="void" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="handle" kind="value" type="UInt64" input="true" />
			</function>
			<function name="MakeTextureHandleNonResidentNV" return="void" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="handle" kind="value" type="UInt64" input="true" />
			</function>
			<function name="GetImageHandleNV" return="UInt64" offset="?" category="NV_bindless_texture" dlflags="notlistable" glxsingle="?" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="level" kind="value" type="Int32" input="true" />
				<param name="layered" kind="value" type="Boolean" input="true" />
				<param name="layer" kind="value" type="Int32" input="true" />
				<param name="format" kind="value" type="GLenum" input="true" />
			</function>
			<function name="MakeImageHandleResidentNV" return="void" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="handle" kind="value" type="UInt64" input="true" />
				<param name="access" kind="value" type="GLenum" input="true" />
			</function>
			<function name="MakeImageHandleNonResidentNV" return="void" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="handle" kind="value" type="UInt64" input="true" />
			</function>
			<function name="UniformHandleui64NV" return="void" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="value" kind="value" type="UInt64" input="true" />
			</function>
			<function name="UniformHandleui64vNV" return="void" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="value" kind="array" type="UInt64" input="true" compute="[count]" />
			</function>
			<function name="ProgramUniformHandleui64NV" return="void" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="value" kind="value" type="UInt64" input="true" />
			</function>
			<function name="ProgramUniformHandleui64vNV" return="void" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="program" kind="value" type="UInt32" input="true" />
				<param name="location" kind="value" type="Int32" input="true" />
				<param name="count" kind="value" type="SizeI" input="true" />
				<param name="values" kind="array" type="UInt64" input="true" compute="[count]" />
			</function>
			<function name="IsTextureHandleResidentNV" return="Boolean" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="handle" kind="value" type="UInt64" input="true" />
			</function>
			<function name="IsImageHandleResidentNV" return="Boolean" offset="?" glxropcode="?" category="NV_bindless_texture" glxflags="ignore" >
				<param name="handle" kind="value" type="UInt64" input="true" />
			</function>
			<function name="TexStorageSparseAMD" return="void" offset="?" glxropcode="?" category="AMD_sparse_texture" glxflags="ignore" >
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="internalFormat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="layers" kind="value" type="SizeI" input="true" />
				<param name="flags" kind="value" type="GLbitfield" input="true" />
			</function>
			<function name="TextureStorageSparseAMD" return="void" offset="?" glxropcode="?" category="AMD_sparse_texture" glxflags="ignore" >
				<param name="texture" kind="value" type="UInt32" input="true" />
				<param name="target" kind="value" type="GLenum" input="true" />
				<param name="internalFormat" kind="value" type="GLenum" input="true" />
				<param name="width" kind="value" type="SizeI" input="true" />
				<param name="height" kind="value" type="SizeI" input="true" />
				<param name="depth" kind="value" type="SizeI" input="true" />
				<param name="layers" kind="value" type="SizeI" input="true" />
				<param name="flags" kind="value" type="GLbitfield" input="true" />
			</function>
		</function-defs>
	</functions>
</specification>